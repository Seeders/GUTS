I have created my own app engine i call GUTS.   the app engine is running an app called ECSGame (entity component system game), and the ECSGame is running the autobattle game (currently titled 'TurnBasedWarfare' even though it is not really turn based).

All game data is stored in a json file and accessed by this.game.getCollections().  

it starts with game.html which loads the Engine.js that processes the app and loads required modules with ModuleManager.

the ModuleManager will read the apps config (collections.configs.game) and loads the required libraries (including ECSGame).

The config also specifies what library class to use to load the game (GameLoader.js), and what interface to load (main.html and main.css) as the main interface for the app.

GameLoader in this instance, among other things, tells SceneManager to load the 'main' scene (collections.scenes.main)

The main scene is a json object that has a list of managers, systems, and classes the scene requires to run. 


I am creating a fantasy themed auto battle game with a design similar to mechabellum.

units spawn in squads of 1-8 units

The units are designed around an attribute wheel with 6 base classes, each with 3 specializations.

The base classes are based on their attributes: Strength, Dexterity, Intelligence, and three hybrid classes: str/dex, str/int, dex/int

strength: Barbarian (8 units)
specializations: Berserker, Gladiator, Warlord

strength/dexterity: Soldier (6 units)
specializations: Crossbowman, Hoplite, Knight

dexterity: Archer (3 units)
specializations: BeastMaster, Ranger, Trapper

dexterity/intelligence: Rogue (1 unit)
specializations: Assassin, Saboteur, Trickster

intelligence: Apprentice (3 units)
specializations: Mage, Enchanter, Necromancer

intelligence/strength: Acolyte (6 units)
specializations: Paladin, Oathbreaker, Templar
