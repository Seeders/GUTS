const DEFAULT_PROJECT_CONFIG = {
  "objectTypes": {
    "configs": {
      "game": {
        "gridSize": 48,
        "imageSize": 128,
        "canvasWidth": 1536,
        "canvasHeight": 768,
        "html": "<div id=\"gameContainer\">\n    <div id=\"waveInfo\">\n        <span>Wave: <span id=\"waveDisplay\">1</span></span>             \n        <div class=\"progress-bar\">\n            <div class=\"progress-fill\" id=\"waveProgress\"></div>\n        </div>\n    </div>\n    <div id=\"statsContainer\">\n        <div id=\"stats\">\n            <div class=\"stat\">\n                <div class=\"stat-icon\" style=\"background-color: var(--gold-color);\"></div>\n                <span>Gold: <span id=\"shardsDisplay\">50</span></span>                 \n            </div>\n            <div class=\"stat\">\n                <div class=\"stat-icon\" style=\"background-color: var(--essence-color);\"></div>\n                <span>Essence: <span id=\"essenceDisplay\">0</span>/<span id=\"essenceNeededDisplay\">100</span></span>                 \n            </div>\n            <div class=\"stat\">\n                <div class=\"stat-icon\" style=\"background-color: var(--essence-color);\"></div>\n                <span>Population: <span id=\"populationDisplay\">0</span>/<span id=\"maxPopulationDisplay\">5</span></span>                 \n            </div>\n            <div class=\"stat\">\n                <div class=\"stat-icon\" style=\"background-color: var(--health-color);\"></div>\n                <span>Core: <span id=\"hpDisplay\">100</span></span>                 \n            </div>\n        </div>\n    </div>\n    <canvas id=\"gameCanvas\" width=\"1536\" height=\"768\"></canvas>\n    <canvas id=\"mapCanvas\" style=\"display:none\" width=\"800\" height=\"600\"></canvas>\n    <div id=\"towerMenu\">\n        <div class=\"tower-option\" data-type=\"sentry\">Photon Sentry (25)</div>\n        <div class=\"tower-option\" data-type=\"fusionCore\">Fusion Core (50)</div>\n        <div class=\"tower-option\" data-type=\"barracks\">Barracks (100)</div>\n        <div class=\"tower-option\" data-type=\"fabricator\">Fabricator (200)</div>\n        <div class=\"tower-option\" data-type=\"teslaCoil\">Tesla Coil (70)</div>\n        <div class=\"tower-option\" data-type=\"missileLauncher\">Missile Launcher (90)</div>\n        <div class=\"tower-option\" data-type=\"chrono\">Chrono Defibrilator (100)</div>\n        <div class=\"tower-option\" data-type=\"guardTower\">Guard Tower (70)</div>\n    </div>\n    <button id=\"startGameBtn\">Start Game</button>     \n</div>\n<div id=\"overlay\"></div>\n<div id=\"upgradeMenu\">\n    <h2>Level Up! Choose an Upgrade:</h2>\n    <div id=\"upgradeOptions\"></div>\n</div>\n<div id=\"tooltip\" style=\"display: none;\"></div>\n<div id=\"gameOverMenu\">\n    <h2>Home Destroyed!</h2>\n    <p>You survived <span id=\"gameOverWave\">0</span> waves</p>\n    <button class=\"menu-button\" \"=\"\">Try Again</button>     \n</div>\n<div id=\"victoryMenu\">\n    <h2>Victory!</h2>\n    <p>You've successfully defended your Home through all waves!</p>\n    <button class=\"menu-button\">Play Again</button>     \n</div>\n",
        "css": ":root {\n\t/* Solid hex colors */\n\t--primary-dark: #0f2418;\n\t/* Deep forest green */\n\t--primary-bg: #1a3526;\n\t/* Dark moss green */\n\t--secondary-bg: #224031;\n\t/* Muted pine green */\n\t--accent-color: #4a7c59;\n\t/* Fresh green (main accent) - matches grass */\n\t--bright-accent: #5a9e6f;\n\t/* Lighter, vibrant green */\n\t--highlight-color: #6abe54;\n\t/* Soft green highlight - matches necroOrb */\n\t--shadow-color: #3a443c;\n\t/* Darker green for shadows */\n\t--text-color: #f7f7f0;\n\t/* Off-white for readability - matches our palette */\n\t--gold-color: #e3d163;\n\t/* Warm gold - matches goldMine inner */\n\t--essence-color: #7047a3;\n\t/* Purple for essence - matches necromancer color */\n\t--health-color: #4a7c59;\n\t/* Forest green - matches grass */\n\t/* Opacity variables for use with solid colors */\n\t--semi-transparent: 0.6;\n\t--high-transparent: 0.8;\n\t--very-high-transparent: 0.95;\n\t--low-transparent: 0.3;\n\t--overlay-transparent: 0.75;\n\t--hover-transparent: 0.9;\n\t--full-transparent: 0.98;\n\t--near-full-transparent: 0.99;\n}\n\n* {\n\tmargin: 0;\n\tpadding: 0;\n\tbox-sizing: border-box;\n}\n\nbody {\n\tmargin: 0;\n\tpadding: 0;\n\tbackground-color: var(--primary-dark);\n\tbackground-image: radial-gradient(circle at center, var(--primary-bg) 0%, var(--primary-dark) 100%);\n\tcolor: var(--text-color);\n\tfont-family: 'Crimson Pro', serif;\n\toverflow: hidden;\n\tline-height: 1.6;\n}\n\n#gameContainer {\n\tposition: relative;\n\twidth: 100vw;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tgap: 1.5rem;\n}\n\ncanvas {\n\tborder: 2px solid var(--accent-color);\n\tbox-shadow: 0 0 30px var(--shadow-color);\n\tbackground-color: var(--secondary-bg);\n\tmax-width: 90%;\n\tborder-radius: 8px;\n\ttransition: transform 0.3s ease;\n}\n\n#towerMenu {\n\twidth: 800px;\n\tmax-width: 90%;\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tgap: 12px;\n\tjustify-content: center;\n\tpadding: 15px;\n\tbackground: var(--primary-dark);\n\tborder-radius: 10px;\n\tborder: 1px solid var(--accent-color);\n\tborder-opacity: var(--low-transparent);\n\t/* Note: This won't work directly; see below */\n\tbackdrop-filter: blur(5px);\n}\n\n.tower-option {\n\tpadding: 8px 14px;\n\tbackground: linear-gradient(to bottom, var(--accent-color), var(--secondary-bg));\n\topacity: var(--high-transparent);\n\tborder: 1px solid var(--accent-color);\n\tcolor: var(--text-color);\n\tcursor: pointer;\n\ttransition: all 0.3s;\n\tborder-radius: 6px;\n\tmin-width: 110px;\n\ttext-align: center;\n\tfont-family: 'Cinzel', serif;\n\tfont-weight: 500;\n\tletter-spacing: 0.5px;\n\ttext-shadow: 0 1px 3px #000;\n\t/* Black shadow, no rgba */\n\tbox-shadow: 0 3px 6px #000;\n\t/* Black shadow, no rgba */\n}\n\n.tower-option:hover {\n\tbackground: linear-gradient(to bottom, var(--bright-accent), var(--accent-color));\n\topacity: var(--hover-transparent);\n\ttransform: translateY(-3px);\n\tbox-shadow: 0 6px 12px #000;\n}\n\n.tower-option:active {\n\ttransform: translateY(0);\n\tbox-shadow: 0 2px 4px #000;\n}\n\n#statsContainer {\n\twidth: 800px;\n\tmax-width: 90%;\n\tpadding: 12px;\n\tbackground: var(--primary-dark);\n\tborder-radius: 10px;\n\tborder: 1px solid var(--accent-color);\n\tborder-opacity: var(--low-transparent);\n\t/* Note: This won't work directly; see below */\n\tbackdrop-filter: blur(5px);\n}\n\n#stats {\n\tdisplay: flex;\n\tjustify-content: space-around;\n\tgap: 20px;\n\tflex-wrap: wrap;\n}\n\n.stat {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 8px;\n\tfont-size: 1.1rem;\n}\n\n.stat-icon {\n\twidth: 24px;\n\theight: 24px;\n\tborder-radius: 50%;\n\tbox-shadow: 0 0 8px #000;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n#upgradeMenu {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tbackground: linear-gradient(to bottom, var(--secondary-bg), var(--primary-dark));\n\topacity: var(--very-high-transparent);\n\tcolor: var(--text-color);\n\tpadding: 25px;\n\tborder-radius: 12px;\n\tborder: 2px solid var(--accent-color);\n\tdisplay: none;\n\tz-index: 10;\n\twidth: 450px;\n\tbox-shadow: 0 0 40px var(--shadow-color);\n\tbackdrop-filter: blur(10px);\n}\n\n#upgradeMenu h2 {\n\ttext-align: center;\n\tcolor: var(--highlight-color);\n\tmargin-top: 0;\n\tborder-bottom: 1px solid var(--accent-color);\n\tpadding-bottom: 15px;\n\tfont-family: 'Cinzel', serif;\n\tletter-spacing: 1px;\n\tfont-weight: 700;\n}\n\n.upgrade-option {\n\tmargin: 18px 0;\n\tpadding: 18px;\n\tbackground: linear-gradient(to right, var(--secondary-bg), var(--primary-bg));\n\topacity: var(--high-transparent);\n\tcursor: pointer;\n\tborder-radius: 8px;\n\ttransition: all 0.3s;\n\tdisplay: flex;\n\talign-items: center;\n\tborder: 1px solid var(--accent-color);\n\tborder-opacity: var(--low-transparent);\n\t/* Note: This won't work directly; see below */\n\tbox-shadow: 0 4px 8px #000;\n}\n\n.upgrade-option:hover {\n\tbackground: linear-gradient(to right, var(--accent-color), var(--bright-accent));\n\topacity: var(--hover-transparent);\n\ttransform: translateX(8px);\n\tbox-shadow: 0 6px 12px #000;\n}\n\n.upgrade-icon {\n\twidth: 48px;\n\theight: 48px;\n\tmargin-right: 18px;\n\tbackground: linear-gradient(135deg, var(--accent-color), var(--secondary-bg));\n\tborder-radius: 8px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-size: 22px;\n\tbox-shadow: 0 3px 6px #000;\n}\n\n.upgrade-desc {\n\tflex-grow: 1;\n}\n\n.upgrade-title {\n\tfont-weight: bold;\n\tmargin-bottom: 6px;\n\tcolor: var(--highlight-color);\n\tfont-size: 1.2rem;\n\tfont-family: 'Cinzel', serif;\n}\n\n#overlay {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: #000;\n\topacity: var(--overlay-transparent);\n\tdisplay: none;\n\tz-index: 5;\n\tbackdrop-filter: blur(3px);\n}\n\n#waveInfo {\n\tposition: absolute;\n\ttop: 15px;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tbackground: linear-gradient(to right, var(--secondary-bg), var(--primary-bg));\n\topacity: var(--high-transparent);\n\tpadding: 8px 20px;\n\tborder-radius: 20px;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 15px;\n\tbox-shadow: 0 4px 12px #000;\n\tborder: 1px solid var(--accent-color);\n\tborder-opacity: var(--low-transparent);\n\t/* Note: This won't work directly; see below */\n\tbackdrop-filter: blur(5px);\n}\n\n#waveDisplay {\n\tfont-weight: bold;\n\tcolor: var(--highlight-color);\n}\n\n.progress-bar {\n\twidth: 220px;\n\theight: 12px;\n\tbackground: var(--primary-dark);\n\tborder-radius: 6px;\n\toverflow: hidden;\n\tbox-shadow: inset 0 1px 3px #000;\n\tborder: 1px solid var(--accent-color);\n\tborder-opacity: var(--low-transparent);\n\t/* Note: This won't work directly; see below */\n}\n\n.progress-fill {\n\theight: 100%;\n\tbackground: linear-gradient(to right, var(--accent-color), var(--highlight-color));\n\twidth: 0%;\n\tbox-shadow: 0 0 8px var(--shadow-color);\n\ttransition: width 0.3s ease;\n}\n\n#startGameBtn {\n\tpadding: 12px 35px;\n\tbackground: linear-gradient(to bottom, var(--bright-accent), var(--accent-color));\n\tcolor: white;\n\tborder: none;\n\tborder-radius: 30px;\n\tcursor: pointer;\n\tfont-family: 'Cinzel', serif;\n\tfont-weight: 500;\n\tfont-size: 1.2rem;\n\ttransition: all 0.3s;\n\tbox-shadow: 0 6px 12px #000;\n\ttext-shadow: 0 1px 2px #000;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tz-index: 20;\n}\n\n#startGameBtn:hover {\n\tbackground: linear-gradient(to bottom, var(--highlight-color), var(--bright-accent));\n\ttransform: translate(-50%, -50%) scale(1.05);\n\tbox-shadow: 0 8px 16px #000;\n}\n\n#startGameBtn:active {\n\ttransform: translate(-50%, -50%) scale(1);\n\tbox-shadow: 0 4px 8px #000;\n}\n\n#tooltip {\n\tposition: absolute;\n\tbackground: linear-gradient(to bottom, var(--primary-dark), var(--primary-dark));\n\topacity: var(--very-high-transparent);\n\tcolor: var(--text-color);\n\tpadding: 12px 15px;\n\tborder-radius: 8px;\n\tdisplay: none;\n\tz-index: 100;\n\tborder: 1px solid var(--accent-color);\n\tpointer-events: none;\n\tmax-width: 280px;\n\tbox-shadow: 0 0 20px var(--shadow-color);\n\tfont-size: 0.95rem;\n\tbackdrop-filter: blur(5px);\n}\n\n#gameOverMenu,\n#victoryMenu {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\tbackground: linear-gradient(to bottom, var(--secondary-bg), var(--primary-dark));\n\topacity: var(--full-transparent);\n\tcolor: white;\n\tpadding: 40px;\n\ttext-align: center;\n\tborder-radius: 15px;\n\tborder: 3px solid var(--accent-color);\n\tz-index: 20;\n\tdisplay: none;\n\tbox-shadow: 0 0 60px var(--shadow-color);\n\tbackdrop-filter: blur(10px);\n\tmin-width: 350px;\n}\n\n#gameOverMenu h2,\n#victoryMenu h2 {\n\tcolor: var(--highlight-color);\n\tfont-size: 32px;\n\tmargin-bottom: 20px;\n\tfont-family: 'Cinzel', serif;\n\ttext-shadow: 0 2px 4px #000;\n}\n\n#gameOverMenu p,\n#victoryMenu p {\n\tfont-size: 18px;\n\tmargin-bottom: 25px;\n\tline-height: 1.6;\n}\n\n.menu-button {\n\tmargin-top: 25px;\n\tpadding: 12px 25px;\n\tbackground: linear-gradient(to bottom, var(--bright-accent), var(--accent-color));\n\tborder: none;\n\tcolor: white;\n\tcursor: pointer;\n\tborder-radius: 8px;\n\ttransition: all 0.3s;\n\tfont-family: 'Cinzel', serif;\n\tfont-size: 16px;\n\tletter-spacing: 1px;\n\tbox-shadow: 0 4px 8px #000;\n\ttext-shadow: 0 1px 2px #000;\n}\n\n.menu-button:hover {\n\tbackground: linear-gradient(to bottom, var(--highlight-color), var(--bright-accent));\n\ttransform: scale(1.05) translateY(-3px);\n\tbox-shadow: 0 6px 15px #000;\n}\n\n.menu-button:active {\n\ttransform: scale(1) translateY(0);\n\tbox-shadow: 0 3px 6px #000;\n}\n\n/* Stat icons with custom styling */\n#shardsDisplay {\n\tcolor: var(--gold-color);\n\tfont-weight: 600;\n}\n\n#essenceDisplay,\n#essenceNeededDisplay {\n\tcolor: var(--essence-color);\n\tfont-weight: 600;\n}\n\n#populationDisplay,\n#maxPopulationDisplay {\n\tcolor: var(--essence-color);\n\tfont-weight: 600;\n}\n\n#hpDisplay {\n\tcolor: var(--health-color);\n\tfont-weight: 600;\n}\n\n#waveDisplay {\n\tdisplay: inline-block;\n}",
        "title": "TD Game",
        "isIsometric": true,
        "libraries": [
          "threejs",
          "GLTFLoader",
          "ShapeFactory",
          "ImageManager",
          "SpatialGrid",
          "CoordinateTranslator",
          "CanvasUtility",
          "TerrainImageProcessor",
          "TileMap",
          "Entity",
          "Component",
          "GameState"
        ]
      },
      "editor": {
        "title": "Editor Config",
        "editorCategories": "",
        "theme": "videoGame2",
        "propertyModules": [
          "terrainModule",
          "graphicsModule",
          "scriptModule",
          "aiPromptModule",
          "audioModule",
          "exportScriptModule"
        ],
        "path": "/"
      },
      "ai": {
        "title": "AI",
        "aiEndPoint": "http://10.0.0.178:11434/api/generate",
        "aiModel": "deepseek-r1:32b",
        "defaultPrompt": "I am developing a 2D tower defense game featuring a simple 3d art style.  Generate a new ${type} object based on the following context.    Please provide ONLY a valid JSON object with keys MATCHING EXACTLY to the context above. It absolutely MUST have an appropriate 'id' field. Ensure all existing key types are maintained. Do not wrap the json object with any other text."
      },
      "state": {
        "level": "level1",
        "enemies": [],
        "bloodShards": 200,
        "essence": 0,
        "essenceToNextLevel": 100,
        "bloodCoreHP": 1000,
        "mousePosition": "{ x: 0, y: 0, isoX: 0, isoY: 0, gridX: 0, gridY: 0 }",
        "towers": [],
        "projectiles": [],
        "summons": "[]",
        "others": "[]",
        "waveSets": [],
        "currentWaveIds": "[]",
        "currentWaveEnemies": "[]",
        "enemiesSpawned": "[]",
        "wave": "",
        "isPaused": true,
        "isLevelingUp": false,
        "timeScale": 1,
        "gameOver": false,
        "victory": false,
        "round": 0,
        "waveDelay": 1,
        "modifierSet": "global"
      },
      "codeMirror": {
        "title": "Code Mirror",
        "theme": "codeMirrorTheme"
      }
    },
    "propertyModules": {
      "terrainModule": {
        "title": "Terrain Module",
        "container": "level-editor-container",
        "libraries": [
          "threejs",
          "ShapeFactory",
          "CoordinateTranslator",
          "ImageManager",
          "CanvasUtility",
          "TerrainImageProcessor",
          "TileMap",
          "terrainMapEditor"
        ],
        "propertyName": "tileMap",
        "className": "TerrainMapEditor",
        "interface": "terrainEditor",
        "inputElement": "textarea",
        "inputDataType": "json",
        "loadHook": "editTileMap",
        "saveHook": "saveTileMap"
      },
      "graphicsModule": {
        "title": "Graphics Module",
        "container": "graphics-editor-container",
        "libraries": [
          "threejs",
          "three.OrbitControls",
          "GLTFLoader",
          "ShapeFactory",
          "graphicsEditor"
        ],
        "propertyName": "render",
        "className": "GraphicsEditor",
        "interface": "graphicsEditor",
        "inputElement": "textarea",
        "inputDataType": "json",
        "loadHook": "renderGraphicsObject",
        "saveHook": "saveGraphicsObject"
      },
      "scriptModule": {
        "title": "Script Module",
        "container": "script-editor-container",
        "className": "ScriptEditor",
        "interface": "scriptEditor",
        "inputElement": "textarea",
        "inputDataType": "string",
        "libraries": [
          "scriptEditor"
        ],
        "propertyNames": "[\"script\", \"html\", \"css\"]",
        "loadHook": "editScript",
        "saveHook": "saveScript"
      },
      "aiPromptModule": {
        "title": "AI Prompt Module",
        "library": "aiPromptPanel",
        "className": "AIPromptPanel",
        "interface": "aiPromptPanel"
      },
      "audioModule": {
        "title": "Audio Module",
        "container": "audio-editor-container",
        "library": "audioEditor",
        "propertyName": "audio",
        "className": "AudioEditor",
        "interface": "audioEditor",
        "inputElement": "text",
        "inputDataType": "string",
        "loadHook": "editAudio",
        "saveHook": "saveAudio"
      },
      "exportScriptModule": {
        "title": "Export Scripts Module",
        "library": "ZipExporter",
        "className": "ZipExporterPanel"
      }
    },
    "entities": {
      "game": {
        "title": "Game",
        "components": [
          "mapManager",
          "waveManager",
          "upgradeManager",
          "game"
        ],
        "renderers": [
          "mapRenderer",
          "uiManager"
        ]
      },
      "enemy": {
        "title": "Enemy",
        "components": [
          "stats",
          "animator",
          "essenceBounty",
          "followPath",
          "spacialGridEntity",
          "arrayTracker"
        ],
        "renderers": [
          "renderer",
          "health",
          "energyShield"
        ]
      },
      "tower": {
        "title": "Tower",
        "components": [
          "stats",
          "animator",
          "arrayTracker",
          "leveler",
          "buildable",
          "populationBurden",
          "attacker"
        ],
        "renderers": [
          "renderer",
          "rangeIndicator"
        ]
      },
      "previewTower": {
        "title": "Preview Tower",
        "components": [
          "stats",
          "animator"
        ],
        "renderers": [
          "renderer",
          "rangeIndicator"
        ]
      },
      "projectile": {
        "title": "Projectile",
        "components": [
          "stats",
          "animator",
          "arrayTracker",
          "projectile"
        ],
        "renderers": [
          "renderer"
        ]
      },
      "hitEffect": {
        "title": "Hit Effect",
        "components": [
          "hitEffectParticle",
          "lifeSpan"
        ],
        "renderers": [
          "hitEffectRenderer"
        ]
      },
      "summonedTower": {
        "title": "Summoned Tower",
        "components": [
          "stats",
          "animator",
          "arrayTracker",
          "attacker",
          "lifeSpan"
        ],
        "renderers": [
          "renderer",
          "rangeIndicator"
        ]
      },
      "lightningProjectile": {
        "title": "Lightning Projectile",
        "components": [
          "stats",
          "arrayTracker",
          "chainProjectile"
        ],
        "renderers": [
          "lightningRenderer"
        ]
      },
      "explosion": {
        "title": "Explosion",
        "components": [],
        "renderers": [
          "explosion"
        ]
      },
      "ballisticProjectile": {
        "title": "Ballistic Projectile",
        "components": [
          "stats",
          "animator",
          "arrayTracker",
          "ballisticProjectile"
        ],
        "renderers": [
          "renderer"
        ]
      },
      "particle": {
        "title": "Particle",
        "components": [
          "stats",
          "lifeSpan",
          "animator"
        ],
        "renderers": [
          "renderer"
        ]
      },
      "multiShotProjectile": {
        "title": "Multi-Shot Projectile",
        "components": [
          "stats",
          "multishotProjectile"
        ],
        "renderers": []
      }
    },
    "components": {
      "game": {
        "script": "init() {\n        this.initEffectsAndUpgrades();\n        let endPath = this.game.state.paths[0][this.game.state.paths[0].length - 1];\n        let endY = endPath.y;\n        let endX = endPath.x;\n\t\tthis.gridSize = this.game.config.configs.game.gridSize;\n    this.keep = this.game.spawn(endX * this.gridSize + this.gridSize / 2, \n                                endY * this.gridSize + this.gridSize / 2, \"tower\",\n                                { spawnType: 'keep', objectType: 'towers', setDirection: 1});\n        this.keep.placed = true;\n}\n\nupdate() {\n   this.game.state.stats = {...this.game.state.defaultStats};\n}\n\npostUpdate() {\n     \n        if (this.game.state.gameOver || this.game.state.victory || this.game.state.isLevelingUp) return;\n                \n        // Game over check\n        if (this.game.state.bloodCoreHP <= 0 && !this.game.state.gameOver) {\n            this.gameOver();\n        }\n}\n\n\n    // Game-over and victory functions\n    gameOver() {\n        this.game.state.gameOver = true;\n        this.game.state.isPaused = true;\n        gameOverWave.textContent = this.state.round + 1;\n        gameOverMenu.style.display = 'block';\n        overlay.style.display = 'block';\n    }\n\n    gameVictory() {\n        this.game.state.victory = true;\n        this.game.state.isPaused = true;\n        victoryMenu.style.display = 'block';\n        overlay.style.display = 'block';\n    }\n\n\n    // Tower placement system\n  \n\n    initEffectsAndUpgrades() {\n\nconst Upgrade = class { \n    constructor(id, title, desc, icon, appliesTo, condition, apply, onAcquire) {\n        this.id = id;\n        this.title = title;\n        this.desc = desc;\n        this.icon = icon;\n        this.appliesTo = appliesTo;\n        this.conditionFn = condition;\n        this.applyFn = apply;\n        this.onAcquire = onAcquire;        \n    }\n\n    canApply(gameState) {\n        return this.conditionFn(gameState);\n    }\n\n    apply(s, add, mul) {\n        this.applyFn(s, add, mul);\n    }\n}\n\n\n        this.game.effects = {\n            slow: (stats, additiveStats, multiplicitiveStats, slowAmount) => {\n                stats[this.game.config.effects.slow.stat] *= slowAmount;\n            }\n        }\n        this.game.upgrades = [\n            // Bat Swarm Upgrades\n            new Upgrade(\n                'sentryFrenzy',\n                'Sentry Frenzy',\n                'Sentry Swarm: ' + this.game.config.upgrades.sentryFrenzy.desc,\n                '🦇',\n                'sentry',\n                (state) => true,\n                (stats, additiveStats, multiplicitiveStats) => {\n                    multiplicitiveStats['attackSpeed'].push(this.game.config.upgrades.sentryFrenzy.value);\n                }\n            ),\n            new Upgrade(\n                'sentryIntelligence',\n                'Sentry Intelligence',\n                'Sentry Swarm: ' + this.game.config.upgrades.sentryIntelligence.desc,\n                '🦇',\n                'sentry',\n                (state) => true,\n                (stats, additiveStats, multiplicitiveStats) => {            \n                    multiplicitiveStats['damage'].push(this.game.config.upgrades.sentryIntelligence.damage);\n                    multiplicitiveStats['range'].push(this.game.config.upgrades.sentryIntelligence.range);        \n                }\n            ),\n\n            // Necromancer Upgrades\n            new Upgrade(\n                'necroSummon',\n                'Raise Dead',\n                'Necromancer: ' + this.game.config.upgrades.necroSummon.desc,\n                '💀',\n                'fabricator',\n                (state) => true,\n                (stats, additiveStats, multiplicitiveStats) => {\n                    stats.summonChance = 1;\n                    if(!additiveStats.summonChance) additiveStats.summonChance = [];\n                    additiveStats['summonChance'].push(this.game.config.upgrades.necroSummon.summonChance);\n                }\n            ),\n\n            // Shadow Turret Upgrades\n            new Upgrade(\n                'overCharge',\n                'Overcharge',\n                'Tesla Coil: ' + this.game.config.upgrades.overCharge.desc,\n                '📏',\n                'teslaCoil',\n                (state) => true,\n                (stats, additiveStats, multiplicitiveStats) => {\n                    additiveStats['range'].push(this.game.config.upgrades.overCharge.range);\n                }\n            ),\n\n            // Soul Pyre Upgrades\n            new Upgrade(\n                'pyreSoul',\n                'Radiant Soul',\n                'Soul Pyre: ' + this.game.config.upgrades.pyreSoul.desc,\n                '💉',\n                'soulPyre',\n                (state) => true,\n                (stats, additiveStats, multiplicitiveStats) => {\n                    additiveStats['splashRadius'].push(this.game.config.upgrades.pyreSoul.splashRadius);\n                }\n            ),\n\n            // Mist Shrine Upgrades\n            new Upgrade(\n                'mistSlow',\n                'Chilling Mist',\n                'Mist Shrine: ' + this.game.config.upgrades.mistSlow.desc,\n                '❄️',\n                'mistShrine',\n                (state) => true,\n                (stats, additiveStats, multiplicitiveStats) => {\n                    multiplicitiveStats['slowEffect'].push(this.game.config.upgrades.mistSlow.slowEffect);\n                }\n            ),\n            // Global Upgrades\n            new Upgrade(\n                'homeReinforcement',\n                'Reinforcement',\n                this.game.config.upgrades.bloodCore.desc,\n                '🛡️',\n                'global',\n                (state) => true,\n                (stats) => {\n                    stats.maxBloodCoreHP *= this.game.config.upgrades.bloodCore.maxHpMultiplier;\n                },\n                (state) => {\n                    state.bloodCoreHP = Math.min(state.stats.maxBloodCoreHP, state.bloodCoreHP + this.game.config.upgrades.bloodCore.healAmount);\n                }\n            ),\n            new Upgrade(\n                'essenceExtraction',\n                'Essence Extraction',\n                this.game.config.upgrades.essenceExtraction.desc,\n                '🔮',\n                'global',\n                (state) => true,\n                (stats) => {\n                    stats.essenceMultiplier *= this.game.config.upgrades.essenceExtraction.value;\n                }\n            ),\n            new Upgrade(\n                'essenceOverflow',\n                'Essence Overflow',\n                this.game.config.upgrades.essenceOverflow.desc,\n                '🔮',\n                'global',\n                (state) => state.bloodCoreHP > state.stats.maxBloodCoreHP / 2,\n                (stats) => {\n                    stats.essenceMultiplier *= this.game.config.upgrades.essenceOverflow.value;\n                }\n            ),\n\n        ];\n\n    }"
      },
      "waveManager": {
        "script": "init() {   \n        \n        this.resetWaveState();\n    }\n\n    resetWaveState() {\n        this.game.state.waveSets = this.game.config.levels[this.game.state.level].wavesets;\n        this.game.state.currentWaveIds = [];\n        this.game.state.currentWaveEnemies = [];\n        this.game.state.enemiesSpawned = [];\n        this.game.state.spawnTimers = []; // Array for individual spawn timers\n        this.game.state.spawnRate = 1;    // Base spawn rate (can be modified per waveset if needed)\n        this.game.state.waveTimer = 0;\n        this.game.state.startDelayTimer = 0;\n        this.game.state.round = 0;\n    }\n\n    update() {\n        // Skip wave updates if game is over or in certain states\n        if (this.game.state.gameOver || this.game.state.victory || this.game.state.isLevelingUp) return;\n\n        this.game.state.startDelayTimer += this.game.deltaTime;\n\n        // Process all wavesets in parallel\n        for (let i = 0; i < this.game.state.currentWaveIds.length; i++) {\n            let waveSet = this.game.config.wavesets[this.game.state.waveSets[i]];\n            \n            // Skip if still in start delay\n            if (waveSet.startDelay && this.game.state.startDelayTimer < waveSet.startDelay) continue;\n            \n            // Update individual spawn timer for this waveset\n            this.game.state.spawnTimers[i] += this.game.deltaTime;\n\n            // If this waveset still has enemies to spawn\n            if (this.game.state.enemiesSpawned[i] < this.game.state.currentWaveEnemies[i].length) {\n                if (this.game.state.spawnTimers[i] >= this.game.state.spawnRate) {\n                    // Create enemy from the appropriate waveset using the enemy type and start point index\n                    const enemyType = this.game.state.currentWaveEnemies[i][this.game.state.enemiesSpawned[i]];\n                    const startPointIndex = i;\n                    \n                    \n        \t\t\t\t\t  this.game.spawn(0, 0, 'enemy', { objectType: \"enemies\", spawnType: enemyType, pathIndex: startPointIndex, frictin: 1000, density: 1000});\n                    this.game.state.enemiesSpawned[i]++;\n                    this.game.state.spawnTimers[i] = 0; // Reset this waveset's timer\n                    \n                    // Calculate total progress across all wavesets\n                    const totalEnemies = this.game.state.currentWaveEnemies.reduce((sum, wave) => sum + wave.length, 0);\n                    const totalSpawned = this.game.state.enemiesSpawned.reduce((sum, count) => sum + count, 0);\n                    \n                    // Update wave progress bar\n                    document.getElementById('waveProgress').style.width = (totalSpawned / totalEnemies * 100) + '%';\n                }\n            }\n        }\n        \n        // Check if all wavesets have completed spawning\n        const allWavesetsComplete = this.game.state.enemiesSpawned.every((spawned, index) => \n            spawned >= this.game.state.currentWaveEnemies[index].length\n        );\n        \n        // Move to next wave if all enemies defeated and all wavesets have completed spawning\n        if (this.game.state.enemies.length === 0 && allWavesetsComplete) {\n            this.game.state.waveTimer++;\n            \n            if (this.game.state.waveTimer >= this.game.state.waveDelay) {\n                this.startNextWave();\n            }\n        }\n    }\n\n    startNextWave() {\n        document.getElementById('waveDisplay').textContent = this.game.state.round + 1;\n        \n        this.game.state.currentWaveIds = [];\n        this.game.state.currentWaveEnemies = [];\n        this.game.state.enemiesSpawned = [];\n        this.game.state.spawnTimers = [];\n        \n        let totalWaves = 0;\n        for (let i = 0; i < this.game.state.waveSets.length; i++) {\n            const waveSetId = this.game.state.waveSets[i];\n            const waveSet = this.game.config.wavesets[waveSetId];\n            \n            // Check if this waveset has enough waves for the current round\n            if (this.game.state.round < waveSet.waves.length) {\n                const currentWaveId = waveSet.waves[this.game.state.round];\n                \n                // Add this wave to the current active waves\n                this.game.state.currentWaveIds.push(currentWaveId);\n                this.game.state.currentWaveEnemies.push(this.game.config.waves[currentWaveId].enemies);\n                this.game.state.enemiesSpawned.push(0);\n                this.game.state.spawnTimers.push(0); // Initialize spawn timer for this waveset\n            }\n            \n            totalWaves = Math.max(totalWaves, waveSet.waves.length);\n        }\n        \n        // If all wavesets are exhausted, end the game\n        if (this.game.state.currentWaveIds.length === 0) {\n            this.game.state.victory = true;\n            this.game.state.isPaused = true;\n            document.getElementById('victoryMenu').style.display = 'block';\n            document.getElementById('overlay').style.display = 'block';\n            return;\n        }\n        \n        this.game.state.maxWaves = totalWaves;\n        this.game.state.spawnRate = 5;\n        this.game.state.waveTimer = 0;\n        this.game.state.startDelayTimer = 0;\n        \n        // Reset wave progress bar\n        document.getElementById('waveProgress').style.width = '0%';\n        this.game.state.round++;\n    }"
      },
      "upgradeManager": {
        "script": "\n init() {\nthis.game.state.activeUpgrades = {};\n}\n    update() {\n       this.applyActiveUpgrades();\n        // Level Up check\n        if (this.game.state.essence >= this.game.state.essenceToNextLevel && !this.game.state.isLevelingUp) {\n            this.showUpgradeMenu();\n        }\n    }\n\n    applyActiveUpgrades() {\n        engine.getFunction(\"calculateStats\")(this.game.state.stats, this.game.state.activeUpgrades['global']);    \n    }\n\n    \n    // Upgrade system\n    showUpgradeMenu() {\n        if (this.game.state.isLevelingUp) return; // Prevent re-triggering\n        \n        this.game.state.isLevelingUp = true;\n        this.game.state.isPaused = true;\n        \n        this.game.uiManager.upgradeMenu.style.display = 'block';\n        this.game.uiManager.overlay.style.display = 'block';\n        this.game.uiManager.upgradeOptionsDiv.innerHTML = '';\n        \n        // Filter upgrades based on conditions\n        const availableUpgrades = this.game.upgrades.filter(upgrade => upgrade.canApply(this.game.state));\n        \n        // Choose 3 random upgrades\n        const options = [];\n        while (options.length < 3 && availableUpgrades.length > 0) {\n            const index = Math.floor(Math.random() * availableUpgrades.length);\n            options.push(availableUpgrades[index]);\n            availableUpgrades.splice(index, 1);\n        }\n        \n        // Create upgrade options\n        options.forEach(upgrade => {\n            const div = document.createElement('div');\n            div.className = 'upgrade-option';\n            div.innerHTML = `\n                <div class=\"upgrade-icon\">${upgrade.icon}</div>\n                <div class=\"upgrade-desc\">\n                    <div class=\"upgrade-title\">${upgrade.title}</div>\n                    ${upgrade.desc}\n                </div>\n            `;\n            div.onclick = () => this.selectUpgrade(upgrade);\n            this.game.uiManager.upgradeOptionsDiv.appendChild(div);\n        });\n    }\n\n    selectUpgrade(upgrade) {       \n        // Add to active upgrades list if not already\n        if (!this.game.state.activeUpgrades[upgrade.appliesTo]) {\n            this.game.state.activeUpgrades[upgrade.appliesTo] = [upgrade];\n        } else {\n            this.game.state.activeUpgrades[upgrade.appliesTo].push(upgrade);\n        }\n\n        this.applyActiveUpgrades();\n        if(upgrade.onAcquire) {\n            upgrade.onAcquire(this.game.state);\n        }\n        \n        upgradeMenu.style.display = 'none';\n        overlay.style.display = 'none';\n        \n        this.game.state.essence -= this.game.state.essenceToNextLevel;\n        this.game.state.level++;\n        this.game.state.essenceToNextLevel = Math.floor(this.game.state.essenceToNextLevel * 1.4);        \n        \n        this.game.state.isLevelingUp = false;\n        this.game.state.isPaused = false;\n    }"
      },
      "stats": {
        "script": "  init( {objectType, spawnType} ) {        \n        \n        let stats = this.game.config[objectType][spawnType];\n        this.type = spawnType;\n        this.stats = {...stats};\n        this.defaultStats = {...this.stats};\n        this.activeEffects = {};\n    }\n    update() {\n        this.stats = {...this.defaultStats};\n        this.applyEffects();\n        this.applyUpgrades();\n    }\n    addStat(statName, statValue) {\n        this.stats[statName] = statValue;\n        this.defaultStats[statName] = statValue;\n    }\n    addEffect(effectConfig, effectFn, effectAmt) {        \n        this.activeEffects[effectConfig.id] = this.parent.addComponent(engine.getComponent(\"effect\"), { config: effectConfig, applyFn: effectFn, amount: effectAmt });\n    }\n    applyEffects() {\n        let effectArr = [];\n        for(let effectId in this.activeEffects) {\n            if(this.activeEffects[effectId] && this.activeEffects[effectId].lifeTime > 0){\n                effectArr.push(this.activeEffects[effectId]);\n            } else {\n                this.activeEffects[effectId] = undefined;\n            }\n        }        \n        \n        engine.getFunction(\"calculateStats\")(this.stats, effectArr);\n    }\n    \n    applyUpgrades() {\n        engine.getFunction(\"calculateStats\")(this.stats, this.game.state.activeUpgrades[this.type]);        \n    }"
      },
      "animator": {
        "script": "    init({ objectType, spawnType}) {\n        this.animations = this.game.imageManager.getImages(objectType, spawnType); // { \"idle\": [...], \"walk\": [...] }\n        this.currentAnimation = \"idle\";\n        if(this.animations.walk) this.currentAnimation = \"walk\";\n        this.currentFrame = 0;\n        this.frameDuration = .166; // 10 frames per animation frame (~0.166s at 60 FPS)\n        this.frameTimer = 0;\n\n        this.baseSpeed = this.parent.getComponent(\"stats\").stats.speed || 1;\n    }\n\n    update() {\n\n        this.frameTimer += this.game.deltaTime;\n        let currentSpeedPercent = this.parent.getComponent(\"stats\").stats.speed / this.baseSpeed || 1;\n\n        if (this.frameTimer >= this.frameDuration / currentSpeedPercent) {\n            this.frameTimer = 0;\n            const animFrames = this.animations[this.currentAnimation];\n            this.currentFrame = (this.currentFrame + 1) % animFrames.length;\n        }\n        // Sync direction with Renderer (if separate)\n        const renderer = this.parent.getComponent(\"Renderer\");\n        if (renderer) {\n            renderer.images = this.animations[this.currentAnimation][this.currentFrame];\n        }\n    }\n\n    setAnimation(animationType) {\n        if (this.animations[animationType] && this.currentAnimation !== animationType) {\n            this.currentAnimation = animationType;\n            this.currentFrame = 0;\n            this.frameTimer = 0;\n        }\n    }"
      },
      "essenceBounty": {
        "script": "    init(){\n        this.statsComp = this.parent.getComponent('stats');\n    }\n    destroy() {               \n        this.game.state.essence += this.statsComp.stats.essence * this.game.state.stats.essenceMultiplier;        \n    }"
      },
      "followPath": {
        "script": "    init( { pathIndex = 0 }) {\n        this.gridSize = this.game.config.configs.game.gridSize;\n        this.pathIndex = pathIndex;\n        this.indexInPath = 0;\n        this.x = this.game.state.paths[this.pathIndex][this.indexInPath].x;\n        this.y = this.game.state.paths[this.pathIndex][this.indexInPath].y;\n        this.parent.position = { x: this.x * this.gridSize + this.gridSize / 2, y: this.y * this.gridSize + this.gridSize / 2 };        \n    }\n\n    update() {\n        this.stats = this.getComponent('stats').stats;\n        this.gridSize = this.game.config.configs.game.gridSize;\n        if (this.indexInPath < this.game.state.paths[this.pathIndex].length - 1) {\n            const target = this.game.state.paths[this.pathIndex][this.indexInPath + 1];\n            const dx = target.x * this.gridSize + (this.gridSize / 2) - this.parent.position.x;\n            const dy = target.y * this.gridSize + (this.gridSize / 2) - this.parent.position.y;\n            const dist = Math.hypot(dx, dy);\n\n            if (dist > this.stats.speed) {\n                this.parent.position.x += (dx / dist) * this.stats.speed;\n                this.parent.position.y += (dy / dist) * this.stats.speed;\n            } else {\n                this.indexInPath++;\n            }\n            this.x = parseInt(this.parent.position.x / this.gridSize);\n            this.y = parseInt(this.parent.position.y / this.gridSize);\n        } else {\n            this.game.state.bloodCoreHP -= this.stats.value;\n            this.parent.destroy();\n            return false;\n        }\n    }"
      },
      "spacialGridEntity": {
        "script": "   update() {\n        this.game.spatialGrid.insert(this.parent);\n    }\n    destroy() {\n        this.game.spatialGrid.remove(this.parent);\n    }"
      },
      "arrayTracker": {
        "script": "    init( {objectType}) {\n        this.arr = objectType;\n        if(!this.game.state[this.arr]){\n            this.game.state[this.arr] = [];\n        }\n        this.game.state[this.arr].push(this.parent);\n    }\n\n    destroy(){\n        let index = this.game.state[this.arr].indexOf(this.parent);\n        this.game.state[this.arr].splice(index, 1);        \n    }"
      },
      "leveler": {
        "script": " init( {level = 1}) {\n        this.level = level;\n    }"
      },
      "buildable": {
        "script": "  init() {        \n        this.placed = false;\n    }"
      },
      "populationBurden": {
        "script": "    init(){\n        this.stats = this.parent.getComponent('stats').stats;        \n    }\n    update() {\n        if(this.stats){ \n            if( this.stats.population ) {\n                this.game.state.stats.population += this.stats.population;\n            } \n            if( this.stats.supply ) {\n                this.game.state.stats.maxPopulation += this.stats.supply;\n            }\n        }\n    }"
      },
      "attacker": {
        "script": " init() {        \n        this.stats = this.getComponent('stats').stats;    \n        this.level = 1;\n        this.target = null;\n        this.projectiles = [];  \n        this.cooldown = 0;\n    }\n\n    update() {\n        if (this.cooldown > 0) this.cooldown -= this.game.deltaTime;\n\n        // Validate current target\n        if (this.target) {\n            const distance = Math.hypot(\n                this.target.position.x - this.parent.position.x,\n                this.target.position.y - this.parent.position.y\n            );\n            if (distance > this.stats.range || this.target.getComponent('health').hp <= 0) {\n                this.target = null;\n            }\n        }\n\n        // Find target if none\n        if (!this.target) {\n            this.findTarget();\n        }\n\n        // Attack if ready and has target\n        if (this.cooldown <= 0 && this.target) {\n            this.attack();\n        }\n\n        if (this.cooldown <= 0 && this.stats.mineAmt > 0) {\n            this.gather();\n        }\n        return true;\n    }\n    \n    findTarget() {\n        this.target = null;\n        let furthestEnemy = null;\n        let furthestDistance = -1;\n        const nearbyEntities = this.game.spatialGrid.getNearbyEntities(\n            this.parent.gridPosition.x, \n            this.parent.gridPosition.y, \n            this.stats.range,\n            \"enemy\"\n        );\n        for (let enemy of nearbyEntities) {\n            let enemyHP = enemy.getComponent(\"health\").hp;\n            let followPath = enemy.getComponent('followPath');\n            if (enemyHP <= 0) continue;          \n\n            let distanceToEnd = this.game.state.paths[followPath.pathIndex].length - followPath.indexInPath;\n            if (distanceToEnd > furthestDistance) {\n                furthestDistance = followPath.indexInPath;\n                furthestEnemy = enemy;\n            }  \n        }\n        \n        this.target = furthestEnemy;\n    }\n\n    gather() {\n        this.game.state.bloodShards += this.stats.mineAmt;\n        this.cooldown = this.stats.attackSpeed;\n    }\n\n    attack() {\n        if (!this.target) return; \n        this.launchProjectile();\n        this.cooldown = this.stats.attackSpeed;\n    }\n    \n    launchProjectile() {\n        this.stats = this.getComponent('stats').stats;    \n        let projectileType = this.stats.projectile;\n        let projectileDef = this.game.config.projectiles[projectileType];\n        let projStats = { ...projectileDef };\n        delete projStats.render;\n        projStats.baseDamage = this.stats.damage || 1; \n        projStats.speed = this.stats.speed || 5;     \n        projStats.piercing = this.stats.piercing || 0;\n        projStats.splashRadius = this.stats.splashRadius || 0;\n        projStats.critChance = this.stats.critChance || 0.05;\n        projStats.critMultiplier = this.stats.critMultiplier || 2;\n    \n       \tif(projectileDef.customRenderer == \"lightning\") {\n         \tthis.game.spawn(this.parent.position.x, this.parent.position.y, 'lightningProjectile', { objectType: \"projectiles\", spawnType: projectileType, target: this.target, owner: this.parent, stats: projStats });\n        } else if(projectileDef.isBallistic) {\n         \tthis.game.spawn(this.parent.position.x, this.parent.position.y, 'ballisticProjectile', { objectType: \"projectiles\", spawnType: projectileType, target: this.target, owner: this.parent, stats: projStats });\n        } else if( this.stats.projectileCount > 0 ) {\n          this.game.spawn(this.parent.position.x, this.parent.position.y, 'multiShotProjectile', { objectType: \"projectiles\", spawnType: projectileType, target: this.target, owner: this.parent, stats: projStats });\n        } else {\n          let projectile = this.game.spawn(this.parent.position.x, this.parent.position.y, 'projectile', { objectType: \"projectiles\", spawnType: projectileType, target: this.target, owner: this.parent, stats: projStats });\n        }\n    }"
      },
      "projectile": {
        "script": "init({ spawnType, owner, target, targetPosition, stats }) {\n  this.type = spawnType;\n  this.def = this.game.config.projectiles[this.type];\n  this.owner = owner;\n  this.target = target;\n  this.targetPosition = targetPosition;\n  this.stats = stats;\n  this.piercedEnemies = [];\n  this.ownerStats = this.owner.getComponent(\"stats\").stats;\n  this.distanceTraveled = 0;\n  this.distanceToSpawnParticle = 24;\n\n  // Add lifespan for projectile (e.g., 5 seconds)\n  this.maxLifespan = this.stats.lifespan || 5; // Default to 5 seconds, adjust as needed\n  this.currentLifespan = 0;\n\n}\n\nupdate() {\n  if(this.target) this.targetCurrentPosition = {...this.target.position };\n  // Update lifespan and destroy if expired\n  this.currentLifespan += this.game.deltaTime; // Assuming deltaTime is in seconds\n  if (this.currentLifespan >= this.maxLifespan) {\n    this.parent.destroy();\n    return;\n  }\n\n  // Remove if target is gone (only if no targetPosition)\n  if (!this.targetPosition && (!this.target || this.target.destroyed)) {\n    if(this.targetCurrentPosition) {\n    \tthis.targetPosition = this.targetCurrentPosition;\n    } else {\n     \tthis.parent.destroy(); \n    \treturn;\n    }\n  }\n\n  // Determine movement target\n  const targetPos = this.targetPosition ? this.targetPosition : this.target.position;\n  const dx = targetPos.x - this.parent.position.x;\n  const dy = targetPos.y - this.parent.position.y;\n  const distSq = dx * dx + dy * dy;\n  const dist = Math.sqrt(distSq);\n  const speed = this.stats.speed;\n\n  // Hit detection\n  const hitRadiusSq = 15 * 15; // Same as your original hit detection radius\n  let hitDetected = false;\n\n  if (this.targetPosition) {\n    // Check nearby enemies for hit detection when using targetPosition\n    const nearbyEnemies = this.game.spatialGrid.getNearbyEntities(\n      this.parent.gridPosition.x,\n      this.parent.gridPosition.y,\n      this.stats.splashRadius || 15, // Use splashRadius or default to 15,\n      \"enemy\"\n    );\n\n    for (const enemy of nearbyEnemies) {\n      if (enemy.isDead || this.piercedEnemies.includes(enemy)) continue;\n\n      const dxEnemy = enemy.position.x - this.parent.position.x;\n      const dyEnemy = enemy.position.y - this.parent.position.y;\n      const enemyDistSq = dxEnemy * dxEnemy + dyEnemy * dyEnemy;\n\n      if (enemyDistSq <= hitRadiusSq) {\n        // Hit detected\n        hitDetected = true;\n        let enemyHealth = enemy.getComponent(\"health\");\n        let enemyEnergyShield = enemy.getComponent(\"energyshield\");\n        let enemyStats = enemy.getComponent(\"stats\");\n        let enemyStatClone = { ...enemyStats.stats };\n        enemyStatClone.energyShield = enemyEnergyShield.energyShield;\n\n        // Apply damage\n        let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, enemyStatClone);\n        if (!damageResult.wasEvaded) {\n          enemyHealth.hp -= damageResult.damageDealt;\n          enemyEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n          this.game.spawn(enemy.position.x, enemy.position.y, \"hitEffect\", {\n            damageType: this.stats.damageType,\n            lifeSpan: 0.3\n          });\n          if (this.ownerStats.slowEffect) {\n            enemyStats.addEffect(\n              this.game.config.effects.slow,\n              this.game.effects.slow,\n              this.ownerStats.slowEffect\n            );\n          }\n        }\n\n        // Piercing logic\n        if (this.stats.piercing > 0 && this.piercedEnemies.length < this.stats.piercing) {\n          this.piercedEnemies.push(enemy);\n          let newTarget = this.findNewTarget(nearbyEnemies);\n          if (newTarget) {\n            this.target = newTarget;\n            this.targetPosition = null; // Switch to target-based tracking\n            return;\n          }\n        }\n\n        // Splash damage if applicable\n        if (this.stats.splashRadius > 0) {\n          this.applySplashDamage(nearbyEnemies);\n          this.game.spawn(this.parent.position.x, this.parent.position.y, \"explosion\", {\n            radius: this.stats.splashRadius\n          });\n        }\n\n        // Destroy projectile if no piercing or piercing limit reached\n        if (this.stats.piercing <= 0 || this.piercedEnemies.length >= this.stats.piercing) {\n          this.parent.destroy();\n          return;\n        }\n      }\n    }\n  } else if (distSq < hitRadiusSq) {\n    // Original target-based hit detection\n    let targetHealth = this.target.getComponent(\"health\");\n    let targetEnergyShield = this.target.getComponent(\"energyshield\");\n    let targetStats = this.target.getComponent(\"stats\");\n    let targetStatClone = { ...targetStats.stats };\n    targetStatClone.energyShield = targetEnergyShield.energyShield;\n\n    // Apply damage and effects (unchanged from your original code)\n    let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, targetStatClone);\n    if (!damageResult.wasEvaded) {\n      targetHealth.hp -= damageResult.damageDealt;\n      targetEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n      this.game.spawn(this.target.position.x, this.target.position.y, \"hitEffect\", {\n        damageType: this.stats.damageType,\n        lifeSpan: 0.3\n      });\n      if (this.ownerStats.slowEffect) {\n        targetStats.addEffect(\n          this.game.config.effects.slow,\n          this.game.effects.slow,\n          this.ownerStats.slowEffect\n        );\n      }\n    }\n\n    // Summon skeleton, leech, thief logic (unchanged)\n    if (\n      this.ownerStats.summonChance > 0 &&\n      targetHealth.hp <= 0 &&\n      Math.random() < this.ownerStats.summonChance - 1\n    ) {\n      this.game.spawn(this.target.position.x, this.target.position.y, \"summonedTower\", {\n        objectType: \"towers\",\n        spawnType: this.ownerStats.summonType,\n        owner: this.owner\n      });\n    }\n    if (this.ownerStats.leech > 0) {\n      const healing = this.stats.damage * this.ownerStats.leech * this.game.state.stats.healingMultiplier;\n      this.game.state.bloodCoreHP = Math.min(\n        this.game.state.stats.maxBloodCoreHP,\n        this.game.state.bloodCoreHP + healing\n      );\n    }\n    if (this.ownerStats.thief && this.ownerStats.thief != 0) {\n      const stealAmt = this.stats.damage * this.ownerStats.thief * this.game.state.stats.bloodShardMultiplier;\n      this.game.state.bloodShards += stealAmt;\n    }\n\n    // Piercing logic\n    if (this.stats.piercing > 0 && this.piercedEnemies.length < this.stats.piercing) {\n      this.piercedEnemies.push(this.target);\n      const newTarget = this.findNewTarget(\n        this.game.spatialGrid.getNearbyEntities(\n          this.parent.gridPosition.x,\n          this.parent.gridPosition.y,\n          this.ownerStats.range\n        )\n      );\n      if (newTarget) {\n        this.target = newTarget;\n        return;\n      }\n    }\n\n    this.parent.destroy();\n    return;\n  }\n\n  // Move projectile\n  this.parent.position.x += (dx / dist) * speed;\n  this.parent.position.y += (dy / dist) * speed;\n\n  // Continue moving past targetPosition by updating it if reached\n  if (this.targetPosition && distSq < speed * speed) {\n    // If close to targetPosition, extend it in the same direction\n    const directionX = dx / dist;\n    const directionY = dy / dist;\n    this.targetPosition.x += directionX * speed * 10; // Extend further (adjust multiplier)\n    this.targetPosition.y += directionY * speed * 10;\n  }\n\n  // Particle spawning logic (unchanged)\n  const tDx = this.parent.lastPosition.x - this.parent.position.x;\n  const tDy = this.parent.lastPosition.y - this.parent.position.y;\n  const tDistSq = tDx * tDx + tDy * tDy;\n  const tDist = Math.sqrt(tDistSq);\n\n  this.distanceTraveled += tDist;\n  if (this.def.particle && this.distanceTraveled > this.distanceToSpawnParticle) {\n    this.game.spawn(this.parent.position.x, this.parent.position.y, \"particle\", { objectType: \"particles\", spawnType: this.def.particle});\n    this.distanceTraveled = 0;\n    this.distanceToSpawnParticle += Math.random() * 3;\n  }\n}\n\n// Helper method to find a new target for piercing\nfindNewTarget(nearbyEnemies) {\n  const gridSize = this.game.config.configs.game.gridSize;\n  const rangeSq = this.ownerStats.range * this.ownerStats.range * gridSize * gridSize;\n  for (let enemy of nearbyEnemies) {\n    if (!enemy.destroyed && !this.piercedEnemies.includes(enemy)) {\n      const dx = enemy.position.x - this.parent.position.x;\n      const dy = enemy.position.y - this.parent.position.y;\n      const distSq = dx * dx + dy * dy;\n      if (distSq < rangeSq) {\n        return enemy;\n      }\n    }\n  }\n  return null;\n}\n\n// Helper method to apply splash damage\napplySplashDamage(nearbyEnemies) {\n  const gridSize = this.game.config.configs.game.gridSize;\n  const splashRadiusSq = this.stats.splashRadius * this.stats.splashRadius * gridSize * gridSize;\n  for (const enemy of nearbyEnemies) {\n    if (enemy.isDead || this.piercedEnemies.includes(enemy)) continue;\n    let enemyHealth = enemy.getComponent(\"health\");\n    let enemyEnergyShield = enemy.getComponent(\"energyshield\");\n    let enemyStats = enemy.getComponent(\"stats\");\n    let enemyStatClone = { ...enemyStats.stats };\n    enemyStatClone.energyShield = enemyEnergyShield.energyShield;\n\n    const dx = enemy.position.x - this.parent.position.x;\n    const dy = enemy.position.y - this.parent.position.y;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq <= splashRadiusSq) {\n      let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, enemyStatClone);\n      if (!damageResult.wasEvaded) {\n        enemyHealth.hp -= damageResult.damageDealt;\n        enemyEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n        this.game.spawn(enemy.position.x, enemy.position.y, \"hitEffect\", {\n          damageType: this.stats.damageType,\n          lifeSpan: 0.3\n        });\n        if (this.ownerStats.slowEffect) {\n          enemyStats.addEffect(\n            this.game.config.effects.slow,\n            this.game.effects.slow,\n            this.ownerStats.slowEffect\n          );\n        }\n      }\n    }\n  }\n}"
      },
      "hitEffectParticle": {
        "script": "  init( {damageType}) {\n        this.damageType = damageType || \"default\";\n        this.particles = [];\n        \n        // Spawn particles based on damage type\n        const particleCount = 5;\n        for (let i = 0; i < particleCount; i++) {\n            this.particles.push({\n                x: 0, // Relative to parent\n                y: 0,\n                vx: (Math.random() - 0.5) * 4, // Velocity (-2 to 2)\n                vy: (Math.random() - 0.5) * 4,\n                size: Math.random() * 3 + 1, // 1-4 pixels\n                alpha: 1, // Fades from 1 to 0\n                color: this.getColor()\n            });\n        }\n    }\n\n    getColor() {\n        switch (this.damageType) {\n            case \"electric\": return \"rgba(0, 255, 255, \"; // Cyan for electric\n            case \"fire\": return \"rgba(255, 165, 0, \"; // Orange for fire\n            case \"ice\": return \"rgba(128, 128, 255, \"; // Blue for ice\n            case \"plasma\": return \"rgba(255, 0, 255, \"; // Purple for plasma\n            default: return \"rgba(255, 255, 255, \"; // White fallback\n        }\n    }\n\n    update() {\n        const lifespanComp = this.parent.getComponent(\"LifeSpan\");\n        if (!lifespanComp) return; // Safety check\n\n        const fadeFactor = lifespanComp.lifeSpan / 30; // Normalize to initial lifespan (30 frames)\n        for (let particle of this.particles) {\n            particle.x += particle.vx * this.game.state.timeScale;\n            particle.y += particle.vy * this.game.state.timeScale;\n            particle.alpha = fadeFactor; // Fade based on remaining lifespan\n            particle.size *= 0.98; // Slight shrink per frame\n        }\n    }"
      },
      "lifeSpan": {
        "script": "    init( {lifeSpan}) {\n        this.lifeSpan = lifeSpan || this.getComponent('stats').stats.lifeSpan;\n    }\n    update() {        \n        if( this.lifeSpan > 0 ) {\n            this.lifeSpan -= this.game.deltaTime;\n        } else {\n            this.parent.destroy();\n        }\n    }"
      },
      "chainProjectile": {
        "script": "    init( { spawnType, owner, target, stats }) {        \n        this.type = spawnType;\n        this.owner = owner;\n        this.target = target;\n        this.stats = stats;\n        this.piercedEnemies = [];\n        this.ownerStats = this.owner.getComponent(\"stats\").stats;\n        this.chainTargets = []; // Store all targets hit in one frame\n        this.hasStruck = false; // Flag to strike only once\n    }\n\n    update() {\n        if (this.hasStruck) {\n            this.parent.destroy(); // Destroy after one frame of striking\n            return;\n        }\n\n        if (!this.target || this.target.destroyed) {\n            this.parent.destroy();\n            return;\n        }\n\n        // Strike the initial target\n        let targetHealth = this.target.getComponent(\"health\");\n        let targetEnergyShield = this.target.getComponent(\"energyshield\");\n        let targetStats = {...this.target.getComponent(\"stats\").stats};\n        targetStats.energyShield = targetEnergyShield.energyShield;\n        let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, targetStats);                    \n        if( damageResult.wasEvaded ) { return; }         \n        targetHealth.hp -= damageResult.damageDealt;\n        targetEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n        this.piercedEnemies.push(this.target);\n        this.chainTargets.push(this.target);\n        this.game.spawn(this.target.position.x, this.target.position.y, \"hitEffect\", { damageType: this.stats.damageType, lifeSpan: 1});\n        // Chain to nearby enemies\n        if (this.stats.piercing > 0 && this.piercedEnemies.length <= this.stats.piercing) {\n            const nearbyEnemies = this.game.spatialGrid.getNearbyEntities(\n                this.target.gridPosition.x, \n                this.target.gridPosition.y, \n                this.ownerStats.range,\n                \"enemy\"\n            );\n\n            for (let enemy of nearbyEnemies) {\n                if (enemy.destroyed || this.piercedEnemies.includes(enemy)) continue;\n                const dx = enemy.position.x - this.target.position.x;\n                const dy = enemy.position.y - this.target.position.y;\n                const distSq = dx * dx + dy * dy;\n                let gridSize = this.game.config.configs.game.gridSize;\n                if (distSq <= this.ownerStats.range * this.ownerStats.range * gridSize * gridSize) {\n                    let enemyHealth = enemy.getComponent(\"health\");\n                    let enemyEnergyShield = enemy.getComponent(\"energyshield\");\n                    let enemyStats = {...enemy.getComponent(\"stats\").stats};\n                    enemyStats.energyShield = targetEnergyShield.energyShield;\n                    let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, enemyStats); \n                    if(!damageResult.wasEvaded) {\n                        enemyHealth.hp -= damageResult.damageDealt;\n                        enemyEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n                        this.piercedEnemies.push(enemy);\n                        this.chainTargets.push(enemy);\n                        this.game.spawn(enemy.position.x, enemy.position.y, \"hitEffect\", { damageType: this.stats.damageType, lifeSpan: 1 });\n                        if (this.piercedEnemies.length > this.stats.piercing) break;\n                    } else {\n                        break;\n                    }\n                }\n            }\n        }\n\n        // Apply additional effects (e.g., slow, leech) to all hit targets\n        for (let enemy of this.chainTargets) {\n            if (this.ownerStats.slowEffect) {\n                enemy.getComponent(\"stats\").addEffect(this.game.config.effects.slow, this.game.effects.slow, this.ownerStats.slowEffect);\n            }\n            if (this.ownerStats.leech > 0) {\n                const healing = this.stats.damage * this.ownerStats.leech * this.game.state.stats.healingMultiplier;\n                this.game.state.bloodCoreHP = Math.min(this.game.state.stats.maxBloodCoreHP, this.game.state.bloodCoreHP + healing);\n            }\n            if (this.ownerStats.thief && this.ownerStats.thief != 0) {\n                const stealAmt = this.stats.damage * this.ownerStats.thief * this.game.state.stats.bloodShardMultiplier;\n                this.game.state.bloodShards += stealAmt;\n            }\n        }\n\n        this.hasStruck = true; // Mark as struck, render lightning this frame\n    }"
      },
      "effect": {
        "script": "    init( {config, applyFn, amount }) {\n        this.id = config.id;\n        this.title = config.title;\n        this.desc = config.desc;\n        this.lifeTime = config.lifeTime;\n        this.applyFn = applyFn;\n        this.amount = amount;    \n    }\n\n    update() {\n        this.lifeTime--;\n        if( this.lifeTime <= 0) this.parent.removeComponent(this);\n        return true;        \n    }\n\n    apply(s, add, mul) {\n        this.applyFn(s, add, mul, this.amount);\n    }"
      },
      "ballisticProjectile": {
        "script": "init({ spawnType, owner, target, stats }) {\n    this.type = spawnType;\n    this.def = this.game.config.projectiles[this.type];\n    this.owner = owner;\n    this.target = target;\n    this.stats = stats;\n    this.piercedEnemies = [];\n    this.ownerStats = this.owner.getComponent(\"stats\").stats;\n    this.distanceTraveled = 0;\n    this.distanceToSpawnParticle = 24;\n    \n    // Ballistic trajectory variables\n    this.startPosition = { ...this.parent.position, z: 10 }; // Start 10 units above ground\n    this.targetPosition = { ...this.target.position, z: 0 };\n    this.time = 0;\n    \n    this.totalDist = Math.sqrt(\n        (this.targetPosition.x - this.startPosition.x) ** 2 + \n        (this.targetPosition.y - this.startPosition.y) ** 2\n    );\n    this.maxHeight = this.totalDist / Math.PI;\n    \n    // Initialize position with Z component\n    this.parent.position.z = this.startPosition.z;\n    this.positionZ = this.startPosition.z;\n}\n\nupdate() {\nthis.parent.position.z = this.positionZ;\n    \n    // Calculate progress (0 to 1)\n    this.time += this.game.deltaTime;\n       const dx = this.targetPosition.x - this.parent.position.x;\n        const dy = this.targetPosition.y - this.parent.position.y;\n        const distSq = dx * dx + dy * dy;\n        let dist = Math.sqrt(distSq);\n    const speed = this.stats.speed;\n    this.parent.position.x += (dx / dist) * speed / (Math.PI);\n    this.parent.position.y += (dy / dist) * speed / (Math.PI);\n\n\n     const currentDist = Math.sqrt(\n        (this.parent.position.x - this.startPosition.x) ** 2 + \n        (this.parent.position.y - this.startPosition.y) ** 2\n    );\n    const xyprogressToTarget = Math.min(1, currentDist / this.totalDist);\n\n    // Parabolic trajectory calculation (2:1 isometric adjusted)\n     this.parent.position.z = this.maxHeight * (1 - Math.pow(2 * xyprogressToTarget - 1, 2));\n    \n    this.positionZ = this.parent.position.z;\n    // Check if we've hit the ground (Z <= 0)\n    if (this.parent.position.z <= 0) {\n        this.parent.position.z = 0; // Snap to ground\n        \n        // Hit detection - same as before but at current position\n        const targetDistSq = (this.parent.position.x - this.target.position.x) ** 2 + \n                           (this.parent.position.y - this.target.position.y) ** 2;\n        \n        \n     \n            // We missed the target but hit the ground - maybe still do splash damage\n       if (this.stats.splashRadius > 0) {\n           this.processSplashDamage();\n       }\n       this.parent.destroy();\n        \n        \n        return;\n    }\n    \n    // Update distance traveled for particles\n    const tDx = this.parent.lastPosition.x - this.parent.position.x;\n    const tDy = this.parent.lastPosition.y - this.parent.position.y;\n    const tDist = Math.sqrt(tDx * tDx + tDy * tDy);\n    this.distanceTraveled += tDist;\n    \n    if (this.def.particle && this.distanceTraveled > this.distanceToSpawnParticle) {\n\n        let particle = this.game.spawn(this.parent.lastPosition.x + Math.random() * 4 - 2, this.parent.lastPosition.y + Math.random() * 4 - 2, \"particle\", { objectType: \"particles\", spawnType: this.def.particle });\n        particle.position.z = this.parent.position.z + Math.random() * 4 - 2;\n        this.distanceTraveled = 0;\n        this.distanceToSpawnParticle += Math.random() * 2;\n    }\n}\n\n\nprocessSplashDamage() {\n    const nearbyEnemies = this.game.spatialGrid.getNearbyEntities(\n        this.parent.gridPosition.x, \n        this.parent.gridPosition.y, \n        this.stats.splashRadius,\n        \"enemy\"\n    );\n    let explosion = this.game.spawn(this.parent.position.x, this.parent.position.y, \"explosion\", { radius: this.stats.splashRadius });\n    for (const enemy of nearbyEnemies) {\n        if (enemy.isDead) continue;\n        \n        const dx = enemy.position.x - this.parent.position.x;\n        const dy = enemy.position.y - this.parent.position.y;\n        const distSq = dx * dx + dy * dy;\n        \n        let gridSize = this.game.config.configs.game.gridSize;\n        const splashRadiusSq = this.stats.splashRadius * this.stats.splashRadius * gridSize * gridSize;\n        \n        if (distSq <= splashRadiusSq) {\n            let enemyHealth = enemy.getComponent(\"health\");\n            let enemyEnergyShield = enemy.getComponent(\"energyshield\");\n            let enemyStats = enemy.getComponent(\"stats\");\n            let enemyStatClone = { ...enemyStats.stats };\n            enemyStatClone.energyShield = enemyEnergyShield.energyShield;\n            \n            let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, enemyStatClone);\n            if (!damageResult.wasEvaded) {\n                enemyHealth.hp -= damageResult.damageDealt;\n                enemyEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n                this.game.spawn(enemy.position.x, enemy.position.y, \"hitEffect\", { damageType: this.stats.damageType , lifeSpan: .3});\n                if (this.ownerStats.slowEffect) {\n                    enemyStats.addEffect(this.game.config.effects.slow, this.game.effects.slow, this.ownerStats.slowEffect);\n                }\n            }\n        }\n    }\n}"
      },
      "multishotProjectile": {
        "script": "init({ spawnType, stats, target, owner }) {\n  this.type = spawnType;\n  this.stats = stats;\n  this.target = target;\n  const ownerStats = owner.getComponent('stats').stats;\n  const spreadCount = ownerStats.projectileCount || 3; // Total projectiles (e.g., 3: center + 2 sides)\n    const spreadAngleDegrees = ownerStats.projectileAngle || 45; // Default to 45 degrees\n  const spreadAngle = spreadAngleDegrees * (Math.PI / 180); // Convert degrees to radians\n\n \n  // Calculate the base direction to the target\n  const dx = target.position.x - this.parent.position.x;\n  const dy = target.position.y - this.parent.position.y;\n  const baseAngle = Math.atan2(dy, dx); // Angle from parent to target in radians\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  // Total spread angle (e.g., for 3 projectiles: -spreadAngle, 0, +spreadAngle)\n  const totalSpread = spreadAngle * (spreadCount - 1); // Max angle covered by all projectiles\n\n  // Spawn projectiles in a symmetrical fan\n  for (let i = 0; i < spreadCount; i++) {\n    // Calculate the angle offset from the center\n    const offsetIndex = i - Math.floor(spreadCount / 2); // Center at 0 (e.g., -1, 0, 1 for 3)\n    const currentAngle = baseAngle + (offsetIndex * spreadAngle);\n\n    // Calculate the new target position based on the angle\n    const deltaX = Math.cos(currentAngle) * distance;\n    const deltaY = Math.sin(currentAngle) * distance;\n\n    this.game.spawn(\n      this.parent.position.x,\n      this.parent.position.y,\n      \"projectile\",\n      {\n        spawnType: ownerStats.projectile,\n        objectType: \"projectiles\",\n        owner: owner,\n        stats: stats,\n        target: target,\n        targetPosition: {\n          x: this.parent.position.x + deltaX, // Start from parent, extend to new position\n          y: this.parent.position.y + deltaY\n        }\n      }\n    );\n  }\n\n  this.parent.destroy();\n}"
      },
      "mapManager": {
        "script": "init({level}) {\n  this.nodeClass = class Node {\n    constructor(x, y, tileType, parent = null) {\n        this.x = x;\n        this.y = y;\n        this.tileType = tileType;\n        this.parent = parent;\n        \n        this.g = 0; // Cost from start to current node\n        this.h = 0; // Heuristic (estimated cost from current to goal)\n        this.f = 0; // Total cost (g + h)\n    }\n\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n\n    // Unique key for node based on coordinates\n    key() {\n        return `${this.x},${this.y}`;\n    }\n};\n  this.tileMap = level.tileMap;\n   \n   const {tileMap, paths} = this.generateMap();\n   this.game.state.tileMap = tileMap;\n   this.game.state.paths = paths;\n}\n\n    generateMap() {\n        // Extract values from the data object\n        const { size, terrainTypes, terrainMap } = this.tileMap;\n        \n        let paths = [];\n        let starts = [];\n        let endPoint = {x: 0, y: 0};\n        // Create the tile map using the provided terrainMap\n        const tileMap = terrainMap.map((row, y) => \n            row.map((terrainType, x) => {\n                // Find the terrain object to get color information\n                const terrain = terrainTypes.find(t => t.type === terrainType);                \n                if(terrainType == \"start\") {\n                    starts.push({x: x, y:y });\n                } else if(terrainType == \"end\") {\n                    endPoint = {x: x, y: y};\n                }\n                return { \n                    type: terrainType, \n                    color: terrain ? terrain.color : '#8bc34a', // Default to grass color if not found\n                    buildable: terrain.buildable\n                };\n            })\n        );        \n        \n        starts.forEach((startPoint) => {\n            paths.push(this.findPath(startPoint, endPoint, terrainMap));\n        });\n\n\n        return { tileMap, paths };\n    }\n\n    findPath(startPoint, endPoint, tileMap) {\n        \n        return this.aStar(startPoint, endPoint, tileMap);\n    }\n    /**\n     * A* Pathfinding Algorithm Implementation\n     * Finds the shortest path between two points on a 2D tile map,\n     * with a strong preference for \"path\" type tiles.\n     */\n\n    \n    /**\n     * A* pathfinding algorithm\n     * @param {Object} start - Starting position {x, y}\n     * @param {Object} end - Ending position {x, y}\n     * @param {Array} tileMap - 2D array representing the map\n     * @returns {Array} - Array of positions forming the path, or empty array if no path found\n     */\n    aStar(start, end, tileMap) {\n       \n        const rows = tileMap.length;\n        const cols = tileMap[0].length;\n        \n        // Validate inputs\n        if (start.x < 0 || start.x >= cols || start.y < 0 || start.y >= rows) {\n            throw new Error('Start position is outside the map bounds');\n        }\n        if (end.x < 0 || end.x >= cols || end.y < 0 || end.y >= rows) {\n            throw new Error('End position is outside the map bounds');\n        }\n        \n        // Create start and end nodes\n        const startNode = new this.nodeClass(start.x, start.y, tileMap[start.y][start.x]);\n        const endNode = new this.nodeClass(end.x, end.y, tileMap[end.y][end.x]);\n        \n        // Initialize open and closed lists\n        const openList = [];\n        const closedList = new Set();\n        const openSet = new Set(); // For faster lookups\n        \n        // Add start node to open list\n        openList.push(startNode);\n        openSet.add(startNode.key());\n        \n        // Define movement directions (4-directional: up, right, down, left)\n        const directions = [\n            {x: 0, y: -1}, // Up\n            {x: 1, y: 0},  // Right\n            {x: 0, y: 1},  // Down\n            {x: -1, y: 0}  // Left\n            \n            // {x: 1, y: 1}, // Up\n            // {x: 1, y: -1},  // Right\n            // {x: -1, y: 1},  // Down\n            // {x: -1, y: -1}  // Left\n        ];\n        \n        // Main loop\n        while (openList.length > 0) {\n            // Sort by f value and take the lowest\n            openList.sort((a, b) => a.f - b.f);\n            const currentNode = openList.shift();\n            openSet.delete(currentNode.key());\n            \n            // Add current node to closed list\n            closedList.add(currentNode.key());\n            \n            // Check if we've reached the end\n            if (currentNode.equals(endNode)) {\n                // Reconstruct the path\n                return this.reconstructPath(currentNode);\n            }\n            \n            // Generate neighbors\n            for (const dir of directions) {\n                const neighborX = currentNode.x + dir.x;\n                const neighborY = currentNode.y + dir.y;\n                \n                // Check if neighbor is inside the map\n                if (neighborX < 0 || neighborX >= cols || neighborY < 0 || neighborY >= rows) {\n                    continue;\n                }\n                \n                const tileType = tileMap[neighborY][neighborX];\n                const neighbor = new this.nodeClass(neighborX, neighborY, tileType, currentNode);\n                const neighborKey = neighbor.key();\n                \n                // Skip if neighbor is in closed list\n                if (closedList.has(neighborKey)) {\n                    continue;\n                }\n                \n                // Calculate g score for this neighbor\n                // Path tiles will have a much lower cost than other tile types\n                let movementCost = this.calculateMovementCost(tileType);\n                const tentativeG = currentNode.g + movementCost;\n                \n                // Check if this is a better path to neighbor\n                if (!openSet.has(neighborKey) || tentativeG < neighbor.g) {\n                    // Update neighbor values\n                    neighbor.g = tentativeG;\n                    neighbor.h = this.calculateHeuristic(neighbor, endNode);\n                    neighbor.f = neighbor.g + neighbor.h;\n                    \n                    // Add neighbor to open list if not there already\n                    if (!openSet.has(neighborKey)) {\n                        openList.push(neighbor);\n                        openSet.add(neighborKey);\n                    }\n                }\n            }\n        }\n        \n        // No path found\n        return [];\n    }\n    \n    /**\n     * Calculate movement cost based on tile type\n     * Path tiles are heavily favored\n     * @param {string} tileType - Type of the tile\n     * @returns {number} - Movement cost\n     */\n    calculateMovementCost(tileType) {\n        // Heavily favor \"path\" type tiles\n        if (tileType.toLowerCase() === 'path' || tileType.toLowerCase() === 'end') {\n            return 1;\n        } else {\n            // Make non-path tiles much less desirable\n            return 100000;\n        }\n    }\n    \n    /**\n     * Calculate heuristic (Manhattan distance)\n     * @param {Node} nodeA \n     * @param {Node} nodeB \n     * @returns {number} - Heuristic value\n     */\n    calculateHeuristic(nodeA, nodeB) {\n        return Math.abs(nodeA.x - nodeB.x) + Math.abs(nodeA.y - nodeB.y);\n    }\n    \n    /**\n     * Reconstruct the path from the end node to the start\n     * @param {Node} endNode - The end node\n     * @returns {Array} - Array of positions {x, y} from start to end\n     */\n    reconstructPath(endNode) {\n        const path = [];\n        let currentNode = endNode;\n        \n        while (currentNode !== null) {\n            path.unshift({\n                x: currentNode.x,\n                y: currentNode.y,\n                tileType: currentNode.tileType\n            });\n            currentNode = currentNode.parent;\n        }\n        \n        return path;\n    }\n    \n"
      },
      "planckWorld": {
        "script": "//planckWorld component\ninit({gravity = 10, gravityX = 0, gravityY = 0}) {\n  this.velocityIterations = 6;\n  this.positionIterations = 2;\n  this.physicsUpdateTimer = 0;\n  this.timeStep = 1 / 60; // Fixed timestep of 60fps\n  \n   const { World } = planck;\n    this.game.planckWorld = new World();\n}\n\npostUpdate() {\n    this.game.planckWorld.step(this.timeStep, this.velocityIterations, this.positionIterations);\n}"
      },
      "planckBody": {
        "script": "init({box2DBodySize = 1, density = 1, friction= 0, layer = 0x0001, collidesWith = 0x0001}) {\n  \n   const { Box } = planck;\n  this.body = this.game.planckWorld.createBody({\n    type: \"dynamic\",\n    position: {x: this.parent.position.x, y: this.parent.position.y}\n  });\n  this.body.createFixture({\n      shape: new Box(1.0, 1.0),\n      density: density,\n      friction: friction,\n  });\n  this.speedScale = 10;\n}\n\nupdate() {\n  if (!this.body) return;\n  const bodyPos = this.body.getTransform().p;\n\n  // Update game object position\n  this.parent.position.x = bodyPos.x;\n  this.parent.position.y = bodyPos.y;\n\n}\n\nsetVelocity(vel) {\n\tthis.body.setLinearVelocity({ x: vel.x*this.speedScale, y: vel.y * this.speedScale });\n}\ngetVelocity() {\n  let vel = this.body.getLinearVelocity();\n  return { x: vel.x / this.speedScale, y: vel.y / this.speedScale };\n}\npostUpdate() {\n  //this.body.applyForce({ x: 10, y: 0}, { x: this.parent.position.x, y: this.parent.position.y});\n}"
      },
      "planckProjectile": {
        "script": "init({ spawnType, owner, target, targetPosition, stats }) {\n  this.type = spawnType;\n  this.def = this.game.config.projectiles[this.type];\n  this.owner = owner;\n  this.target = target;\n  this.targetPosition = targetPosition;\n  this.stats = stats;\n  this.piercedEnemies = [];\n  this.ownerStats = this.owner.getComponent(\"stats\").stats;\n  this.distanceTraveled = 0;\n  this.distanceToSpawnParticle = 24;\n\n  // Add lifespan for projectile\n  this.maxLifespan = this.stats.lifespan || 5; // Default to 5 seconds\n  this.currentLifespan = 0;\n  \n  // Get the planck body from the component\n  this.planckBody = this.parent.getComponent('planckBody');\n  \n  // Calculate direction and set velocity\n  const currentPosition = {\n    x: this.parent.position.x,\n    y: this.parent.position.y\n  };\n  \n  const targetPos = this.targetPosition ? this.targetPosition : this.target.position;\n  const dx = targetPos.x - currentPosition.x;\n  const dy = targetPos.y - currentPosition.y;\n  const dist = Math.sqrt(dx * dx + dy * dy);\n  \n  // Normalize direction and multiply by speed\n  this.speed = this.stats.speed;\n  const velocityX = (dx / dist) * this.speed;\n  const velocityY = (dy / dist) * this.speed;\n  \n  // Set the linear velocity on the planck body\n  this.planckBody.setVelocity({ x: velocityX, y: velocityY });\n  \n  // Store a reference to this projectile in the body's user data\n  this.planckBody.body.setUserData(this);\n  \n  // Setup contact listener if not already done\n  if (!this.game.contactListenerSetup) {\n    this.setupContactListener();\n    this.game.contactListenerSetup = true;\n  }\n}\n\nsetupContactListener() {\n  const world = this.game.planckWorld;\n  \n  world.on('begin-contact', (contact) => {\n    const fixtureA = contact.getFixtureA();\n    const fixtureB = contact.getFixtureB();\n    \n    const bodyA = fixtureA.getBody();\n    const bodyB = fixtureB.getBody();\n    \n    const entityA = bodyA.getUserData();\n    const entityB = bodyB.getUserData();\n    \n    // Check if one is a projectile and one is an enemy\n    if (entityA && entityB) {\n      let projectile = null;\n      let enemy = null;\n      \n      if (entityA.parent && entityA.parent.type === \"projectile\" && !entityB.parent) {\n        projectile = entityA;\n        enemy = entityB;\n\n      } else if (entityB.parent && entityB.parent.type === \"projectile\" && !entityA.parent) {\n        projectile = entityB;\n        enemy = entityA;        \n      }\n      \n      if (projectile && enemy) {\n        // Handle collision in the next frame to avoid modifying physics during step\n        this.game.queuePostPhysicsCallback(() => {\n          projectile.handleEnemyCollision(enemy);\n        });\n      }\n    }\n  });\n}\n\nhandleEnemyCollision(enemy) {\n  // Skip if already hit this enemy or enemy is dead\n  if (enemy.isDead || this.piercedEnemies.includes(enemy)) {\n    return;\n  }\n  \n  // Apply damage\n  let enemyHealth = enemy.getComponent(\"health\");\n  let enemyEnergyShield = enemy.getComponent(\"energyshield\");\n  let enemyStats = enemy.getComponent(\"stats\");\n  let enemyStatClone = { ...enemyStats.stats };\n  enemyStatClone.energyShield = enemyEnergyShield.energyShield;\n\n  // Apply damage\n  let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, enemyStatClone);\n  if (!damageResult.wasEvaded) {\n    enemyHealth.hp -= damageResult.damageDealt;\n    enemyEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n    this.game.spawn(enemy.position.x, enemy.position.y, \"hitEffect\", {\n      damageType: this.stats.damageType,\n      lifeSpan: 0.3\n    });\n    if (this.ownerStats.slowEffect) {\n      enemyStats.addEffect(\n        this.game.config.effects.slow,\n        this.game.effects.slow,\n        this.ownerStats.slowEffect\n      );\n    }\n  }\n\n  // Special effects logic (summon, leech, thief)\n  if (\n    this.ownerStats.summonChance > 0 &&\n    enemyHealth.hp <= 0 &&\n    Math.random() < this.ownerStats.summonChance - 1\n  ) {\n    this.game.spawn(enemy.position.x, enemy.position.y, \"summonedTower\", {\n      objectType: \"towers\",\n      spawnType: this.ownerStats.summonType,\n      owner: this.owner\n    });\n  }\n  if (this.ownerStats.leech > 0) {\n    const healing = this.stats.damage * this.ownerStats.leech * this.game.state.stats.healingMultiplier;\n    this.game.state.bloodCoreHP = Math.min(\n      this.game.state.stats.maxBloodCoreHP,\n      this.game.state.bloodCoreHP + healing\n    );\n  }\n  if (this.ownerStats.thief && this.ownerStats.thief != 0) {\n    const stealAmt = this.stats.damage * this.ownerStats.thief * this.game.state.stats.bloodShardMultiplier;\n    this.game.state.bloodShards += stealAmt;\n  }\n\n  // Splash damage if applicable\n  if (this.stats.splashRadius > 0) {\n    this.applySplashDamage(enemy);\n    this.game.spawn(this.parent.position.x, this.parent.position.y, \"explosion\", {\n      radius: this.stats.splashRadius\n    });\n  }\n\n  // Piercing logic\n  if (this.stats.piercing > 0 && this.piercedEnemies.length < this.stats.piercing) {\n    this.piercedEnemies.push(enemy);\n    const nearbyEnemies = this.game.spatialGrid.getNearbyEntities(\n      this.parent.gridPosition.x,\n      this.parent.gridPosition.y,\n      this.ownerStats.range,\n      \"enemy\"\n    );\n    const newTarget = this.findNewTarget(nearbyEnemies);\n    if (newTarget) {\n      this.target = newTarget;\n      this.targetPosition = null; // Switch to target-based tracking\n      \n      // Recalculate velocity toward the new target\n      const currentPosition = {\n        x: this.parent.position.x,\n        y: this.parent.position.y\n      };\n      \n      const dx = newTarget.position.x - currentPosition.x;\n      const dy = newTarget.position.y - currentPosition.y;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      \n      if (dist > 0) {\n        const velocityX = (dx / dist) * this.speed;\n        const velocityY = (dy / dist) * this.speed;\n        this.planckBody.setVelocity({ x: velocityX, y: velocityY });\n      }\n    } else {\n      // No new target, keep going but don't destroy\n      return;\n    }\n  } else {\n    // No piercing or reached piercing limit, destroy projectile\n    //this.parent.destroy();\n  }\n}\n\napplySplashDamage(centerEnemy) {\n  // Get nearby enemies within splash radius\n  const nearbyEnemies = this.game.spatialGrid.getNearbyEntities(\n    this.parent.gridPosition.x,\n    this.parent.gridPosition.y,\n    this.stats.splashRadius,\n    \"enemy\"\n  );\n  \n  const gridSize = this.game.config.configs.game.gridSize;\n  const splashRadiusSq = this.stats.splashRadius * this.stats.splashRadius * gridSize * gridSize;\n  \n  for (const enemy of nearbyEnemies) {\n    // Skip the center enemy (already damaged) and dead enemies\n    if (enemy === centerEnemy || enemy.isDead || this.piercedEnemies.includes(enemy)) continue;\n    \n    let enemyHealth = enemy.getComponent(\"health\");\n    let enemyEnergyShield = enemy.getComponent(\"energyshield\");\n    let enemyStats = enemy.getComponent(\"stats\");\n    let enemyStatClone = { ...enemyStats.stats };\n    enemyStatClone.energyShield = enemyEnergyShield.energyShield;\n\n    const dx = enemy.position.x - this.parent.position.x;\n    const dy = enemy.position.y - this.parent.position.y;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq <= splashRadiusSq) {\n      let damageResult = engine.getFunction(\"calculateDamage\")(this.stats, enemyStatClone);\n      if (!damageResult.wasEvaded) {\n        enemyHealth.hp -= damageResult.damageDealt;\n        enemyEnergyShield.absorbDamage(damageResult.damageAbsorbed);\n        this.game.spawn(enemy.position.x, enemy.position.y, \"hitEffect\", {\n          damageType: this.stats.damageType,\n          lifeSpan: 0.3\n        });\n        if (this.ownerStats.slowEffect) {\n          enemyStats.addEffect(\n            this.game.config.effects.slow,\n            this.game.effects.slow,\n            this.ownerStats.slowEffect\n          );\n        }\n      }\n    }\n  }\n}\n\nupdate() {\n  if(this.target) this.targetCurrentPosition = {...this.target.position };\n  \n  // Update lifespan and destroy if expired\n  this.currentLifespan += this.game.deltaTime;\n  if (this.currentLifespan >= this.maxLifespan) {\n    this.parent.destroy();\n    return;\n  }\n\n  // Remove if target is gone (only if no targetPosition)\n  if (!this.targetPosition && (!this.target || this.target.destroyed)) {\n    if(this.targetCurrentPosition) {\n      this.targetPosition = this.targetCurrentPosition;\n      \n      // Recalculate velocity toward the last known position\n      const currentPosition = {\n        x: this.parent.position.x,\n        y: this.parent.position.y\n      };\n      \n      const dx = this.targetPosition.x - currentPosition.x;\n      const dy = this.targetPosition.y - currentPosition.y;\n      const dist = Math.sqrt(dx * dx + dy * dy);\n      \n      if (dist > 0) {        \n        const velocityX = (dx / dist) * this.speed;\n        const velocityY = (dy / dist) * this.speed;\n        this.planckBody.setVelocity({ x: velocityX, y: velocityY });\n      }\n    } else {\n      this.parent.destroy(); \n      return;\n    }\n  }\n    \n\n\n  // Particle spawning logic\n  const currentPos = this.planckBody.body.getPosition();\n  const currentVel = this.planckBody.body.getLinearVelocity();\n  const speed = Math.sqrt(currentVel.x * currentVel.x + currentVel.y * currentVel.y);\n  \n  // Only spawn particles if the projectile is moving\n  if (speed > 0 && this.def.particle) {\n    this.distanceTraveled += speed * this.game.deltaTime;\n    \n    if (this.distanceTraveled > this.distanceToSpawnParticle) {\n      this.game.spawn(currentPos.x, currentPos.y, \"particle\", { \n        objectType: \"particles\", \n        spawnType: this.def.particle\n      });\n      this.distanceTraveled = 0;\n      this.distanceToSpawnParticle = 24 + Math.random() * 3;\n    }\n  }\n}\n\n// Helper method to find a new target for piercing\nfindNewTarget(nearbyEnemies) {\n  const gridSize = this.game.config.configs.game.gridSize;\n  const rangeSq = this.ownerStats.range * this.ownerStats.range * gridSize * gridSize;\n  for (let enemy of nearbyEnemies) {\n    if (!enemy.destroyed && !this.piercedEnemies.includes(enemy)) {\n      const dx = enemy.position.x - this.parent.position.x;\n      const dy = enemy.position.y - this.parent.position.y;\n      const distSq = dx * dx + dy * dy;\n      if (distSq < rangeSq) {\n        return enemy;\n      }\n    }\n  }\n  return null;\n}"
      }
    },
    "renderers": {
      "renderer": {
        "script": "  init( { objectType, spawnType, setDirection = -2}) {\n        this.images = this.game.imageManager.getImages(objectType, spawnType);  \n        this.setDirection = setDirection;\n        this.currentDirection = 0; // Default direction (will be 0-7 now)\n        // Rotated direction zones 45 degrees counter-clockwise\n        // Each zone covers a 45-degree arc (π/4 radians)\n        this.directionZones = [\n            { min: Math.PI/8, max: 3*Math.PI/8 },     // 0: Down-Right (Southeast)\n            { min: 3*Math.PI/8, max: 5*Math.PI/8 },   // 1: Down\n            { min: 5*Math.PI/8, max: 7*Math.PI/8 },   // 2: Down-Left (Southwest)\n            { min: 7*Math.PI/8, max: -7*Math.PI/8 },  // 3: Left (West)\n            { min: -7*Math.PI/8, max: -5*Math.PI/8 }, // 4: Up-Left (Northwest)\n            { min: -5*Math.PI/8, max: -3*Math.PI/8 }, // 5: Up\n            { min: -3*Math.PI/8, max: -Math.PI/8 },   // 6: Up-Right (Northeast)\n            { min: -Math.PI/8, max: Math.PI/8 }       // 7: Right (East)\n        ];\n        this.isometric = this.game.config.configs.game.isIsometric;\n    }\n\n    draw() {\n        if( this.setDirection < 0 ) {\n            const dx = this.parent.position.x - this.parent.lastPosition.x; // Change in x\n            const dy = this.parent.position.y - this.parent.lastPosition.y; // Change in y\n            \n            // Only update direction if there's movement\n            if (Math.abs(dx) > 0.001 || Math.abs(dy) > 0.001) {\n                // Calculate angle of movement in radians\n                const angle = Math.atan2(dy, dx);\n                \n                // Determine which of the 8 directional zones the angle falls into\n                for (let i = 0; i < this.directionZones.length; i++) {\n                    const zone = this.directionZones[i];\n                    \n                    // Special handling for the West zone which wraps around from PI to -PI\n                    if (i === 3) {\n                        if (angle >= zone.min || angle <= zone.max) {\n                            this.currentDirection = i;\n                            break;\n                        }\n                    } \n                    // Normal zone check\n                    else if (angle >= zone.min && angle < zone.max) {\n                        this.currentDirection = i;\n                        break;\n                    }\n                }\n            }\n        } else {\n            this.currentDirection = this.setDirection;\n        }\n        let direction = this.currentDirection + (this.isometric ? 0 : -1);\n        if(direction == -1 ) direction = this.images.length - 1;//wrap around\n        // Draw the image for the current direction\n        if (this.images && this.images.length > direction) {\n            const image = this.images[direction];\n            if (image) {\n                const imgWidth = image.width;\n                const imgHeight = image.height;\n                \n                const drawX = this.parent.drawPosition.x - imgWidth / 2;\n                let drawY = this.parent.drawPosition.y - imgHeight / 2;\n                if( this.parent.position.z ) {\n                   drawY -= this.parent.position.z;                   \n                }\n                this.game.ctx.drawImage(image, drawX, drawY);\n            }\n        }\n    }"
      },
      "health": {
        "script": "  init(){\n        let statsComp = this.parent.getComponent('stats');\n        this.hp = statsComp.stats.hp;\n        \n        statsComp.addStat('maxHp', this.hp);\n    }\n    update() {        \n        if (this.hp <= 0){            \n            this.parent.destroy();\n        }\n    }\n\n    draw() {\n        let imageSize = this.game.config.configs.game.imageSize;\n        let statsComp = this.parent.getComponent('stats');\n        const healthPercentage = this.hp / statsComp.stats.maxHp;\n        const barWidth = 30;\n        this.game.ctx.fillStyle = 'rgba(0, 0, 0, 0.2)';\n\n        const isoPos = this.game.translator.pixelToIso(this.parent.position.x, this.parent.position.y)\n\n        this.game.ctx.fillRect(isoPos.x - barWidth/2, isoPos.y - imageSize * .3, barWidth, 5);\n        if( healthPercentage >= 0 ) {\n            this.game.ctx.fillStyle = healthPercentage > 0.5 ? 'rgba(0, 255, 0, 0.5)' : healthPercentage > 0.25 ? 'rgba(255, 255, 0, 0.5)' : 'rgba(255, 0, 0, 0.5)';\n            this.game.ctx.fillRect(isoPos.x - barWidth/2, isoPos.y - imageSize * .3, barWidth * healthPercentage, 5);\n        }\n    }"
      },
      "energyShield": {
        "script": " init(){\n        // Get stats component for reference\n        let statsComp = this.parent.getComponent('stats');\n        \n        // Shield configuration with defaults\n        this.maxEnergyShield = statsComp.stats.energyShield || 0;\n        this.energyShield = this.maxEnergyShield || 0;\n        this.rechargeRate = statsComp.stats.rechargeRate || 10; // Shield points per second\n        this.rechargeDelay = statsComp.stats.rechargeDelay || 2000; // Milliseconds before recharge starts\n        this.lastDamageTime = 0; // Timestamp of last damage taken\n        \n        // Add relevant stats to the stats component\n        statsComp.addStat('maxEnergyShield', this.maxEnergyShield);\n        statsComp.addStat('shieldRechargeRate', this.rechargeRate);\n        statsComp.addStat('shieldRechargeDelay', this.rechargeDelay);\n        \n        // Visual settings\n        this.shieldColor = 'rgba(77, 166, 255, 0.6)'; // Light blue default\n        this.shieldEmptyColor = 'rgba(77, 166, 255, 0.2)';\n        this.barWidth = 30;\n        this.barHeight = 5;\n        this.barOffset = 8; // Distance above health bar\n    }\n    \n    /**\n     * Handle incoming damage\n     * @param {number} damage - Amount of incoming damage\n     * @returns {Object} - Damage breakdown\n     */\n    absorbDamage(damage) {\n        const result = {\n            absorbedByShield: 0,\n            remainingDamage: 0\n        };\n        \n        // Reset recharge timer when taking damage\n        this.lastDamageTime = this.game.currentTime;\n        \n        if (this.energyShield > 0) {\n            if (damage <= this.energyShield) {\n                // Shield absorbs all damage\n                result.absorbedByShield = damage;\n                this.energyShield -= damage;\n            } else {\n                // Shield is depleted, remaining damage goes through\n                result.absorbedByShield = this.energyShield;\n                result.remainingDamage = damage - this.energyShield;\n                this.energyShield = 0;\n            }\n        } else {\n            // No shield available\n            result.remainingDamage = damage;\n        }\n        \n        return result;\n    }\n    \n    /**\n     * Update shield state (recharging)\n     */\n    update() {\n        let statsComp = this.parent.getComponent('stats');\n        this.maxEnergyShield = statsComp.stats.energyShield || 0;\n        // Check if enough time has passed since last damage\n        const timeSinceLastDamage = this.game.currentTime - this.lastDamageTime;\n        \n        if (timeSinceLastDamage >= this.rechargeDelay && this.energyShield < this.maxEnergyShield) {\n            // Calculate recharge amount based on time elapsed and rate\n            const deltaTime = this.game.deltaTime || 16; // Fallback to 60fps if deltaTime not available\n            const rechargeAmount = (this.rechargeRate * deltaTime) / 1000; // Convert to per-frame amount\n            \n            // Apply recharge\n            this.energyShield = Math.min(this.maxEnergyShield, this.energyShield + rechargeAmount);\n        }\n    }\n    \n    /**\n     * Draw shield bar\n     */\n    draw() {\n        if (this.maxEnergyShield <= 0) return; // Don't draw if no shield capacity\n        \n        const shieldPercentage = this.energyShield / this.maxEnergyShield;        \n        \n        // Shield bar will be slightly above that\n        const barY = this.parent.drawPosition.y - this.game.config.configs.game.imageSize * .3 - this.barOffset;\n        \n        // Draw shield background/empty bar\n        this.game.ctx.fillStyle = this.shieldEmptyColor;\n        this.game.ctx.fillRect(this.parent.drawPosition.x - this.barWidth/2, barY, this.barWidth, this.barHeight);\n        \n        // Draw current shield level\n        if (shieldPercentage > 0) {\n            this.game.ctx.fillStyle = this.shieldColor;\n            this.game.ctx.fillRect(\n                this.parent.drawPosition.x - this.barWidth/2, \n                barY, \n                this.barWidth * shieldPercentage, \n                this.barHeight\n            );\n        }\n        \n        // Draw recharge indicator if currently recharging\n        const timeSinceLastDamage = this.game.currentTime - this.lastDamageTime;\n        if (timeSinceLastDamage < this.rechargeDelay && this.energyShield < this.maxEnergyShield) {\n            const rechargePercentage = timeSinceLastDamage / this.rechargeDelay;\n            \n            // Draw a small indicator below the shield bar\n            this.game.ctx.fillStyle = 'rgba(255, 255, 255, 0.5)';\n            this.game.ctx.fillRect(\n                this.parent.drawPosition.x - this.barWidth/2, \n                barY + this.barHeight + 1, \n                this.barWidth * rechargePercentage, \n                2\n            );\n        }\n    }\n    \n    /**\n     * Get current shield value\n     * @returns {number} Current shield amount\n     */\n    getShieldValue() {\n        return this.energyShield;\n    }\n    \n    /**\n     * Reset shield to full\n     */\n    resetShield() {\n        this.energyShield = this.maxEnergyShield;\n    }\n    \n    /**\n     * Temporarily boost shield capacity\n     * @param {number} amount - Amount to boost by\n     * @param {number} duration - Duration in milliseconds\n     */\n    boostShield(amount, duration) {\n        const originalMax = this.maxEnergyShield;\n        this.maxEnergyShield += amount;\n        this.energyShield += amount;\n        \n        // Reset after duration\n        setTimeout(() => {\n            this.maxEnergyShield = originalMax;\n            this.energyShield = Math.min(this.energyShield, this.maxEnergyShield);\n        }, duration);\n    }"
      },
      "rangeIndicator": {
        "script": "    init() {\n        this.ctx = this.game.ctx;\n        this.translator = this.game.translator; // Access translator for tileWidth\n    }\n\n    draw() {\n        let statsComp = this.getComponent('stats');\n        if (!statsComp || !statsComp.stats || !statsComp.stats.range) {\n            return;\n        }\n        this.drawRangeIndicator(statsComp.stats.range);\n    }\n\n    drawRangeIndicator(range) {    \n        const drawRage = range - 1;        \n        const pixelX = this.parent.position.x;\n        const pixelY = this.parent.position.y;\n        let gridPos = this.translator.pixelToGrid(pixelX, pixelY);\n        gridPos = this.translator.snapToGrid(gridPos.x, gridPos.y);\n        const isoPos = this.translator.pixelToIso(pixelX, pixelY);\n    \n        const isoRangeX = drawRage * this.game.config.configs.game.gridSize;  // Matches gridToIso X scaling\n        const isoRangeY = drawRage * this.game.config.configs.game.gridSize * 0.5; // Matches gridToIso Y scaling\n    \n        if (gridPos.x === this.game.state.mousePosition.gridX && gridPos.y === this.game.state.mousePosition.gridY) {\n            this.ctx.save();\n            this.ctx.beginPath();\n            this.ctx.strokeStyle = 'rgba(255, 0, 0, 0.5)';\n            this.ctx.lineWidth = 2;\n    \n            this.ctx.ellipse(\n                isoPos.x,\n                isoPos.y,\n                isoRangeX,\n                isoRangeY,\n                0,\n                0,\n                2 * Math.PI\n            );\n    \n            this.ctx.stroke();\n            this.ctx.closePath();\n            this.ctx.restore();\n        }    \n      \n    }"
      },
      "hitEffectRenderer": {
        "script": " init( ) {\n        this.ctx = this.game.ctx;\n    }\n\n    draw() {\n        const particleComp = this.parent.getComponent(\"HitEffectParticle\");\n        if (!particleComp || !particleComp.particles.length) return;\n\n        const basePos = this.game.translator.pixelToIso(this.parent.position.x, this.parent.position.y);\n\n        for (let particle of particleComp.particles) {\n            this.ctx.fillStyle = `${particle.color}${particle.alpha})`;\n            this.ctx.beginPath();\n            const drawX = basePos.x + particle.x;\n            const drawY = basePos.y + particle.y;\n            this.ctx.arc(drawX, drawY, particle.size, 0, Math.PI * 2);\n            this.ctx.fill();\n        }\n    }"
      },
      "uiManager": {
        "script": "    init() {\n        this.canvas = this.game.canvas;\n        this.ctx = this.game.ctx;\n        this.gridSize = this.game.config.configs.game.gridSize;\n        this.game.uiManager = this;\n        this.upgradeMenu = document.getElementById('upgradeMenu');\n        this.upgradeOptionsDiv = document.getElementById('upgradeOptions');\n        this.overlay = document.getElementById('overlay');\n        this.tooltip = document.getElementById('tooltip');\n        this.gameOverMenu = document.getElementById('gameOverMenu');\n        this.victoryMenu = document.getElementById('victoryMenu');\n\n        // Stats displays\n        this.shardsDisplay = document.getElementById('shardsDisplay');\n        this.essenceDisplay = document.getElementById('essenceDisplay');\n        this.essenceNeededDisplay = document.getElementById('essenceNeededDisplay');\n        this.populationDisplay = document.getElementById('populationDisplay');\n        this.maxPopulationDisplay = document.getElementById('maxPopulationDisplay');\n        this.hpDisplay = document.getElementById('hpDisplay');\n        this.waveDisplay = document.getElementById('waveDisplay');\n        this.waveProgress = document.getElementById('waveProgress');\n        this.gameOverWave = document.getElementById('gameOverWave');\n        this.towerMenu = document.getElementById('towerMenu');\n        let towerMenuOptions = '';\n        for(let type in this.game.config.towers) {\n            if(this.game.config.towers[type].cost > 0){\n                towerMenuOptions += `<div class=\"tower-option\" data-type=\"${type}\">${this.game.config.towers[type].title} (${this.game.config.towers[type].cost})</div>`;\n            }\n        }\n        this.towerMenu.innerHTML = towerMenuOptions;\n       this.setupTowerPlacement();\n       this.setupEventListeners();\n       \n    }\n\n  setupEventListeners() {\n        document.getElementById('startGameBtn').removeAttribute('style');\n        document.getElementById('startGameBtn').addEventListener('click', (e) => {    \n            this.game.state.isPaused = false;\n            e.target.setAttribute('style','display:none;');\n        });\n        document.querySelector(\"#gameOverMenu .menu-button\").addEventListener(\"click\", (e) => {\n            this.game.reset();\n        });\n        \n        document.querySelector(\"#victoryMenu .menu-button\").addEventListener(\"click\", (e) => {\n            this.game.reset();\n        });\nthis.game.canvas.addEventListener('mousemove', (e) => {\n            if (!this.game.state.selectedTowerType && !this.game.state.towers.length) return;\n\n            if (this.game.state.selectedTowerType && this.game.state.previewTower) {\n                this.game.state.previewTower.position.x = this.game.state.mousePosition.gridX * this.gridSize + this.gridSize / 2;\n                this.game.state.previewTower.position.y = this.game.state.mousePosition.gridY * this.gridSize + this.gridSize / 2;\n                const isValidPosition = this.checkValidTowerPosition(this.game.state.mousePosition.gridX, this.game.state.mousePosition.gridY);\n                this.game.canvas.style.cursor = isValidPosition ? 'pointer' : 'not-allowed';\n            }\n\n            let hoveredTower = null;\n            for (const tower of this.game.state.towers) {\n                const dist = Math.hypot(tower.gridPosition.x - this.game.state.mousePosition.gridX, tower.gridPosition.y + this.game.translator.tileHeight / 2 - this.game.state.mousePosition.gridY);\n                if (dist < 20) {\n                    hoveredTower = tower;\n                    break;\n                }\n            }\n\n            if (hoveredTower && hoveredTower.stats) {\n                let info = `${hoveredTower.type} (Level ${hoveredTower.level})\\n`;\n                info += `Damage: ${Math.round(hoveredTower.stats.damage * this.game.state.stats.damageMultiplier * 10) / 10}\\n`;\n                info += `Attack Speed: ${Math.round(1000 / hoveredTower.stats.attackSpeed)} per sec\\n`;\n                info += `Range: ${hoveredTower.stats.range}\\n`;\n                info += `Crit Chance: ${Math.round(hoveredTower.stats.critChance * 100)}%\\n`;\n                if (hoveredTower.stats.leech > 0) {\n                    info += `Life Leech: ${Math.round(hoveredTower.stats.leech * 100 * this.game.state.stats.healingMultiplier) / 100} HP per hit\\n`;\n                }\n                if (hoveredTower.stats.piercing > 0) {\n                    info += `Piercing: ${hoveredTower.stats.piercing} enemies\\n`;\n                }\n                if (hoveredTower.stats.summonChance > 0) {\n                    info += `Summon Chance: ${Math.round(hoveredTower.stats.summonChance * 100)}%\\n`;\n                }\n\n                this.showTooltip(e.clientX, e.clientY, info);\n                hoveredTower.showRange = true;\n            } else {\n                this.hideTooltip();\n                this.game.state.towers.forEach(t => t.showRange = false);\n            }\n        });\n\n        this.game.canvas.addEventListener('mouseout', () => {\n            this.hideTooltip();\n        });\n        \n        this.game.canvas.addEventListener('click', (e) => {\n            if (!this.game.state.selectedTowerType) return;\n            \n\n            if (this.checkValidTowerPosition(this.game.state.mousePosition.gridX, this.game.state.mousePosition.gridY)) {\n                // Create the tower\n                let cost = this.game.config.towers[this.game.state.selectedTowerType].cost;\n                let populationCost = this.game.config.towers[this.game.state.selectedTowerType].population || 0;\n                \n                const finalCost = Math.floor(cost * this.game.state.stats.towerCostMod);\n                \n                if (this.game.state.bloodShards >= finalCost && this.game.state.stats.population + populationCost <= this.game.state.stats.maxPopulation) {\n          \n                    const tower = this.game.spawn(this.game.state.mousePosition.gridX * this.gridSize + this.gridSize / 2, \n                                                 this.game.state.mousePosition.gridY * this.gridSize + this.gridSize / 2, \"tower\", { objectType: \"towers\", spawnType: this.game.state.selectedTowerType, setDirection: 1});\n                    tower.placed = true;\n                    this.game.state.tileMap[this.game.state.mousePosition.gridY][this.game.state.mousePosition.gridX].buildable = false;\n                    this.game.state.tileMap[this.game.state.mousePosition.gridY][this.game.state.mousePosition.gridX].tower = tower;\n                    this.game.state.bloodShards -= finalCost;\n                    this.game.state.previewTower.destroy();\n                    this.game.state.previewTower = null;\n                    // Clear selection\n                    this.game.state.selectedTowerType = null;\n                    this.game.canvas.style.cursor = 'default';\n                }\n            }\n        });\n        \n        // Cancel tower placement with right click\n        this.game.canvas.addEventListener('contextmenu', (e) => {\n            e.preventDefault();\n            if (this.game.state.selectedTowerType) {\n                this.game.state.selectedTowerType = null;\n                this.game.canvas.style.cursor = 'default';\n            }\n        });\n}\n\n  setupTowerPlacement() {\n\n        \n        const towerButtons = document.querySelectorAll('.tower-option');\n        towerButtons.forEach(button => {\n            button.addEventListener('click', () => {\n\n                if(this.game.state.isPaused) return;\n                \n                const type = button.getAttribute('data-type');\n                let cost = this.game.config.towers[type].cost;\n                const finalCost = Math.floor(cost * this.game.state.stats.towerCostMod);\n                \n                let populationCost = this.game.config.towers[type].population || 0;\n                if (this.game.state.bloodShards >= finalCost && this.game.state.stats.population + populationCost <= this.game.state.stats.maxPopulation) {\n                    this.game.state.selectedTowerType = type;\n                    if(this.game.state.previewTower) {\n                        this.game.state.previewTower.destroy();\n                    }\n                    this.game.state.previewTower = this.game.spawn(-100, -100, 'previewTower', { objectType: \"towers\", spawnType: this.game.state.selectedTowerType});\n                }\n            });\n            \n            // Show tooltip with info\n            button.addEventListener('mouseover', (e) => {\n                const type = button.getAttribute('data-type');\n                let info = this.game.config.towers[type].info;\n                \n                this.showTooltip(e.clientX, e.clientY, info);\n            });\n            \n            button.addEventListener('mouseout', () => {\n                this.hideTooltip();\n            });\n        });\n        \n        \n    }\n\n    checkValidTowerPosition(posX, posY) {\n        if(posX >= 0 && posY >= 0 && this.game.state.tileMap.length > posY && this.game.state.tileMap[posY].length > posX){\n            return this.game.state.tileMap[posY][posX].buildable;            \n        }\n        return false;\n    }\n\n    reset() {\n        this.gameOverMenu.style.display = 'none';\n        this.victoryMenu.style.display = 'none';\n        this.overlay.style.display = 'none';\n        this.waveDisplay.textContent = '1';\n        this.waveProgress.style.width = '0%';        \n\n\n    }\n\n\n    draw() {\n       this.shardsDisplay.textContent = Math.floor(this.game.state.bloodShards);\n        this.essenceDisplay.textContent = Math.floor(this.game.state.essence);\n        this.essenceNeededDisplay.textContent = Math.floor(this.game.state.essenceToNextLevel);\n        this.hpDisplay.textContent = Math.floor(this.game.state.bloodCoreHP);\n        this.populationDisplay.textContent = Math.floor(this.game.state.stats.population);\n        this.maxPopulationDisplay.textContent = Math.floor(this.game.state.stats.maxPopulation);  \n        if (this.game.state.enemies.length === 0 && this.game.state.enemiesSpawned >= this.game.state.numEnemiesInWave && !this.game.state.victory) {\n            const countdown = Math.ceil((this.game.state.waveDelay - this.game.state.waveTimer) / 60);\n            this.ctx.fillStyle = 'white';\n            this.ctx.font = '20px Arial';\n            this.ctx.textAlign = 'center';\n            this.ctx.fillText(`Next Wave in ${countdown}...`, this.canvas.width / 2, 50);\n        }  \n}\n\n    updateWaveDisplay(waveNumber) {\n        this.waveDisplay.textContent = waveNumber;\n    }\n\n\n    showTooltip(x, y, text) {\n        const tooltip = document.getElementById('tooltip');\n        tooltip.style.display = 'block';\n        tooltip.style.left = (x + 10) + 'px';\n        tooltip.style.top = (y + 10) + 'px';\n        tooltip.textContent = text;\n    }\n\n    hideTooltip() {\n        const tooltip = document.getElementById('tooltip');\n        tooltip.style.display = 'none';\n    }"
      },
      "lightningRenderer": {
        "script": "  init( {owner}) {\n        this.ctx = this.game.ctx;\n        const ownerStats = owner.getComponent(\"stats\").stats;\n        this.startOffsetY = ownerStats.projectileStartOffsetY || this.game.configs.game.GRID_SIZE / 2;\n    }\n\n    draw() {\n        const projectile = this.parent.getComponent(\"ChainProjectile\");\n        if (!projectile || !projectile.chainTargets.length) return;\n\n        this.ctx.strokeStyle = \"rgba(0, 255, 255, 0.8)\"; // Cyan lightning\n        this.ctx.lineWidth = 2;\n        let stats = this.parent.getComponent('stats').stats;\n        // Start from Tesla Coil (parent position)\n        let startPos = this.game.translator.pixelToIso(this.parent.position.x, this.parent.position.y);\n        startPos.y -= this.startOffsetY;//dont shoot off the ground\n        for (let i = 0; i < projectile.chainTargets.length; i++) {\n            const target = projectile.chainTargets[i];\n            if (!target || target.destroyed) continue;\n\n            const endPos = this.game.translator.pixelToIso(target.position.x, target.position.y);\n            this.drawLightning(startPos, endPos);\n\n            // Next arc starts from this target\n            startPos = endPos;\n        }\n    }\n\n    drawLightning(startPos, endPos) {\n        this.ctx.beginPath();            \n        this.ctx.moveTo(startPos.x, startPos.y);\n\n        const segments = 8; // Number of zigzag points\n        const dx = (endPos.x - startPos.x) / segments;\n        const dy = (endPos.y - startPos.y) / segments;\n\n        let currentX = startPos.x;\n        let currentY = startPos.y;\n\n        for (let i = 1; i < segments; i++) {\n            currentX += dx;\n            currentY += dy;\n\n            // Add random offset for jagged effect\n            const offsetX = (Math.random() - 0.5) * 10; // Max 10px jitter\n            const offsetY = (Math.random() - 0.5) * 10;\n\n            this.ctx.lineTo(currentX + offsetX, currentY + offsetY);\n        }\n\n        this.ctx.lineTo(endPos.x, endPos.y);\n        this.ctx.stroke();\n    }"
      },
      "explosion": {
        "script": "   init( {radius}) {\n        this.maxRadius = radius * this.game.config.configs.game.gridSize / 2;\n        this.currentRadius = 0;\n        this.alpha = 1;\n    }\n\n    update() {\n        this.currentRadius += this.maxRadius * 0.1;\n        this.alpha -= 0.05;\n        if( this.alpha < 0 ) {\n            this.parent.destroy();\n        }\n    }\n\n    draw() {\n        const pixelX = this.parent.position.x;\n        const pixelY = this.parent.position.y;\n\n        // Convert pixel to isometric\n        const isoPos = this.game.translator.pixelToIso(pixelX, pixelY);\n        const isoRadiusX = this.currentRadius;         // X-axis range remains roughly the same in isometric space\n        const isoRadiusY = this.currentRadius * 0.5;   // Y-axis range is halved due to isometric compression\n\n        this.game.ctx.beginPath();\n        this.game.ctx.ellipse(\n                isoPos.x,           // Center x in isometric coords\n                isoPos.y,           // Center y in isometric coords\n                isoRadiusX,          // X radius (wider due to isometric projection)\n                isoRadiusY,          // Y radius (shorter due to flattening)\n                0,                  // Rotation (none needed for isometric)\n                0,                  // Start angle\n                2 * Math.PI         // End angle (full circle)\n            );\n        this.game.ctx.fillStyle = `rgba(255, 200, 0, ${this.alpha * 0.5})`;\n        this.game.ctx.fill();\n\n        this.game.ctx.beginPath();\n        this.game.ctx.ellipse(\n                isoPos.x,           // Center x in isometric coords\n                isoPos.y,           // Center y in isometric coords\n                isoRadiusX * .7,          // X radius (wider due to isometric projection)\n                isoRadiusY * .7,          // Y radius (shorter due to flattening)\n                0,                  // Rotation (none needed for isometric)\n                0,                  // Start angle\n                2 * Math.PI         // End angle (full circle)\n            );\n        this.game.ctx.fillStyle = `rgba(255, 100, 0, ${this.alpha})`;\n        this.game.ctx.fill();\n    \n    }"
      },
      "mapRenderer": {
        "script": "    init({canvasBuffer, terrainCanvasBuffer, environment, imageManager, levelName, gameConfig, level}) {   \n        \n        this.config = gameConfig;\n        this.imageManager = imageManager;\n        this.environment = environment;\n        this.ctx = canvasBuffer.getContext('2d');\n        this.selectedTowerType = null;\n        this.hoverCell = { x: -1, y: -1 };\n        this.showRange = false;\n        this.isMapCached = false; // Flag to track if map needs redrawing\n        this.currentLevel = levelName;\n        this.tileMap = level.tileMap;\n        this.terrainBGColor = level.tileMap.terrainBGColor;\n        // Create off-screen canvas for caching\n        this.mapCacheCanvas = document.createElement('canvas');\n        this.mapCacheCanvas.width = this.config.canvasWidth;\n        this.mapCacheCanvas.height = this.config.canvasHeight;\n        this.mapCacheCtx = this.mapCacheCanvas.getContext('2d');\n\n        \n        this.envCacheCanvasBG = document.createElement('canvas');\n        this.envCacheCanvasBG.width = this.config.canvasWidth;\n        this.envCacheCanvasBG.height = this.config.canvasHeight / 2;\n        this.envCacheCtxBG = this.envCacheCanvasBG.getContext('2d');\n\n        this.envCacheCanvasFG = document.createElement('canvas');\n        this.envCacheCanvasFG.width = this.config.canvasWidth;\n        this.envCacheCanvasFG.height = this.config.canvasHeight / 2;\n        this.envCacheCtxFG = this.envCacheCanvasFG.getContext('2d');\n\n        this.terrainCanvas = terrainCanvasBuffer;\n        this.terrainCanvas.width = this.config.canvasWidth;\n        this.terrainCanvas.height = this.config.canvasWidth;\n        this.terrainCtx = this.terrainCanvas.getContext('2d');\n        \n        this.terrainTileMapper = this.game.terrainTileMapper;\n        this.game.mapRenderer = this;\n        this.isometric = this.game.config.configs.game.isIsometric;\n    }\n\n    draw(){}\n    renderBG(state, tileMapData, tileMap, paths) {\n        this.clearMap(tileMapData);\n        // Generate cache if not already done\n        if (!this.isMapCached) {\n            this.cacheMap(tileMapData, tileMap, paths, this.isometric);            \n        }        \n  \n        // Draw cached map image to main canvas\n      \n       this.ctx.drawImage(\n          this.terrainCanvas, \n          this.isometric \n              ? 0 \n              : ( this.terrainCanvas.width - tileMap.length * this.config.gridSize) / 2,\n          this.isometric \n              ? -tileMap.length * this.config.gridSize / 4 \n              : 0\n      );\n       //this.ctx.drawImage(this.terrainCanvas, 0, 0);\n        //this.ctx.drawImage(this.mapCacheCanvas, 0,  -this.config.canvasHeight / 2);\n        this.ctx.drawImage(this.envCacheCanvasBG, 0, 0);\n    }\n    renderFG() {  \n        this.ctx.drawImage(this.envCacheCanvasFG, 0, this.config.canvasHeight / 2);\n    }    \n    setLevel(level) {\n        this.currentLevel = level;\n        this.terrainImages = this.imageManager.getImages(\"levels\", level);\n\n    }\n\n    drawTileMap(tileMapData, isometric) {\n        let terrainLayers = [];        \n        tileMapData.terrainTypes.forEach((terrainType) => {\n            terrainLayers.push(terrainType.type);\n        });\n        let mapSize = tileMapData.terrainMap.length;\n        let mapByLayer = [];\n        for(let i = 0; i < mapSize; i++) {\n            mapByLayer[i] = [];\n            for( let j = 0; j < mapSize; j++ ) {\n                let tile = tileMapData.terrainMap[i][j];\n                let tileIndex = terrainLayers.indexOf(tile);\n                mapByLayer[i][j] = tileIndex;\n            }\n        }\n\n\n        this.terrainTileMapper.draw(mapByLayer);\n    }\n    clearMap(tileMapData) {\n        this.ctx.clearRect(0, 0, this.config.canvasWidth, this.config.canvasHeight);\n        this.ctx.fillStyle = tileMapData.terrainBGColor;        \n        this.ctx.fillRect(0, 0, this.config.canvasWidth, this.config.canvasHeight);\n    }\n    // Call this when map data changes or on initialization\n    cacheMap(tileMapData, tileMap, paths, isometric) {\n        this.terrainCtx.clearRect(0, 0, this.config.canvasWidth, this.config.canvasHeight);\n                   \n        // Clear the cache canvas\n        this.mapCacheCtx.clearRect(0, 0, this.config.canvasWidth, this.config.canvasHeight);\n        \n        // Draw the map onto the cache canvas\n        this.drawTileMap(tileMapData, isometric);\n        this.drawPaths(this.mapCacheCtx, paths);\n        this.drawEnvironment(tileMap.length, tileMap.length * tileMap.length);\n        \n        // Mark cache as valid\n        this.isMapCached = true;\n    }\n\n    drawMap(tileMap) {\n\n        this.mapCacheCtx.fillStyle = '#4a7c59';\n        this.mapCacheCtx.fillRect(0, 0, this.config.canvasWidth, this.config.canvasHeight);\n        const tileWidth = this.config.gridSize;\n        const tileHeight = this.config.gridSize * 0.5;\n        \n        for (let y = 0; y < tileMap.length; y++) {\n            for (let x = 0; x < tileMap[y].length; x++) {\n                const tile = tileMap[y][x];\n                \n                // Use translator to get iso coordinates\n                const isoCoords = this.game.translator.gridToIso(x, y);\n                const isoX = isoCoords.x;\n                const isoY = isoCoords.y;\n                \n                this.mapCacheCtx.fillStyle = tile.color;\n                this.mapCacheCtx.beginPath();\n                this.mapCacheCtx.moveTo(isoX, isoY);\n                this.mapCacheCtx.lineTo(isoX + tileWidth / 2, isoY + tileHeight / 2);\n                this.mapCacheCtx.lineTo(isoX, isoY + tileHeight);\n                this.mapCacheCtx.lineTo(isoX - tileWidth / 2, isoY + tileHeight / 2);\n                this.mapCacheCtx.closePath();\n                this.mapCacheCtx.fill();\n                this.mapCacheCtx.strokeStyle = 'rgba(0, 0, 0, 0.1)';\n                this.mapCacheCtx.stroke();\n            }\n        }\n        \n       \n        this.drawEnvironment(tileMap.length);\n    }\n\n    drawPaths(ctx, paths) {\n        const tileHeight = this.config.gridSize * 0.5;\n        ctx.strokeStyle = '#ffd166';\n        ctx.lineWidth = 2;\n        ctx.beginPath();\n        \n        paths.forEach(path => {\n            // First point in path\n            const firstIsoCoords = this.game.translator.gridToIso(path[0].x, path[0].y);\n            const firstIsoX = firstIsoCoords.x;\n            const firstIsoY = firstIsoCoords.y + tileHeight / 2; // Add half tile height for center of tile\n            \n            ctx.moveTo(firstIsoX, firstIsoY);\n            \n            // Remaining points in path\n            path.forEach(location => {\n                const isoCoords = this.game.translator.gridToIso(location.x, location.y);\n                const isoX = isoCoords.x;\n                const isoY = isoCoords.y + tileHeight / 2; // Add half tile height for center of tile\n                \n                ctx.lineTo(isoX, isoY);\n            });\n        });\n        \n        ctx.stroke();\n    }\n\n    drawEnvironment(boardSize, amountToDraw) {\n\n        let itemAmt = amountToDraw;\n        let environmentTypes = [];\n        for(let envType in this.environment){\n            environmentTypes.push(envType);\n        }\n        let items = [];            \n        for(let i = 0; i < itemAmt; i++) {\n            // Define the game board boundaries\n            const boardMinX = 0;\n            const boardMaxX = boardSize * this.config.gridSize;\n            const boardMinY = 0;\n            const boardMaxY = boardSize * this.config.gridSize;\n            \n            // Generate a random position that's outside the board but within a reasonable distance\n            let x, y;\n            \n            // Expand the area where we can place objects\n            const expandAmount = boardSize * this.config.gridSize; // Adjust this value as needed\n            \n            // Randomly choose whether to place on x-axis or y-axis outside the board\n            if (Math.random() < 0.5) {\n                // Place on the left or right of the board\n                x = Math.random() < 0.5 ?\n                    boardMinX - Math.random() * expandAmount : // Left side\n                    boardMaxX + Math.random() * expandAmount;  // Right side\n                \n                // Allow y to be anywhere, including outside the board\n                y = boardMinY - expandAmount + Math.random() * (boardMaxY - boardMinY + 2 * expandAmount);\n            } else {\n                // Place on the top or bottom of the board\n                y = Math.random() < 0.5 ?\n                    boardMinY - Math.random() * expandAmount : // Top side\n                    boardMaxY + Math.random() * expandAmount;  // Bottom side\n                \n                // Allow x to be anywhere, including outside the board\n                x = boardMinX - expandAmount + Math.random() * (boardMaxX - boardMinX + 2 * expandAmount);\n            }\n            \n            // Double-check that the position is actually outside the board\n            if (x < boardMinX || x > boardMaxX || y < boardMinY || y > boardMaxY) {\n                const type = environmentTypes[Math.floor(Math.random() * environmentTypes.length)];\n                const images = this.imageManager.getImages(\"environment\", type);\n                if(images){\n                    items.push( { img: images.idle[0][parseInt(Math.random()*images.idle[0].length)], x: x, y: y});\n                }\n            } else {\n                i--; // Position inside board, try again\n            }\n        }\n\n        items.sort((a, b) => {\n            return (a.y * boardSize + a.x) - (b.y * boardSize + b.x)\n        });\n\n        items.forEach((item) => {            \n            // Convert pixel to isometric\n            const isoPos = this.game.translator.pixelToIso(item.x, item.y);\n            const image = item.img;\n            const imgWidth = image.width;\n            const imgHeight = image.height;\n            \n            const drawX = isoPos.x;\n            const drawY = isoPos.y;\n            if( drawY < this.config.canvasHeight / 2 ) {\n                this.envCacheCtxBG.drawImage(image, drawX - imgWidth / 2, drawY - imgHeight / 2);\n            } else if(drawY - this.config.canvasHeight / 2 - imgHeight / 2 > 0) {//prevent trees in FG from getting chopped off at the top if they are too close to the middle of the frame.\n  \n                this.envCacheCtxFG.drawImage(image, drawX - imgWidth / 2, drawY - this.config.canvasHeight / 2 - imgHeight / 2);\n            }\n        });\n    }\n"
      }
    },
    "functions": {
      "calculateStats": {
        "script": "function calculateStats(stats, calcArray) {\n\n    if( calcArray && calcArray.length > 0 ) {\n        let additiveStats = {};\n        let multiplicitiveStats = {};\n        for(let key in stats) {\n            additiveStats[key] = [];\n            multiplicitiveStats[key] = [];\n        }\n        for(let effect of calcArray) {\n            effect.apply(stats, additiveStats, multiplicitiveStats);\n        }\n        let addedEffects = {};\n        for(let key in additiveStats){\n            for(let val of additiveStats[key]){ \n                if(addedEffects[key]){\n                    addedEffects[key] += val - 1;\n                } else {\n                    addedEffects[key] = val - 1;\n                }\n            }\n        }\n\n        for(let key in addedEffects) {\n            if( stats[key] ) {\n                stats[key] *= ( 1 + addedEffects[key] );\n            }\n        }\n\n        let multipliedUpgrades = {};        \n        for(let key in multiplicitiveStats){\n            for(let val of multiplicitiveStats[key]){ \n                if(stats[key]){\n                    stats[key] *= val;\n                }\n            }\n        }\n    }\n}"
      },
      "calculateDamage": {
        "script": "function calculateDamage(attack, target) {\n    // Set default values if not provided\n    \n    attack.speed = attack.speed || 5;     \n    attack.piercing = attack.piercing || 0,\n    attack.splashRadius = attack.splashRadius || 0;\n    attack.critChance = attack.critChance || .05;\n    attack.critMultiplier = attack.critMultiplier || 2;\n    attack.penetration = {\n      \"fire\": attack.firePenetration || 0,\n      \"electric\": attack.electricPenetration || 0,\n      \"cold\": attack.coldPenetration || 0,\n      \"physical\": attack.physicalPenetration || 0,\n      \"toxic\": attack.toxicPenetration || 0,\n    }\n    target.resistances = {\n      \"fire\": target.fireResistance || 0,\n      \"electric\": target.electricResistance || 0,\n      \"cold\": target.coldResistance || 0,\n      \"physical\": target.physicalResistance || 0,\n      \"toxic\": target.toxicResistance || 0,\n    }\n    \n    // Initialize result object\n    const result = {\n      damageBlocked: 0,\n      damageAbsorbed: 0,\n      damageDealt: 0,\n      energyShieldRemaining: target.energyShield || 0,\n      wasEvaded: false,\n      wasCritical: Math.random() <= attack.critChance,\n      hitDetails: {}\n    };\n    \n    // Check for evasion\n    if (target.evasion && target.evasion > 0) {\n      const evasionRoll = Math.random() * 100;\n      if (evasionRoll < target.evasion) {\n        result.wasEvaded = true;\n        result.hitDetails.evasion = \"Attack evaded\";\n        return result;\n      }\n    }\n    \n    // Calculate initial damage\n    let damage = attack.baseDamage;\n    \n    // Apply critical hit\n    if (result.wasCritical) {\n      damage *= attack.critMultiplier;\n      result.hitDetails.critical = `Critical hit (${attack.critMultiplier}x damage)`;\n    }\n    \n    // Apply resistances based on damage type\n  \n    if(attack.damageType != \"physical\") {\n      const resistance = target.resistances[attack.damageType] || 0;\n      const penetration = attack.penetration[attack.damageType] || 0;\n      const finalResist = resistance - penetration;\n      let resistanceMultiplier = 1 - (finalResist / 100);\n      damage *= resistanceMultiplier;\n  \n      \n      if (finalResist !== 0) {\n        if (finalResist > 0) {\n          result.hitDetails.resistance = `${attack.damageType} resisted (${finalResist}%)`;\n        } else {\n          result.hitDetails.resistance = `${attack.damageType} vulnerability (${-finalResist}%)`;\n        }\n      }  \n    }\n    \n    // Apply armor (only affects physical damage)\n    if (attack.damageType === \"physical\" && target.armor > 0) {\n      let effectiveArmor = target.armor;\n      if (attack.penetration.physical > 0 ) {\n        // Piercing ignores 75% of armor\n        effectiveArmor = target.armor * (1 - attack.penetration.physical);\n      }\n      // Armor formula: damage reduction percentage = armor / (armor + 100)\n      const armorReduction = effectiveArmor / (effectiveArmor + 100);\n      const blockedDamage = damage * armorReduction;\n      \n      damage -= blockedDamage;\n      result.damageBlocked = blockedDamage;\n      result.hitDetails.armor = `Armor blocked ${blockedDamage.toFixed(1)} damage`;\n    }\n    \n    // Round damage to 1 decimal place for cleaner numbers\n    damage = Math.round(damage * 10) / 10;\n    \n    // Apply shield absorption\n    if (target.energyShield > 0) {\n      if (damage <= target.energyShield) {\n        // Shield absorbs all damage\n        result.damageAbsorbed = damage;\n        result.energyShieldRemaining = target.energyShield - damage;\n        result.hitDetails.energyShield = `Shield absorbed all damage, ${result.energyShieldRemaining.toFixed(1)} shield remaining`;\n        damage = 0;\n      } else {\n        // Shield is depleted, remaining damage goes through\n        result.damageAbsorbed = target.energyShield;\n        result.damageDealt = damage - target.energyShield;\n        result.energyShieldRemaining = 0;\n        result.hitDetails.energyShield = `Shield depleted, ${result.damageDealt.toFixed(1)} damage dealt to health`;\n        damage -= target.energyShield;\n      }\n    } else {\n      // No shield, all damage goes to health\n      result.damageDealt = damage;\n    }\n    \n    // Make sure we don't return negative damage\n    result.damageDealt = Math.max(0, result.damageDealt);\n    \n    return result;\n  }\n"
      }
    },
    "projectiles": {
      "plasmaBolt": {
        "damageType": "physical",
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "cube",
                    "size": 6,
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#ee6060"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 6,
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#ee6060"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cube",
                    "size": 8,
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#ee6060"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#ee6060"
                  }
                ]
              }
            ]
          }
        },
        "speed": 50,
        "title": "Plasma Bolt"
      },
      "nanoOrb": {
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 6,
                    "x": 0,
                    "y": 5,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#ee6060"
                  }
                ]
              }
            ]
          }
        },
        "speed": 25,
        "damageType": "physical",
        "title": "Nano Orb"
      },
      "neutronFragment": {
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 6,
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#ee6060"
                  }
                ]
              }
            ]
          }
        },
        "speed": 5,
        "damageType": "physical",
        "title": "Neutron Fragment"
      },
      "missile": {
        "damageType": "fire",
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 5,
                    "color": "#888888",
                    "x": 0,
                    "y": 0,
                    "z": -1.4,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 25
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "color": "#ff1117",
                    "x": 0,
                    "y": 0,
                    "z": 13.6,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 5
                  },
                  {
                    "type": "cone",
                    "size": 2.5,
                    "color": "#ff1117",
                    "x": 0,
                    "y": 0,
                    "z": -13.881250000000001,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 2.5
                  },
                  {
                    "type": "cylinder",
                    "size": 6.25,
                    "color": "#888888",
                    "x": 0,
                    "y": 0,
                    "z": -11.131250000000001,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": 0,
                    "y": 3,
                    "z": -11.631250000000001,
                    "rotationX": 45,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": 0,
                    "y": -3,
                    "z": -11.631250000000001,
                    "rotationX": -45,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": -3,
                    "y": 0,
                    "z": -11.631250000000001,
                    "rotationX": 0,
                    "rotationY": 45,
                    "rotationZ": 90,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": 3,
                    "y": 0,
                    "z": -11.631250000000001,
                    "rotationX": 0,
                    "rotationY": -45,
                    "rotationZ": -90,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 5,
                    "color": "#888888",
                    "x": 0,
                    "y": 0,
                    "z": -1.4,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 25
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "color": "#ff1117",
                    "x": 0,
                    "y": 0,
                    "z": 13.6,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 5
                  },
                  {
                    "type": "cone",
                    "size": 2.5,
                    "color": "#ff1117",
                    "x": 0,
                    "y": 0,
                    "z": -13.881250000000001,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 2.5
                  },
                  {
                    "type": "cylinder",
                    "size": 6.25,
                    "color": "#888888",
                    "x": 0,
                    "y": 0,
                    "z": -11.131250000000001,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": -2.5,
                    "y": 2.5,
                    "z": -12,
                    "rotationX": 30,
                    "rotationY": 30,
                    "rotationZ": 45,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": 2.5,
                    "y": -2.5,
                    "z": -12,
                    "rotationX": -30,
                    "rotationY": -30,
                    "rotationZ": -135,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": -2.5,
                    "y": -2.5,
                    "z": -12,
                    "rotationX": -30,
                    "rotationY": 30,
                    "rotationZ": 135,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  },
                  {
                    "type": "box",
                    "size": 5,
                    "color": "#888888",
                    "x": 2.5,
                    "y": 2.5,
                    "z": -12,
                    "rotationX": 30,
                    "rotationY": -30,
                    "rotationZ": -45,
                    "width": 0.25,
                    "height": 2.5,
                    "depth": 8.5
                  }
                ]
              }
            ]
          }
        },
        "speed": 1,
        "title": "Missile",
        "isBallistic": true,
        "particle": "smoke"
      },
      "cryoMist": {
        "damageType": "cold",
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 6,
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#6060ee"
                  }
                ]
              }
            ]
          }
        },
        "speed": 5,
        "title": "Cryomist"
      },
      "lightning": {
        "customRenderer": "lightning",
        "damageType": "electric",
        "speed": 5,
        "title": "Lightning"
      }
    },
    "towers": {
      "keep": {
        "title": "Citadel",
        "mineAmt": 1,
        "attackSpeed": 1,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 40,
                    "height": 12,
                    "depth": 40,
                    "color": "#414141",
                    "x": 0,
                    "y": 6,
                    "z": 0,
                    "scaleX": 1
                  },
                  {
                    "type": "box",
                    "width": 32,
                    "height": 20,
                    "depth": 32,
                    "color": "#707070",
                    "x": 0,
                    "y": 22,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "width": 24,
                    "height": 16,
                    "depth": 24,
                    "color": "#C0C0C0",
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "size": 24
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 22,
                    "color": "#D8D8D8",
                    "x": 0,
                    "y": 42,
                    "z": 0
                  },
                  {
                    "type": "cone",
                    "size": 14,
                    "height": 20,
                    "color": "#6f1eb0",
                    "x": 0,
                    "y": 62,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 30,
                    "color": "#C0C0C0",
                    "x": 16,
                    "y": 22,
                    "z": 16
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 30,
                    "color": "#C0C0C0",
                    "x": -16,
                    "y": 22,
                    "z": 16
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 30,
                    "color": "#C0C0C0",
                    "x": 16,
                    "y": 22,
                    "z": -16
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 30,
                    "color": "#C0C0C0",
                    "x": -16,
                    "y": 22,
                    "z": -16
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 10,
                    "color": "#4ade43",
                    "x": 16,
                    "y": 42,
                    "z": 16
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 10,
                    "color": "#fff422",
                    "x": -16,
                    "y": 42,
                    "z": 16
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 10,
                    "color": "#4169E1",
                    "x": 16,
                    "y": 42,
                    "z": -16
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 10,
                    "color": "#ff2227",
                    "x": -16,
                    "y": 42,
                    "z": -16
                  },
                  {
                    "type": "box",
                    "width": 44,
                    "height": 4,
                    "depth": 44,
                    "color": "#696969",
                    "x": 0,
                    "y": 2,
                    "z": 0
                  }
                ]
              }
            ]
          }
        }
      },
      "sentry": {
        "title": "Photon Sentry",
        "info": "Defensive attack sentry.",
        "cost": 25,
        "population": 1,
        "range": 4,
        "damage": 5,
        "attackSpeed": 0.5,
        "projectile": "plasmaBolt",
        "critChance": 0.05,
        "critMultiplier": 1.5,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 4,
                    "color": "#696969",
                    "x": 0,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 10,
                    "height": 26,
                    "color": "#8B8B8B",
                    "x": 0,
                    "y": 17,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 4,
                    "color": "#696969",
                    "x": 0,
                    "y": 32,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 14,
                    "color": "#A9A9A9",
                    "x": 0,
                    "y": 40,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#CD7F32",
                    "x": 0,
                    "y": 52,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#A9A9A9",
                    "x": 0,
                    "y": 42,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#FF4500",
                    "x": 0,
                    "y": 42,
                    "z": 6
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "color": "#696969",
                    "x": 4,
                    "y": 34,
                    "z": 4
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "color": "#696969",
                    "x": -4,
                    "y": 34,
                    "z": 4
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "color": "#696969",
                    "x": 4,
                    "y": 34,
                    "z": -4
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "color": "#696969",
                    "x": -4,
                    "y": 34,
                    "z": -4
                  }
                ]
              }
            ]
          }
        },
        "projectileCount": 0,
        "projectileAngle": 10
      },
      "fusionCore": {
        "title": "Fusion Core",
        "info": "Creates additional energy every second.",
        "cost": 50,
        "population": 1,
        "attackSpeed": 1,
        "critMultiplier": 1,
        "mineAmt": 1,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 24,
                    "height": 8,
                    "color": "#3A3A3A",
                    "x": 0,
                    "y": 0,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 20,
                    "height": 12,
                    "color": "#555555",
                    "x": 0,
                    "y": 10,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#4B0082",
                    "x": 0,
                    "y": 30,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 30
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 105,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": -16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 16
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": -16
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": -12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": -12
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 24,
                    "height": 8,
                    "color": "#3A3A3A",
                    "x": 0,
                    "y": 0,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 20,
                    "height": 12,
                    "color": "#555555",
                    "x": 0,
                    "y": 10,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#4B0082",
                    "x": 0,
                    "y": 30,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 30,
                    "rotationZ": 0,
                    "rotationY": 45
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 155,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": -16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 16
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": -16
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": -12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": -12
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 24,
                    "height": 8,
                    "color": "#3A3A3A",
                    "x": 0,
                    "y": 0,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 20,
                    "height": 12,
                    "color": "#555555",
                    "x": 0,
                    "y": 10,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#4B0082",
                    "x": 0,
                    "y": 30,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 30,
                    "rotationY": 90
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 200,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": -16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 16
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": -16
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": -12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": -12
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 24,
                    "height": 8,
                    "color": "#3A3A3A",
                    "x": 0,
                    "y": 0,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 20,
                    "height": 12,
                    "color": "#555555",
                    "x": 0,
                    "y": 10,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#4B0082",
                    "x": 0,
                    "y": 30,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 30,
                    "rotationY": 135
                  },
                  {
                    "type": "torus",
                    "size": 22,
                    "tubeSize": 2,
                    "color": "#00BFFF",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 245,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": 12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": 12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 10,
                    "color": "#666666",
                    "x": -12,
                    "y": 6,
                    "z": -12
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": -16,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 16
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 8,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": -16
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": 12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": 12,
                    "y": 12,
                    "z": -12
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#00FFFF",
                    "x": -12,
                    "y": 12,
                    "z": -12
                  }
                ]
              }
            ]
          }
        }
      },
      "barracks": {
        "title": "Barracks",
        "info": "Provides 5 additional max population.",
        "cost": 100,
        "attackSpeed": 1000,
        "critChance": 0.1,
        "critMultiplier": 2,
        "supply": 5,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 40,
                    "height": 4,
                    "depth": 40,
                    "color": "#303040",
                    "x": 0,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 36,
                    "height": 12,
                    "depth": 36,
                    "color": "#404050",
                    "x": 0,
                    "y": 10,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 40,
                    "height": 2,
                    "depth": 40,
                    "color": "#505060",
                    "x": 0,
                    "y": 17,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 12,
                    "color": "#2288cc",
                    "x": -16,
                    "y": 24,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 12,
                    "tubeSize": 1,
                    "color": "#44aaff",
                    "x": -16,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 12,
                    "tubeSize": 1,
                    "color": "#44aaff",
                    "x": -16,
                    "y": 28,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 12,
                    "tubeSize": 1,
                    "color": "#44aaff",
                    "x": -16,
                    "y": 20,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 12,
                    "color": "#2288cc",
                    "x": 16,
                    "y": 24,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 12,
                    "tubeSize": 1,
                    "color": "#44aaff",
                    "x": 16,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 12,
                    "tubeSize": 1,
                    "color": "#44aaff",
                    "x": 16,
                    "y": 28,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 12,
                    "tubeSize": 1,
                    "color": "#44aaff",
                    "x": 16,
                    "y": 20,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 6,
                    "color": "#333333",
                    "x": 0,
                    "y": 20,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 14,
                    "height": 2,
                    "color": "#444444",
                    "x": 0,
                    "y": 24,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 2,
                    "color": "#2288cc",
                    "x": 0,
                    "y": 26,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 6,
                    "depth": 6,
                    "color": "#cc2200",
                    "x": -14,
                    "y": 9,
                    "z": -14
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 6,
                    "depth": 6,
                    "color": "#cc6600",
                    "x": 0,
                    "y": 9,
                    "z": -14
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 6,
                    "depth": 6,
                    "color": "#ccaa00",
                    "x": 14,
                    "y": 9,
                    "z": -14
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#44aaff",
                    "x": 0,
                    "y": 28,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "width": 40,
                    "height": 1,
                    "depth": 24,
                    "color": "#444455",
                    "x": 0,
                    "y": 18.5,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 4,
                    "color": "#aa0000",
                    "x": -18,
                    "y": 20.5,
                    "z": -8
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 4,
                    "color": "#aa0000",
                    "x": 18,
                    "y": 20.5,
                    "z": -8
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 4,
                    "color": "#aa0000",
                    "x": -18,
                    "y": 20.5,
                    "z": 8
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 4,
                    "color": "#aa0000",
                    "x": 18,
                    "y": 20.5,
                    "z": 8
                  }
                ]
              }
            ]
          }
        }
      },
      "fabricator": {
        "title": "Fabricator",
        "info": "Can be upgraded to summon drones from defeated enemies.",
        "summonType": "drone",
        "cost": 200,
        "population": 4,
        "range": 5,
        "damage": 8,
        "attackSpeed": 0.5,
        "projectile": "nanoOrb",
        "piercing": 1,
        "critChance": 0.15,
        "critMultiplier": 1.8,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 40,
                    "height": 6,
                    "depth": 40,
                    "x": 0,
                    "y": 3,
                    "z": 0,
                    "color": "#303030"
                  },
                  {
                    "type": "cylinder",
                    "size": 36,
                    "height": 14,
                    "x": 0,
                    "y": 13,
                    "z": 0,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 28,
                    "height": 4,
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "color": "#202020"
                  },
                  {
                    "type": "cylinder",
                    "size": 24,
                    "height": 16,
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "color": "#404040"
                  },
                  {
                    "type": "torus",
                    "size": 20,
                    "tubeSize": 2,
                    "x": 0,
                    "y": 26,
                    "z": 0,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "color": "#80FFD0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 28,
                    "depth": 6,
                    "x": 16,
                    "y": 22,
                    "z": 16,
                    "color": "#303030"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 28,
                    "depth": 6,
                    "x": -16,
                    "y": 22,
                    "z": 16,
                    "color": "#303030"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 28,
                    "depth": 6,
                    "x": 16,
                    "y": 22,
                    "z": -16,
                    "color": "#303030"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 28,
                    "depth": 6,
                    "x": -16,
                    "y": 22,
                    "z": -16,
                    "color": "#303030"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 16,
                    "y": 38,
                    "z": 16,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -16,
                    "y": 38,
                    "z": 16,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 16,
                    "y": 38,
                    "z": -16,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -16,
                    "y": 38,
                    "z": -16,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 10,
                    "height": 4,
                    "x": 0,
                    "y": 42,
                    "z": 0,
                    "color": "#606060"
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 48,
                    "z": 0,
                    "color": "#505050"
                  },
                  {
                    "type": "torus",
                    "size": 8,
                    "tubeSize": 1,
                    "x": 0,
                    "y": 46,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4,
                    "tubeSize": 1,
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "rotationX": 30,
                    "rotationY": 45,
                    "color": "#00FFFF"
                  },
                  {
                    "type": "torus",
                    "size": 4,
                    "tubeSize": 1,
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "rotationX": 120,
                    "rotationY": 45,
                    "color": "#00FFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 6,
                    "y": 32,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": -6,
                    "y": 32,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 0,
                    "y": 32,
                    "z": 6,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 0,
                    "y": 32,
                    "z": -6,
                    "color": "#FFFFFF"
                  }
                ]
              }
            ]
          }
        }
      },
      "drone": {
        "title": "Drone",
        "info": "Raise the dead.",
        "drawOffsetY": -12,
        "population": 1,
        "range": 2,
        "damage": 5,
        "attackSpeed": 1,
        "projectile": "neutronFragment",
        "critMultiplier": 1,
        "lifeSpan": 5,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 7.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#3D3D3D"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "rotationY": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 1.5,
                    "x": 0,
                    "y": 38.35714285714286,
                    "z": 0,
                    "color": "#505050"
                  },
                  {
                    "type": "sphere",
                    "size": 2.25,
                    "x": 0,
                    "y": 39.85714285714286,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 32.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 0,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 32.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 90,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 32.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 32.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 32.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 32.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 33.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 33.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 33.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 33.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.75,
                    "height": 3,
                    "x": 0,
                    "y": 30.857142857142858,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 0,
                    "y": 29.357142857142858,
                    "z": 0,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 3.75,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": -3.75,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 3.75,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": -3.75,
                    "color": "#FFFFFF"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 7.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#3D3D3D"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "rotationY": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 1.5,
                    "x": 0,
                    "y": 38.35714285714286,
                    "z": 0,
                    "color": "#505050"
                  },
                  {
                    "type": "sphere",
                    "size": 2.25,
                    "x": 0,
                    "y": 39.85714285714286,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 32.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 0,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 32.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 90,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 32.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 32.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 32.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 32.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 33.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 33.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 33.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 33.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.75,
                    "height": 3,
                    "x": 0,
                    "y": 30.857142857142858,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 0,
                    "y": 29.357142857142858,
                    "z": 0,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 3.75,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": -3.75,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 3.75,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": -3.75,
                    "color": "#FFFFFF"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 7.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#3D3D3D"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 0,
                    "rotationY": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 1.5,
                    "x": 0,
                    "y": 38.35714285714286,
                    "z": 0,
                    "color": "#505050"
                  },
                  {
                    "type": "sphere",
                    "size": 2.25,
                    "x": 0,
                    "y": 39.85714285714286,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 32.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 0,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 32.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 90,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 32.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 32.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 32.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 32.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 33.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 33.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 33.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 33.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.75,
                    "height": 3,
                    "x": 0,
                    "y": 30.857142857142858,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 0,
                    "y": 29.357142857142858,
                    "z": 0,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 3.75,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": -3.75,
                    "y": 33.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": 3.75,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 33.85714285714286,
                    "z": -3.75,
                    "color": "#FFFFFF"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 7.5,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 0,
                    "color": "#3D3D3D"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 0,
                    "rotationY": 90,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 1.5,
                    "x": 0,
                    "y": 28.35714285714286,
                    "z": 0,
                    "color": "#505050"
                  },
                  {
                    "type": "sphere",
                    "size": 2.25,
                    "x": 0,
                    "y": 29.85714285714286,
                    "z": 0,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 22.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 0,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 22.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 90,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 22.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 22.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 22.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 22.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 23.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 23.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 23.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 23.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.75,
                    "height": 3,
                    "x": 0,
                    "y": 20.857142857142858,
                    "z": 0,
                    "color": "#d2fff0"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 0,
                    "y": 19.357142857142858,
                    "z": 0,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 3.75,
                    "y": 23.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": -3.75,
                    "y": 23.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 3.75,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": -3.75,
                    "color": "#FFFFFF"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 7.5,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 0,
                    "color": "#3D3D3D"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 9,
                    "tubeSize": 1.5,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 0,
                    "rotationY": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 1.5,
                    "x": 0,
                    "y": 28.35714285714286,
                    "z": 0,
                    "color": "#505050"
                  },
                  {
                    "type": "sphere",
                    "size": 2.25,
                    "x": 0,
                    "y": 29.85714285714286,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 22.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 0,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 0.75,
                    "x": 0,
                    "y": 22.35714285714286,
                    "z": 0,
                    "rotationX": 90,
                    "rotationY": 90,
                    "color": "#404040"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 22.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 22.35714285714286,
                    "z": 10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": 10.5,
                    "y": 22.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 0.75,
                    "x": -10.5,
                    "y": 22.35714285714286,
                    "z": -10.5,
                    "color": "#505050"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 23.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 23.10714285714286,
                    "z": 10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": 10.5,
                    "y": 23.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "torus",
                    "size": 4.5,
                    "tubeSize": 0.75,
                    "x": -10.5,
                    "y": 23.10714285714286,
                    "z": -10.5,
                    "rotationX": 90,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.75,
                    "height": 3,
                    "x": 0,
                    "y": 20.857142857142858,
                    "z": 0,
                    "color": "#00FFDD"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 0,
                    "y": 19.357142857142858,
                    "z": 0,
                    "color": "#00FFAA"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 3.75,
                    "y": 23.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": -3.75,
                    "y": 23.85714285714286,
                    "z": 0,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": 3.75,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 0.75,
                    "x": 0,
                    "y": 23.85714285714286,
                    "z": -3.75,
                    "color": "#FFFFFF"
                  }
                ]
              }
            ]
          }
        }
      },
      "teslaCoil": {
        "title": "Tesla Coil",
        "info": "Projectiles chain between enemies.",
        "projectileStartOffsetY": 24,
        "cost": 70,
        "population": 3,
        "range": 5,
        "damage": 10,
        "attackSpeed": 0.5,
        "projectile": "lightning",
        "piercing": 2,
        "critChance": 0.1,
        "critMultiplier": 1.7,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 4,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 8,
                    "color": "#777777",
                    "x": 0,
                    "y": 8,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 10,
                    "height": 20,
                    "color": "#333333",
                    "x": 0,
                    "y": 22,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 3,
                    "color": "#444444",
                    "x": 0,
                    "y": 33.5,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 42,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 20,
                    "tubeSize": 1.6,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 18,
                    "tubeSize": 1.6,
                    "color": "#4499ff",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 16,
                    "tubeSize": 1.6,
                    "color": "#2277ff",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": -7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": 7,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": -7,
                    "rotationX": -90
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": 6,
                    "rotationY": 45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": 6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": -6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": -6,
                    "rotationY": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 1,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 4,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 8,
                    "color": "#777777",
                    "x": 0,
                    "y": 8,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 10,
                    "height": 20,
                    "color": "#333333",
                    "x": 0,
                    "y": 22,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 3,
                    "color": "#444444",
                    "x": 0,
                    "y": 33.5,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 42,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 20,
                    "tubeSize": 1.6,
                    "color": "#4499ff",
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 18,
                    "tubeSize": 1.6,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 16,
                    "tubeSize": 1.6,
                    "color": "#4499ff",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": -7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": 7,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": -7,
                    "rotationX": -90
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": 6,
                    "rotationY": 45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": 6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": -6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": -6,
                    "rotationY": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 1,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 4,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 8,
                    "color": "#777777",
                    "x": 0,
                    "y": 8,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 10,
                    "height": 20,
                    "color": "#333333",
                    "x": 0,
                    "y": 22,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 3,
                    "color": "#444444",
                    "x": 0,
                    "y": 33.5,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#84c8ff",
                    "x": 0,
                    "y": 42,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 20,
                    "tubeSize": 1.6,
                    "color": "#2277ff",
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 18,
                    "tubeSize": 1.6,
                    "color": "#4499ff",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 16,
                    "tubeSize": 1.6,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": -7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": 7,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": -7,
                    "rotationX": -90
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": 6,
                    "rotationY": 45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": 6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": -6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": -6,
                    "rotationY": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 1,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 4,
                    "color": "#555555",
                    "x": 0,
                    "y": 2,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 8,
                    "color": "#777777",
                    "x": 0,
                    "y": 8,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 10,
                    "height": 20,
                    "color": "#333333",
                    "x": 0,
                    "y": 22,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 3,
                    "color": "#444444",
                    "x": 0,
                    "y": 33.5,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#84c8ff",
                    "x": 0,
                    "y": 42,
                    "z": 0
                  },
                  {
                    "type": "torus",
                    "size": 20,
                    "tubeSize": 1.6,
                    "color": "#4499ff",
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 18,
                    "tubeSize": 1.6,
                    "color": "#2277ff",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "torus",
                    "size": 16,
                    "tubeSize": 1.6,
                    "color": "#4499ff",
                    "x": 0,
                    "y": 30,
                    "z": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": -7,
                    "y": 34,
                    "z": 0,
                    "rotationZ": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": 7,
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 16,
                    "color": "#888888",
                    "x": 0,
                    "y": 34,
                    "z": -7,
                    "rotationX": -90
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": 6,
                    "rotationY": 45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": 6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": 6,
                    "y": 16,
                    "z": -6,
                    "rotationY": -45
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 14,
                    "depth": 3,
                    "color": "#888888",
                    "x": -6,
                    "y": 16,
                    "z": -6,
                    "rotationY": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 1,
                    "color": "#66bbff",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  }
                ]
              }
            ]
          }
        }
      },
      "missileLauncher": {
        "title": "Missile Launcher",
        "info": "Projectiles explode in an AoE.",
        "cost": 90,
        "population": 3,
        "range": 15,
        "damage": 100,
        "attackSpeed": 3,
        "projectile": "missile",
        "critChance": 0.05,
        "critMultiplier": 2,
        "splashRadius": 3,
        "burnDamage": 2,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 30,
                    "height": 6,
                    "depth": 30,
                    "x": 0,
                    "y": 3,
                    "z": 1.8,
                    "color": "#555555",
                    "name": "base"
                  },
                  {
                    "type": "cylinder",
                    "size": 24,
                    "height": 7.5,
                    "x": 0,
                    "y": 10,
                    "z": 1.8,
                    "color": "#444444",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10.5,
                    "depth": 22.5,
                    "x": 0,
                    "y": 19.5,
                    "z": 1.8,
                    "color": "#3A3A3A",
                    "rotationX": 15,
                    "name": "missile-box"
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 27,
                    "x": -6,
                    "y": 24,
                    "z": 3.3,
                    "rotationX": 105,
                    "color": "#2A2A2A",
                    "name": "left missile container"
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 27,
                    "x": 6,
                    "y": 24,
                    "z": 3.3,
                    "rotationX": 105,
                    "color": "#2A2A2A",
                    "name": "right missile container"
                  },
                  {
                    "type": "cylinder",
                    "size": 4.5,
                    "height": 13.5,
                    "x": -6,
                    "y": 27,
                    "z": -7.2,
                    "rotationX": 105,
                    "color": "#7f7f7f",
                    "rotationZ": 0,
                    "name": "left missile"
                  },
                  {
                    "type": "cylinder",
                    "size": 4.5,
                    "height": 13.5,
                    "x": 6,
                    "y": 27,
                    "z": -7.2,
                    "rotationX": 105,
                    "color": "#7f7f7f",
                    "name": "right missile"
                  },
                  {
                    "type": "cone",
                    "size": 4.35,
                    "height": 6,
                    "x": -6,
                    "y": 29.4,
                    "z": -16.2,
                    "rotationX": -75,
                    "color": "#D14A4A",
                    "name": "left missile tip"
                  },
                  {
                    "type": "cone",
                    "size": 4.35,
                    "height": 6,
                    "x": 6,
                    "y": 29.4,
                    "z": -16.2,
                    "rotationX": -75,
                    "color": "#D14A4A",
                    "name": "right missile tip"
                  }
                ]
              }
            ]
          }
        }
      },
      "chrono": {
        "title": "Chrono Defibrilator",
        "info": "Projectiles explode in AoE and slow.",
        "cost": 100,
        "population": 3,
        "range": 90,
        "damage": 2,
        "attackSpeed": 0.5,
        "projectile": "cryoMist",
        "critMultiplier": 1,
        "splashRadius": 2,
        "slowEffect": 0.7,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "torus",
                    "size": 36,
                    "tubeSize": 4,
                    "x": 0,
                    "y": 16,
                    "z": 0,
                    "rotationX": 60,
                    "color": "#50D0FF"
                  },
                  {
                    "type": "torus",
                    "size": 36,
                    "tubeSize": 4,
                    "x": 0,
                    "y": 16,
                    "z": 0,
                    "rotationY": 60,
                    "color": "#50D0FF"
                  },
                  {
                    "type": "cylinder",
                    "size": 22,
                    "height": 10,
                    "x": 0,
                    "y": 5,
                    "z": 0,
                    "color": "#333333"
                  },
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 14,
                    "x": 0,
                    "y": 17,
                    "z": 0,
                    "color": "#222222"
                  },
                  {
                    "type": "sphere",
                    "size": 12,
                    "x": 0,
                    "y": 16,
                    "z": 0,
                    "color": "#A0E6FF"
                  },
                  {
                    "type": "tetrahedron",
                    "size": 10,
                    "x": 0,
                    "y": 16,
                    "z": 0,
                    "rotationY": 45,
                    "color": "#203040"
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 16,
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "rotationX": 180,
                    "color": "#444444"
                  },
                  {
                    "type": "box",
                    "width": 38,
                    "height": 4,
                    "depth": 38,
                    "x": 0,
                    "y": 2,
                    "z": 0,
                    "color": "#555555"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 14,
                    "y": 12,
                    "z": 14,
                    "color": "#C0FFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -14,
                    "y": 12,
                    "z": 14,
                    "color": "#C0FFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 14,
                    "y": 12,
                    "z": -14,
                    "color": "#C0FFFF"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -14,
                    "y": 12,
                    "z": -14,
                    "color": "#C0FFFF"
                  }
                ]
              }
            ]
          }
        }
      },
      "guardTower": {
        "id": "guardTower",
        "title": "Guard Tower",
        "info": "A robust defensive structure that deals consistent damage while slowing enemies within a radius.",
        "cost": 70,
        "population": 3,
        "range": 4,
        "damage": 8,
        "attackSpeed": 4,
        "projectile": "plasmaBolt",
        "critChance": 0.05,
        "critMultiplier": 2,
        "splashRadius": 2,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 15,
                    "height": 30,
                    "color": "#738884",
                    "x": 2.25,
                    "y": 6.75,
                    "z": 0
                  },
                  {
                    "type": "box",
                    "x": 0.2,
                    "y": 21.75,
                    "width": 10,
                    "height": 15,
                    "color": "#73520d",
                    "z": 0
                  },
                  {
                    "type": "box",
                    "x": -5.25,
                    "y": 36.75,
                    "width": 25,
                    "height": 5,
                    "color": "#4a697d",
                    "z": 0
                  },
                  {
                    "type": "circle",
                    "radius": 0.5,
                    "x": -10.25,
                    "y": 41.75,
                    "color": "#e6e6fa",
                    "z": 0
                  },
                  {
                    "type": "circle",
                    "radius": 0.5,
                    "x": 9.75,
                    "y": 41.75,
                    "color": "#e6e6fa",
                    "z": 0
                  },
                  {
                    "type": "line",
                    "points": [
                      {
                        "x": -1,
                        "y": 4
                      },
                      {
                        "x": 1,
                        "y": 4
                      }
                    ],
                    "width": 2,
                    "color": "#87CEEB",
                    "x": 2.25,
                    "y": 6.75,
                    "z": 0
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "enemies": {
      "zombie": {
        "hp": 30,
        "speed": 0.8,
        "value": 5,
        "essence": 10,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "gltf",
                    "size": 16,
                    "color": "#60A060",
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "name": "head",
                    "scaleX": 500,
                    "scaleY": 500,
                    "scaleZ": 500,
                    "url": "samples/models/Avocado/Avocado.gltf"
                  },
                  {
                    "type": "cylinder",
                    "width": 20,
                    "height": 24,
                    "depth": 10,
                    "color": "#506050",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "size": 16,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": 4,
                    "y": 45,
                    "z": 7,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": -4,
                    "y": 45,
                    "z": 7,
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": 4,
                    "y": 45,
                    "z": 9,
                    "name": "pupil-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": -4,
                    "y": 45,
                    "z": 9,
                    "name": "pupil-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": 8,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": -8,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "arm-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 24,
                    "color": "#60A060",
                    "x": 5,
                    "y": 12,
                    "z": 0,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 24,
                    "color": "#60A060",
                    "x": -5,
                    "y": 12,
                    "z": 0,
                    "rotationZ": 0,
                    "rotationX": 0,
                    "name": "leg-right"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "gltf",
                    "size": 16,
                    "color": "#60A060",
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "name": "head",
                    "url": "samples/models/Avocado/Avocado.gltf",
                    "scaleX": 500,
                    "scaleY": 500,
                    "scaleZ": 500
                  },
                  {
                    "type": "cylinder",
                    "width": 20,
                    "height": 24,
                    "depth": 10,
                    "color": "#506050",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "size": 16,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": 4,
                    "y": 45,
                    "z": 7,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": -4,
                    "y": 45,
                    "z": 7,
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": 4,
                    "y": 45,
                    "z": 9,
                    "name": "pupil-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": -4,
                    "y": 45,
                    "z": 9,
                    "name": "pupil-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": 12,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -20,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": -12,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 20,
                    "name": "arm-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": 5,
                    "y": 10,
                    "z": -2,
                    "rotationX": 30,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 24,
                    "color": "#60A060",
                    "x": -5,
                    "y": 12,
                    "z": 0,
                    "rotationX": -10,
                    "rotationZ": 0,
                    "name": "leg-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "gltf",
                    "size": 16,
                    "color": "#60A060",
                    "x": 0,
                    "y": 33,
                    "z": 0,
                    "name": "head",
                    "url": "samples/models/Avocado/Avocado.gltf",
                    "scaleX": 500,
                    "scaleY": 500,
                    "scaleZ": 500
                  },
                  {
                    "type": "cylinder",
                    "width": 20,
                    "height": 24,
                    "depth": 10,
                    "color": "#506050",
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "size": 16,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": 4,
                    "y": 46,
                    "z": 7,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": -4,
                    "y": 46,
                    "z": 7,
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": 4,
                    "y": 46,
                    "z": 9,
                    "name": "pupil-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": -4,
                    "y": 46,
                    "z": 9,
                    "name": "pupil-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": 10,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": -10,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "arm-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 24,
                    "color": "#60A060",
                    "x": 5,
                    "y": 10,
                    "z": -2,
                    "rotationX": 30,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": -5,
                    "y": 10,
                    "z": -2,
                    "rotationX": 30,
                    "rotationZ": 0,
                    "name": "leg-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "gltf",
                    "size": 16,
                    "color": "#60A060",
                    "x": 0,
                    "y": 33,
                    "z": 0,
                    "name": "head",
                    "url": "samples/models/Avocado/Avocado.gltf",
                    "scaleX": 500,
                    "scaleY": 500,
                    "scaleZ": 500
                  },
                  {
                    "type": "cylinder",
                    "width": 20,
                    "height": 24,
                    "depth": 10,
                    "color": "#506050",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "size": 16,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": 4,
                    "y": 46,
                    "z": 7,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": -4,
                    "y": 46,
                    "z": 7,
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": 4,
                    "y": 46,
                    "z": 9,
                    "name": "pupil-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": -4,
                    "y": 46,
                    "z": 9,
                    "name": "pupil-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": 8,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 20,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": -8,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -20,
                    "name": "arm-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 24,
                    "color": "#60A060",
                    "x": 5,
                    "y": 10,
                    "z": -2,
                    "rotationX": 30,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": -5,
                    "y": 10,
                    "z": -2,
                    "rotationX": 30,
                    "rotationZ": 0,
                    "name": "leg-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "gltf",
                    "size": 16,
                    "color": "#60A060",
                    "x": 0,
                    "y": 32,
                    "z": 0,
                    "name": "head",
                    "url": "samples/models/Avocado/Avocado.gltf",
                    "scaleX": 500,
                    "scaleY": 500,
                    "scaleZ": 500
                  },
                  {
                    "type": "cylinder",
                    "width": 20,
                    "height": 24,
                    "depth": 10,
                    "color": "#506050",
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "size": 16,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": 4,
                    "y": 45,
                    "z": 7,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#FFFFFF",
                    "x": -4,
                    "y": 45,
                    "z": 7,
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": 4,
                    "y": 45,
                    "z": 9,
                    "name": "pupil-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "color": "#000000",
                    "x": -4,
                    "y": 45,
                    "z": 9,
                    "name": "pupil-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": 10,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": -10,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "arm-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 20,
                    "color": "#60A060",
                    "x": 5,
                    "y": 10,
                    "z": -2,
                    "rotationX": 30,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 24,
                    "color": "#60A060",
                    "x": -5,
                    "y": 12,
                    "z": 0,
                    "rotationX": 10,
                    "rotationZ": 0,
                    "name": "leg-right"
                  }
                ]
              }
            ]
          }
        },
        "title": "zombie"
      },
      "skeleton": {
        "hp": 20,
        "speed": 1.2,
        "value": 7,
        "essence": 12,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#E0DED8",
                    "x": 0,
                    "y": 41,
                    "z": 0,
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 8,
                    "color": "#CFCBC0",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 4,
                    "y": 42,
                    "z": 5,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -4,
                    "y": 42,
                    "z": 5,
                    "name": "eye-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": 8,
                    "y": 27,
                    "z": 10,
                    "rotationX": 105,
                    "rotationZ": 15,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": -8,
                    "y": 27,
                    "z": 10,
                    "rotationX": 105,
                    "rotationZ": -15,
                    "name": "arm-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 6,
                    "y": 25,
                    "z": 20,
                    "name": "hand-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -6,
                    "y": 25,
                    "z": 20,
                    "name": "hand-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 14,
                    "z": 0,
                    "rotationZ": 0,
                    "name": "leg-left",
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 14,
                    "z": 0,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 2,
                    "z": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 2,
                    "z": 0,
                    "name": "foot-right"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#E0DED8",
                    "x": 0,
                    "y": 41,
                    "z": 0,
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 8,
                    "color": "#CFCBC0",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 4,
                    "y": 42,
                    "z": 5,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -4,
                    "y": 42,
                    "z": 5,
                    "name": "eye-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": 8,
                    "y": 27,
                    "z": 10,
                    "rotationX": 105,
                    "rotationZ": 15,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": -8,
                    "y": 27,
                    "z": 10,
                    "rotationX": 105,
                    "rotationZ": -15,
                    "name": "arm-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 6,
                    "y": 25,
                    "z": 20,
                    "name": "hand-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -6,
                    "y": 25,
                    "z": 20,
                    "name": "hand-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 14,
                    "z": 0,
                    "rotationZ": 0,
                    "name": "leg-left",
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 14,
                    "z": 0,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 2,
                    "z": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 2,
                    "z": 0,
                    "name": "foot-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#E0DED8",
                    "x": 0,
                    "y": 40,
                    "z": 0,
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 8,
                    "color": "#CFCBC0",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "name": "body",
                    "rotationZ": 0,
                    "rotationY": 10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 4,
                    "y": 41,
                    "z": 5,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -4,
                    "y": 41,
                    "z": 5,
                    "name": "eye-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": 8,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 15,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": -8,
                    "y": 25,
                    "z": 10,
                    "rotationX": 120,
                    "rotationZ": -15,
                    "name": "arm-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 6,
                    "y": 29,
                    "z": 20,
                    "name": "hand-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -6,
                    "y": 20,
                    "z": 20,
                    "name": "hand-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 14,
                    "z": -2,
                    "rotationZ": 0,
                    "name": "leg-left",
                    "rotationX": 15,
                    "rotationY": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 14,
                    "z": 2,
                    "rotationZ": 0,
                    "name": "leg-right",
                    "rotationX": -15
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 2,
                    "z": -4,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 2,
                    "z": 6,
                    "name": "foot-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#E0DED8",
                    "x": 0,
                    "y": 41,
                    "z": 0,
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 8,
                    "color": "#CFCBC0",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "name": "body"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 4,
                    "y": 42,
                    "z": 5,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -4,
                    "y": 42,
                    "z": 5,
                    "name": "eye-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": 8,
                    "y": 27,
                    "z": 10,
                    "rotationX": 105,
                    "rotationZ": 15,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": -8,
                    "y": 27,
                    "z": 10,
                    "rotationX": 105,
                    "rotationZ": -15,
                    "name": "arm-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 6,
                    "y": 25,
                    "z": 20,
                    "name": "hand-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -6,
                    "y": 25,
                    "z": 20,
                    "name": "hand-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 14,
                    "z": 0,
                    "rotationZ": 0,
                    "name": "leg-left",
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 14,
                    "z": 0,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 2,
                    "z": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 2,
                    "z": 0,
                    "name": "foot-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#E0DED8",
                    "x": 0,
                    "y": 40,
                    "z": 0,
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 8,
                    "color": "#CFCBC0",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "name": "body",
                    "rotationY": -10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 4,
                    "y": 41,
                    "z": 5,
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -4,
                    "y": 41,
                    "z": 5,
                    "name": "eye-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": 8,
                    "y": 25,
                    "z": 10,
                    "rotationX": 120,
                    "rotationZ": 15,
                    "name": "arm-left"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 18,
                    "color": "#E0DED8",
                    "x": -8,
                    "y": 29,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -15,
                    "name": "arm-right"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 6,
                    "y": 20,
                    "z": 20,
                    "name": "hand-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -6,
                    "y": 29,
                    "z": 20,
                    "name": "hand-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 14,
                    "z": 2,
                    "rotationZ": 0,
                    "name": "leg-left",
                    "rotationX": -15
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 22,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 14,
                    "z": -2,
                    "rotationZ": 0,
                    "name": "leg-right",
                    "rotationX": 15
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": 5,
                    "y": 2,
                    "z": 6,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#E0DED8",
                    "x": -5,
                    "y": 2,
                    "z": -4,
                    "name": "foot-right"
                  }
                ]
              }
            ]
          }
        },
        "electricResistance": 75,
        "title": "skeleton"
      },
      "ghost": {
        "hp": 1,
        "speed": 1.5,
        "value": 10,
        "essence": 15,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#C2E8F7",
                    "x": 0,
                    "y": 31,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#D8F0F9",
                    "x": 0,
                    "y": 21,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 11,
                    "z": 0
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 6,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": -6,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": 4,
                    "y": 31,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": -4,
                    "y": 31,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#1A1A1A",
                    "x": 0,
                    "y": 28,
                    "z": 4,
                    "rotationX": 45,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#C2E8F7",
                    "x": 0,
                    "y": 31,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#D8F0F9",
                    "x": 0,
                    "y": 21,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 11,
                    "z": 0
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 6,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": -6,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": 4,
                    "y": 31,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": -4,
                    "y": 31,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#1A1A1A",
                    "x": 0,
                    "y": 28,
                    "z": 4,
                    "rotationX": 45,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#C2E8F7",
                    "x": 0,
                    "y": 31,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#D8F0F9",
                    "x": 0,
                    "y": 21,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 11,
                    "z": 0
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 6,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": -6,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 6,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": 4,
                    "y": 31,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": -4,
                    "y": 31,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#1A1A1A",
                    "x": 0,
                    "y": 28,
                    "z": 4,
                    "rotationX": 45,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#C2E8F7",
                    "x": 0,
                    "y": 32,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#D8F0F9",
                    "x": 0,
                    "y": 22,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 12,
                    "z": 0
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 6,
                    "y": 7,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": -6,
                    "y": 7,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 7,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": 4,
                    "y": 32,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": -4,
                    "y": 32,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#1A1A1A",
                    "x": 0,
                    "y": 29,
                    "z": 4,
                    "rotationX": 45,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#C2E8F7",
                    "x": 0,
                    "y": 32,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 14,
                    "color": "#D8F0F9",
                    "x": 0,
                    "y": 22,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 12,
                    "z": 0
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 6,
                    "y": 7,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": -6,
                    "y": 7,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 8,
                    "height": 14,
                    "color": "#E5F6FC",
                    "x": 0,
                    "y": 7,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": 4,
                    "y": 32,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#1A1A1A",
                    "x": -4,
                    "y": 32,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#1A1A1A",
                    "x": 0,
                    "y": 29,
                    "z": 4,
                    "rotationX": 45,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              }
            ]
          }
        },
        "evasion": 75,
        "energyShield": 30,
        "title": "ghost"
      },
      "wraith": {
        "hp": 1,
        "speed": 1.8,
        "value": 12,
        "essence": 18,
        "dodgeChance": 0.2,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#3A6A8A",
                    "x": 0,
                    "y": 24,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#FFFFFF",
                    "x": 0,
                    "y": 24,
                    "z": 6
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#000000",
                    "x": 0,
                    "y": 24,
                    "z": 8.5
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": -8,
                    "y": 22,
                    "z": 0,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": 8,
                    "y": 22,
                    "z": 0,
                    "rotationZ": -30
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#3A6A8A",
                    "x": 0,
                    "y": 24,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#FFFFFF",
                    "x": 0,
                    "y": 24,
                    "z": 6
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#000000",
                    "x": 0,
                    "y": 24,
                    "z": 8.5
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": -8,
                    "y": 22,
                    "z": 0,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": 8,
                    "y": 22,
                    "z": 0,
                    "rotationZ": -30
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#3A6A8A",
                    "x": 0,
                    "y": 24,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#FFFFFF",
                    "x": 0,
                    "y": 24,
                    "z": 6
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#000000",
                    "x": 0,
                    "y": 24,
                    "z": 8.5
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": -8,
                    "y": 22,
                    "z": 0,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": 8,
                    "y": 22,
                    "z": 0,
                    "rotationZ": -30
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#3A6A8A",
                    "x": 0,
                    "y": 25,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#FFFFFF",
                    "x": 0,
                    "y": 25,
                    "z": 6
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#000000",
                    "x": 0,
                    "y": 25,
                    "z": 8.5
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": -8,
                    "y": 23,
                    "z": 0,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": 8,
                    "y": 23,
                    "z": 0,
                    "rotationZ": -30
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 16,
                    "color": "#3A6A8A",
                    "x": 0,
                    "y": 25,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "color": "#FFFFFF",
                    "x": 0,
                    "y": 25,
                    "z": 6
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#000000",
                    "x": 0,
                    "y": 25,
                    "z": 8.5
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": -8,
                    "y": 23,
                    "z": 0,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 6,
                    "height": 4,
                    "color": "#2A5A7A",
                    "x": 8,
                    "y": 23,
                    "z": 0,
                    "rotationZ": -30
                  }
                ]
              }
            ]
          }
        },
        "energyShield": 50,
        "title": "wraith"
      },
      "bloodBeast": {
        "hp": 50,
        "speed": 0.6,
        "value": 15,
        "essence": 20,
        "regen": 0.5,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": -45
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": -45
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": -0.4465238854292495,
                    "y": 20,
                    "z": 0.039065777968608106,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": -0.4465238854292495,
                    "y": 36,
                    "z": 0.039065777968608106
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 15.31040016276608,
                    "y": 24,
                    "z": -2.7393050647022767,
                    "rotationZ": 45,
                    "rotationX": -10
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16.203447933624577,
                    "y": 24,
                    "z": 2.8174366206394934,
                    "rotationZ": -45,
                    "rotationX": 10
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 21.219246680839326,
                    "y": 18,
                    "z": -1.9
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22.112294451697828,
                    "y": 18,
                    "z": 2.1
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 9.40155364469283,
                    "y": 8,
                    "z": -1.6974159987006954,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10.294601415551329,
                    "y": 8,
                    "z": 1.7755475546379114,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5.866700300967233,
                    "y": 38,
                    "z": 7.0492869137316205
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -3.9813772291548464,
                    "y": 38,
                    "z": 8.785768690400923
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 6.213996656301093,
                    "y": 38,
                    "z": 9.018902419756037
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -3.6340808738209858,
                    "y": 38,
                    "z": 10.75538419642534
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10.294601415551329,
                    "y": 42,
                    "z": 1.7755475546379114,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 9.40155364469283,
                    "y": 42,
                    "z": -1.6974159987006954,
                    "rotationZ": -45
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": -45
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0.4465238854292495,
                    "y": 20,
                    "z": 0.039065777968608106,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0.4465238854292495,
                    "y": 36,
                    "z": 0.039065777968608106
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16.203447933624577,
                    "y": 24,
                    "z": 2.8174366206394934,
                    "rotationZ": 45,
                    "rotationX": 10
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -15.31040016276608,
                    "y": 24,
                    "z": -2.7393050647022767,
                    "rotationZ": -45,
                    "rotationX": -10
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22.112294451697828,
                    "y": 18,
                    "z": 1.9
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -21.219246680839326,
                    "y": 18,
                    "z": -1.6
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10.294601415551329,
                    "y": 8,
                    "z": 1.7755475546379114,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -9.40155364469283,
                    "y": 8,
                    "z": -1.6974159987006954,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 3.9813772291548464,
                    "y": 38,
                    "z": 8.785768690400923
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5.866700300967233,
                    "y": 38,
                    "z": 7.0492869137316205
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 3.6340808738209858,
                    "y": 38,
                    "z": 10.75538419642534
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -6.213996656301093,
                    "y": 38,
                    "z": 9.018902419756037
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -9.40155364469283,
                    "y": 42,
                    "z": -1.6974159987006954,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10.294601415551329,
                    "y": 42,
                    "z": 1.7755475546379114,
                    "rotationZ": -45
                  }
                ]
              }
            ]
          }
        },
        "armor": 50,
        "title": "blood beast"
      },
      "banshee": {
        "hp": 20,
        "speed": 1.4,
        "value": 8,
        "essence": 14,
        "screamDamage": 5,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 36,
                    "z": 2
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 30,
                    "color": "#9F8AC7",
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": 4,
                    "y": 36,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": -4,
                    "y": 36,
                    "z": 7
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": -8,
                    "y": 28,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": 8,
                    "y": 28,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -30
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": 3,
                    "y": 33,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": -3,
                    "y": 33,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#000000",
                    "x": 0,
                    "y": 32,
                    "z": 7.8,
                    "rotationX": 45
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 15,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": -15,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 18,
                    "z": -15
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 36,
                    "z": 2
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 30,
                    "color": "#9F8AC7",
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": 4,
                    "y": 36,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": -4,
                    "y": 36,
                    "z": 7
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": -8,
                    "y": 28,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": 8,
                    "y": 28,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -30
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": 3,
                    "y": 33,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": -3,
                    "y": 33,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#000000",
                    "x": 0,
                    "y": 32,
                    "z": 7.8,
                    "rotationX": 45
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 15,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": -15,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 18,
                    "z": -15
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 36,
                    "z": 2
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 30,
                    "color": "#9F8AC7",
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": 4,
                    "y": 36,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": -4,
                    "y": 36,
                    "z": 7
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": -8,
                    "y": 28,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": 8,
                    "y": 28,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -30
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": 3,
                    "y": 33,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": -3,
                    "y": 33,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#000000",
                    "x": 0,
                    "y": 32,
                    "z": 7.8,
                    "rotationX": 45
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 15,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": -15,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 18,
                    "z": -15
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 38,
                    "z": 2
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 30,
                    "color": "#9F8AC7",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": 4,
                    "y": 38,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": -4,
                    "y": 38,
                    "z": 7
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": -8,
                    "y": 30,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": 8,
                    "y": 30,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -30
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": 3,
                    "y": 35,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": -3,
                    "y": 35,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#000000",
                    "x": 0,
                    "y": 34,
                    "z": 7.8,
                    "rotationX": 45
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 15,
                    "y": 20,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": -15,
                    "y": 20,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 20,
                    "z": -15
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 38,
                    "z": 2
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 30,
                    "color": "#9F8AC7",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "rotationX": 180
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": 4,
                    "y": 38,
                    "z": 7
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "color": "#FF3366",
                    "x": -4,
                    "y": 38,
                    "z": 7
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": -8,
                    "y": 30,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": 30
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 16,
                    "color": "#BCA9DF",
                    "x": 8,
                    "y": 30,
                    "z": 10,
                    "rotationX": 90,
                    "rotationZ": -30
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": 3,
                    "y": 35,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 12,
                    "color": "#BCA9DF",
                    "x": -3,
                    "y": 35,
                    "z": -10,
                    "rotationX": -40
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#000000",
                    "x": 0,
                    "y": 34,
                    "z": 7.8,
                    "rotationX": 45
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 15,
                    "y": 20,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": -15,
                    "y": 20,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#BCA9DF",
                    "x": 0,
                    "y": 20,
                    "z": -15
                  }
                ]
              }
            ]
          }
        },
        "evasion": 75,
        "title": "banshee"
      },
      "trex": {
        "title": "T-Rex",
        "hp": 50,
        "speed": 1.5,
        "value": 10,
        "essence": 15,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 12,
                    "height": 25,
                    "depth": 12,
                    "x": 0,
                    "y": 22.6,
                    "z": -2.6,
                    "rotationX": 46,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 10,
                    "depth": 16,
                    "x": 0,
                    "y": 37,
                    "z": 12,
                    "color": "#5D8233",
                    "name": "head-top"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 29,
                    "z": 14,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 1,
                    "depth": 1,
                    "x": 0,
                    "y": 31,
                    "z": 20,
                    "color": "#ff3c41",
                    "name": "gums"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -3,
                    "y": 31,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-right"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 31,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-middle"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 3,
                    "y": 31,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -7,
                    "y": 42,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -7,
                    "y": 42,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 7,
                    "y": 42,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 7,
                    "y": 42,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 18,
                    "z": -17.9,
                    "rotationX": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 15,
                    "z": -30,
                    "rotationX": -10,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": 6,
                    "y": 10,
                    "z": 0,
                    "color": "#4E6C2A",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": -6,
                    "y": 10,
                    "z": 0,
                    "color": "#4E6C2A",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": 6,
                    "y": 1,
                    "z": 0,
                    "color": "#4E6C2A",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": -6,
                    "y": 1,
                    "z": 0,
                    "color": "#4E6C2A",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": 8,
                    "y": 26,
                    "z": 0,
                    "rotationX": -40,
                    "color": "#4E6C2A",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": -8,
                    "y": 26,
                    "z": 0,
                    "rotationX": -40,
                    "color": "#4E6C2A",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": 8,
                    "y": 24,
                    "z": 3,
                    "color": "#A0A0A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": -8,
                    "y": 24,
                    "z": 3,
                    "color": "#A0A0A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 35,
                    "z": -2,
                    "rotationX": -60,
                    "color": "#536026",
                    "name": "spike1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 28,
                    "z": -8,
                    "rotationX": -75,
                    "color": "#436026",
                    "name": "spike2"
                  },
                  {
                    "type": "cone",
                    "size": 3,
                    "height": 4,
                    "x": 0,
                    "y": 22,
                    "z": -20,
                    "rotationX": -25,
                    "color": "#436026",
                    "name": "spike3"
                  },
                  {
                    "type": "cone",
                    "size": 2,
                    "height": 3,
                    "x": 0,
                    "y": 18,
                    "z": -28,
                    "rotationX": -25,
                    "color": "#436026",
                    "name": "spike4"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 12,
                    "height": 25,
                    "depth": 12,
                    "x": 0,
                    "y": 23,
                    "z": -2.6,
                    "rotationX": 46,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 10,
                    "depth": 16,
                    "x": 0,
                    "y": 37.5,
                    "z": 12,
                    "color": "#5D8233",
                    "name": "head-top"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 29.5,
                    "z": 14,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 1,
                    "depth": 1,
                    "x": 0,
                    "y": 31.5,
                    "z": 20,
                    "color": "#ff3c41",
                    "name": "gums"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -3,
                    "y": 31.5,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-right"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 31.5,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-middle"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 3,
                    "y": 31.5,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -7,
                    "y": 42.5,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -7,
                    "y": 42.5,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 7,
                    "y": 42.5,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 7,
                    "y": 42.5,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 14,
                    "x": 1.5,
                    "y": 18,
                    "z": -17.9,
                    "rotationX": -20,
                    "rotationZ": 10,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 3,
                    "depth": 10,
                    "x": 3,
                    "y": 15,
                    "z": -30,
                    "rotationX": -10,
                    "rotationZ": 15,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": 6,
                    "y": 10,
                    "z": 3,
                    "rotationX": 15,
                    "color": "#4E6C2A",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": -6,
                    "y": 8,
                    "z": -5,
                    "rotationX": -25,
                    "color": "#4E6C2A",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": 6,
                    "y": 3,
                    "z": 9,
                    "rotationX": 15,
                    "color": "#4E6C2A",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": -6,
                    "y": 1,
                    "z": -10,
                    "rotationX": -25,
                    "color": "#4E6C2A",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": 8,
                    "y": 26,
                    "z": -1,
                    "rotationX": -20,
                    "color": "#4E6C2A",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": -8,
                    "y": 26,
                    "z": 2,
                    "rotationX": -60,
                    "color": "#4E6C2A",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": 8,
                    "y": 24,
                    "z": 1,
                    "color": "#A0A0A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": -8,
                    "y": 22,
                    "z": 5,
                    "color": "#A0A0A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 35.5,
                    "z": -2,
                    "rotationX": -60,
                    "color": "#536026",
                    "name": "spike1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 28.5,
                    "z": -8,
                    "rotationX": -75,
                    "color": "#436026",
                    "name": "spike2"
                  },
                  {
                    "type": "cone",
                    "size": 3,
                    "height": 4,
                    "x": 1.5,
                    "y": 22,
                    "z": -20,
                    "rotationX": -25,
                    "rotationZ": 10,
                    "color": "#436026",
                    "name": "spike3"
                  },
                  {
                    "type": "cone",
                    "size": 2,
                    "height": 3,
                    "x": 3,
                    "y": 18,
                    "z": -28,
                    "rotationX": -25,
                    "rotationZ": 15,
                    "color": "#436026",
                    "name": "spike4"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 12,
                    "height": 25,
                    "depth": 12,
                    "x": 0,
                    "y": 22.8,
                    "z": -2.6,
                    "rotationX": 46,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 10,
                    "depth": 16,
                    "x": 0,
                    "y": 37.3,
                    "z": 12,
                    "color": "#5D8233",
                    "name": "head-top"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 29.3,
                    "z": 14,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 1,
                    "depth": 1,
                    "x": 0,
                    "y": 31.3,
                    "z": 20,
                    "color": "#ff3c41",
                    "name": "gums"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -3,
                    "y": 31.3,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-right"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 31.3,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-middle"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 3,
                    "y": 31.3,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -7,
                    "y": 42.3,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -7,
                    "y": 42.3,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 7,
                    "y": 42.3,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 7,
                    "y": 42.3,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 18,
                    "z": -17.9,
                    "rotationX": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 15,
                    "z": -30,
                    "rotationX": -10,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": 6,
                    "y": 9,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#4E6C2A",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": -6,
                    "y": 11,
                    "z": 0,
                    "rotationX": 5,
                    "color": "#4E6C2A",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": 6,
                    "y": 0.5,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#4E6C2A",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": -6,
                    "y": 1.5,
                    "z": 1,
                    "rotationX": 5,
                    "color": "#4E6C2A",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": 8,
                    "y": 26,
                    "z": 0,
                    "rotationX": -50,
                    "color": "#4E6C2A",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": -8,
                    "y": 26,
                    "z": 0,
                    "rotationX": -30,
                    "color": "#4E6C2A",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": 8,
                    "y": 23,
                    "z": 4,
                    "color": "#A0A0A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": -8,
                    "y": 25,
                    "z": 2,
                    "color": "#A0A0A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 35.3,
                    "z": -2,
                    "rotationX": -60,
                    "color": "#536026",
                    "name": "spike1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 28.3,
                    "z": -8,
                    "rotationX": -75,
                    "color": "#436026",
                    "name": "spike2"
                  },
                  {
                    "type": "cone",
                    "size": 3,
                    "height": 4,
                    "x": 0,
                    "y": 22,
                    "z": -20,
                    "rotationX": -25,
                    "color": "#436026",
                    "name": "spike3"
                  },
                  {
                    "type": "cone",
                    "size": 2,
                    "height": 3,
                    "x": 0,
                    "y": 18,
                    "z": -28,
                    "rotationX": -25,
                    "color": "#436026",
                    "name": "spike4"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 12,
                    "height": 25,
                    "depth": 12,
                    "x": 0,
                    "y": 23,
                    "z": -2.6,
                    "rotationX": 46,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 10,
                    "depth": 16,
                    "x": 0,
                    "y": 37.5,
                    "z": 12,
                    "color": "#5D8233",
                    "name": "head-top"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 29.5,
                    "z": 14,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 1,
                    "depth": 1,
                    "x": 0,
                    "y": 31.5,
                    "z": 20,
                    "color": "#ff3c41",
                    "name": "gums"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -3,
                    "y": 31.5,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-right"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 31.5,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-middle"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 3,
                    "y": 31.5,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -7,
                    "y": 42.5,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -7,
                    "y": 42.5,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 7,
                    "y": 42.5,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 7,
                    "y": 42.5,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 14,
                    "x": -1.5,
                    "y": 18,
                    "z": -17.9,
                    "rotationX": -20,
                    "rotationZ": -10,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 3,
                    "depth": 10,
                    "x": -3,
                    "y": 15,
                    "z": -30,
                    "rotationX": -10,
                    "rotationZ": -15,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": 6,
                    "y": 8,
                    "z": -5,
                    "rotationX": -25,
                    "color": "#4E6C2A",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": -6,
                    "y": 10,
                    "z": 3,
                    "rotationX": 15,
                    "color": "#4E6C2A",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": 6,
                    "y": 1,
                    "z": -10,
                    "rotationX": -25,
                    "color": "#4E6C2A",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": -6,
                    "y": 3,
                    "z": 9,
                    "rotationX": 15,
                    "color": "#4E6C2A",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": 8,
                    "y": 26,
                    "z": 2,
                    "rotationX": -60,
                    "color": "#4E6C2A",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": -8,
                    "y": 26,
                    "z": -1,
                    "rotationX": -20,
                    "color": "#4E6C2A",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": 8,
                    "y": 22,
                    "z": 5,
                    "color": "#A0A0A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": -8,
                    "y": 24,
                    "z": 1,
                    "color": "#A0A0A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 35.5,
                    "z": -2,
                    "rotationX": -60,
                    "color": "#536026",
                    "name": "spike1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 28.5,
                    "z": -8,
                    "rotationX": -75,
                    "color": "#436026",
                    "name": "spike2"
                  },
                  {
                    "type": "cone",
                    "size": 3,
                    "height": 4,
                    "x": -1.5,
                    "y": 22,
                    "z": -20,
                    "rotationX": -25,
                    "rotationZ": -10,
                    "color": "#436026",
                    "name": "spike3"
                  },
                  {
                    "type": "cone",
                    "size": 2,
                    "height": 3,
                    "x": -3,
                    "y": 18,
                    "z": -28,
                    "rotationX": -25,
                    "rotationZ": -15,
                    "color": "#436026",
                    "name": "spike4"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 12,
                    "height": 25,
                    "depth": 12,
                    "x": 0,
                    "y": 22.8,
                    "z": -2.6,
                    "rotationX": 46,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 10,
                    "depth": 16,
                    "x": 0,
                    "y": 37.3,
                    "z": 12,
                    "color": "#5D8233",
                    "name": "head-top"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 29.3,
                    "z": 14,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 1,
                    "depth": 1,
                    "x": 0,
                    "y": 31.3,
                    "z": 20,
                    "color": "#ff3c41",
                    "name": "gums"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -3,
                    "y": 31.3,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-right"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 31.3,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-middle"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 3,
                    "y": 31.3,
                    "z": 20,
                    "color": "#FFFFFF",
                    "name": "tooth-left"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -7,
                    "y": 42.3,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -7,
                    "y": 42.3,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 7,
                    "y": 42.3,
                    "z": 14,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 7,
                    "y": 42.3,
                    "z": 15,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 14,
                    "x": 0,
                    "y": 18,
                    "z": -17.9,
                    "rotationX": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 15,
                    "z": -30,
                    "rotationX": -10,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": 6,
                    "y": 11,
                    "z": 0,
                    "rotationX": 5,
                    "color": "#4E6C2A",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 16,
                    "depth": 5,
                    "x": -6,
                    "y": 9,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#4E6C2A",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": 6,
                    "y": 1.5,
                    "z": 1,
                    "rotationX": 5,
                    "color": "#4E6C2A",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 9,
                    "x": -6,
                    "y": 0.5,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#4E6C2A",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": 8,
                    "y": 26,
                    "z": 0,
                    "rotationX": -30,
                    "color": "#4E6C2A",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 5,
                    "depth": 3,
                    "x": -8,
                    "y": 26,
                    "z": 0,
                    "rotationX": -50,
                    "color": "#4E6C2A",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": 8,
                    "y": 25,
                    "z": 2,
                    "color": "#A0A0A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 1,
                    "x": -8,
                    "y": 23,
                    "z": 4,
                    "color": "#A0A0A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 35.3,
                    "z": -2,
                    "rotationX": -60,
                    "color": "#536026",
                    "name": "spike1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 28.3,
                    "z": -8,
                    "rotationX": -75,
                    "color": "#436026",
                    "name": "spike2"
                  },
                  {
                    "type": "cone",
                    "size": 3,
                    "height": 4,
                    "x": 0,
                    "y": 22,
                    "z": -20,
                    "rotationX": -25,
                    "color": "#436026",
                    "name": "spike3"
                  },
                  {
                    "type": "cone",
                    "size": 2,
                    "height": 3,
                    "x": 0,
                    "y": 18,
                    "z": -28,
                    "rotationX": -25,
                    "color": "#436026",
                    "name": "spike4"
                  }
                ]
              }
            ]
          }
        }
      },
      "stegosaurus": {
        "speed": 1,
        "hp": 30,
        "essence": 10,
        "value": 5,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 24,
                    "height": 12,
                    "depth": 32,
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 12,
                    "depth": 22,
                    "x": 0,
                    "y": 28,
                    "z": 24,
                    "color": "#5D8233",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 5,
                    "depth": 20,
                    "x": 0,
                    "y": 23,
                    "z": 26,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 23,
                    "z": 36,
                    "color": "#FFFFFF",
                    "name": "teeth"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -9,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": -10,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 9,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 10,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 6,
                    "depth": 20,
                    "x": 0,
                    "y": 16,
                    "z": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 16,
                    "x": 0,
                    "y": 15,
                    "z": -38,
                    "rotationY": 0,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 10,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 10,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 10,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 10,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 3,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 3,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 3,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 3,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-right"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-1"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 26,
                    "z": -10,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-2"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 6,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-tail-base"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 0,
                    "y": 20,
                    "z": -36,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-tail-tip"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 34,
                    "z": 20,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-head"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 24,
                    "height": 12,
                    "depth": 32,
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 12,
                    "depth": 22,
                    "x": 1,
                    "y": 28,
                    "z": 24,
                    "color": "#5D8233",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 5,
                    "depth": 20,
                    "x": 1,
                    "y": 23,
                    "z": 26,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 2,
                    "depth": 1,
                    "x": 1,
                    "y": 23,
                    "z": 36,
                    "color": "#FFFFFF",
                    "name": "teeth"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -8,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": -9,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 10,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 11,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 6,
                    "depth": 20,
                    "x": -2,
                    "y": 16,
                    "z": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 16,
                    "x": -6,
                    "y": 15,
                    "z": -38,
                    "rotationY": 15,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 9,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 12,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 12,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 9,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 2,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 5,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 5,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 2,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-right"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-1"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 26,
                    "z": -10,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-2"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 6,
                    "x": -2,
                    "y": 22,
                    "z": -24,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-tail-base"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": -6,
                    "y": 20,
                    "z": -36,
                    "rotationX": 15,
                    "color": "#436026",
                    "name": "spike-tail-tip"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 1,
                    "y": 34,
                    "z": 20,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-head"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 24,
                    "height": 12,
                    "depth": 32,
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 12,
                    "depth": 22,
                    "x": -1,
                    "y": 28,
                    "z": 24,
                    "color": "#5D8233",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 5,
                    "depth": 20,
                    "x": -1,
                    "y": 23,
                    "z": 26,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 2,
                    "depth": 1,
                    "x": -1,
                    "y": 23,
                    "z": 36,
                    "color": "#FFFFFF",
                    "name": "teeth"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -10,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": -11,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 8,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 9,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 6,
                    "depth": 20,
                    "x": 2,
                    "y": 16,
                    "z": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 16,
                    "x": 6,
                    "y": 15,
                    "z": -38,
                    "rotationY": -15,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 12,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 9,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 9,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 12,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 5,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 2,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 2,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 5,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-right"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-1"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 26,
                    "z": -10,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-2"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 6,
                    "x": 2,
                    "y": 22,
                    "z": -24,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-tail-base"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 6,
                    "y": 20,
                    "z": -36,
                    "rotationX": -15,
                    "color": "#436026",
                    "name": "spike-tail-tip"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": -1,
                    "y": 34,
                    "z": 20,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-head"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 24,
                    "height": 12,
                    "depth": 32,
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 12,
                    "depth": 22,
                    "x": 1,
                    "y": 28,
                    "z": 24,
                    "color": "#5D8233",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 5,
                    "depth": 20,
                    "x": 1,
                    "y": 23,
                    "z": 26,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 2,
                    "depth": 1,
                    "x": 1,
                    "y": 23,
                    "z": 36,
                    "color": "#FFFFFF",
                    "name": "teeth"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -8,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": -9,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 10,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 11,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 6,
                    "depth": 20,
                    "x": -2,
                    "y": 16,
                    "z": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 16,
                    "x": -6,
                    "y": 15,
                    "z": -38,
                    "rotationY": 15,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 12,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 9,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 9,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 12,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 5,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 2,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 2,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 5,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-right"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-1"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 26,
                    "z": -10,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-2"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 6,
                    "x": -2,
                    "y": 22,
                    "z": -24,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-tail-base"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": -6,
                    "y": 20,
                    "z": -36,
                    "rotationX": 15,
                    "color": "#436026",
                    "name": "spike-tail-tip"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 1,
                    "y": 34,
                    "z": 20,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-head"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 24,
                    "height": 12,
                    "depth": 32,
                    "x": 0,
                    "y": 18,
                    "z": 0,
                    "color": "#5D8233",
                    "name": "body"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 12,
                    "depth": 22,
                    "x": -1,
                    "y": 28,
                    "z": 24,
                    "color": "#5D8233",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 5,
                    "depth": 20,
                    "x": -1,
                    "y": 23,
                    "z": 26,
                    "color": "#4E6C2A",
                    "name": "jaw"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 2,
                    "depth": 1,
                    "x": -1,
                    "y": 23,
                    "z": 36,
                    "color": "#FFFFFF",
                    "name": "teeth"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -10,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": -11,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 8,
                    "y": 32,
                    "z": 28,
                    "color": "#FFFF00",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": 9,
                    "y": 32,
                    "z": 29,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 6,
                    "depth": 20,
                    "x": 2,
                    "y": 16,
                    "z": -20,
                    "color": "#5D8233",
                    "name": "tail-base"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 4,
                    "depth": 16,
                    "x": 6,
                    "y": 15,
                    "z": -38,
                    "rotationY": -15,
                    "color": "#5D8233",
                    "name": "tail-tip"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 9,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": 10,
                    "y": 12,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 12,
                    "z": 10,
                    "color": "#4E6C2A",
                    "name": "leg-front-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 12,
                    "depth": 6,
                    "x": -10,
                    "y": 9,
                    "z": -10,
                    "color": "#4E6C2A",
                    "name": "leg-back-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 2,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": 10,
                    "y": 5,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 5,
                    "z": 12,
                    "color": "#4E6C2A",
                    "name": "foot-front-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 3,
                    "depth": 10,
                    "x": -10,
                    "y": 2,
                    "z": -8,
                    "color": "#4E6C2A",
                    "name": "foot-back-right"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-1"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": 0,
                    "y": 26,
                    "z": -10,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-back-2"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 6,
                    "x": 2,
                    "y": 22,
                    "z": -24,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-tail-base"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 6,
                    "y": 20,
                    "z": -36,
                    "rotationX": -15,
                    "color": "#436026",
                    "name": "spike-tail-tip"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 8,
                    "x": -1,
                    "y": 34,
                    "z": 20,
                    "rotationX": 0,
                    "color": "#436026",
                    "name": "spike-head"
                  }
                ]
              }
            ]
          }
        },
        "title": "stegosaurus"
      },
      "pterodactyl": {
        "speed": 2,
        "value": 10,
        "hp": 5,
        "essence": 5,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 7.199999999999999,
                    "height": 14.399999999999999,
                    "x": 0,
                    "y": 47.48726562500001,
                    "z": -2.3686718749999995,
                    "color": "#7d6d5e",
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "body"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.88,
                    "height": 12,
                    "x": 0,
                    "y": 49.294765625,
                    "z": 9.631328125000001,
                    "color": "#7D6B5D",
                    "rotationX": 45,
                    "rotationZ": 0,
                    "name": "neck"
                  },
                  {
                    "type": "cone",
                    "size": 2.4,
                    "height": 10.56,
                    "x": 0,
                    "y": 52.76726562500002,
                    "z": 15.871328125,
                    "color": "#7D6B5D",
                    "rotationX": 120,
                    "rotationZ": 0,
                    "name": "beak"
                  },
                  {
                    "type": "cone",
                    "size": 0.96,
                    "height": 9.6,
                    "x": 0,
                    "y": 59.48726562500001,
                    "z": 13.471328125,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "head-spike"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": -12,
                    "y": 47.48726562500001,
                    "z": -2.3686718749999995,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": 15,
                    "name": "wing-right"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": 12,
                    "y": 47.48726562500001,
                    "z": -2.3686718749999995,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": -15,
                    "name": "wing-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": -12,
                    "y": 47,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": 15,
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": 25,
                    "y": 43.2,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": 40,
                    "rotationZ": -30,
                    "rotationX": 16,
                    "name": "wingtip-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.92,
                    "height": 12,
                    "x": 0,
                    "y": 47.48726562500001,
                    "z": -16.851171875000002,
                    "color": "#7D6B5D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "tail"
                  },
                  {
                    "type": "box",
                    "width": 5.76,
                    "height": 0.48,
                    "depth": 4.8,
                    "x": 0,
                    "y": 47.48726562500001,
                    "z": -19.648671875,
                    "color": "#8D7B6D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "tail-tip"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": -2.4,
                    "y": 42.68726562500001,
                    "z": -4.768671874999999,
                    "color": "#6D5D4D",
                    "rotationX": 20,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": 2.4,
                    "y": 42.68726562500001,
                    "z": -4.768671874999999,
                    "color": "#6D5D4D",
                    "rotationX": 20,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": -2.4,
                    "y": 40.04726562500001,
                    "z": -4.851171875,
                    "color": "#6D5D4D",
                    "rotationX": -60,
                    "rotationZ": 0,
                    "name": "foot-right"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": 2.4,
                    "y": 40.04726562500001,
                    "z": -4.851171875,
                    "color": "#6D5D4D",
                    "rotationX": -60,
                    "rotationZ": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": -0.96,
                    "y": 54.68726562500001,
                    "z": 15.391328125000001,
                    "color": "#000000",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": 0.96,
                    "y": 54.68726562500001,
                    "z": 15.391328125000001,
                    "color": "#000000",
                    "name": "eye-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": 12,
                    "y": 47,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": 15,
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": -25,
                    "y": 43.2,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": -40,
                    "rotationZ": 30,
                    "rotationX": 16,
                    "name": "wingtip-right"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 7.2,
                    "height": 14.4,
                    "x": 0,
                    "y": 47.5,
                    "z": -2.4,
                    "color": "#7d6d5e",
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "body"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.88,
                    "height": 12,
                    "x": 0,
                    "y": 49.3,
                    "z": 9.6,
                    "color": "#7D6B5D",
                    "rotationX": 45,
                    "rotationZ": 0,
                    "name": "neck"
                  },
                  {
                    "type": "cone",
                    "size": 2.4,
                    "height": 10.56,
                    "x": 0,
                    "y": 52.8,
                    "z": 15.9,
                    "color": "#7D6B5D",
                    "rotationX": 120,
                    "rotationZ": 0,
                    "name": "beak"
                  },
                  {
                    "type": "cone",
                    "size": 0.96,
                    "height": 9.6,
                    "x": 0,
                    "y": 59.5,
                    "z": 13.5,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "head-spike"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": -12,
                    "y": 50,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": -10,
                    "name": "wing-right"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": 12,
                    "y": 50,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": 10,
                    "name": "wing-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": -12,
                    "y": 50,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": -10,
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": 25,
                    "y": 53,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": 40,
                    "rotationZ": 10,
                    "rotationX": 16,
                    "name": "wingtip-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.92,
                    "height": 12,
                    "x": 0,
                    "y": 47.5,
                    "z": -16.9,
                    "color": "#7D6B5D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "tail"
                  },
                  {
                    "type": "box",
                    "width": 5.76,
                    "height": 0.48,
                    "depth": 4.8,
                    "x": 0,
                    "y": 47.5,
                    "z": -19.6,
                    "color": "#8D7B6D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "tail-tip"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": -2.4,
                    "y": 42.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": 2.4,
                    "y": 42.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": -2.4,
                    "y": 39.5,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "foot-right"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": 2.4,
                    "y": 39.5,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": -0.96,
                    "y": 54.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": 0.96,
                    "y": 54.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": 12,
                    "y": 50,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": 10,
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": -25,
                    "y": 53,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": -40,
                    "rotationZ": -10,
                    "rotationX": 16,
                    "name": "wingtip-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 7.2,
                    "height": 14.4,
                    "x": 0,
                    "y": 48.5,
                    "z": -2.4,
                    "color": "#7d6d5e",
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "body"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.88,
                    "height": 12,
                    "x": 0,
                    "y": 50.3,
                    "z": 9.6,
                    "color": "#7D6B5D",
                    "rotationX": 45,
                    "rotationZ": 0,
                    "name": "neck"
                  },
                  {
                    "type": "cone",
                    "size": 2.4,
                    "height": 10.56,
                    "x": 0,
                    "y": 53.8,
                    "z": 15.9,
                    "color": "#7D6B5D",
                    "rotationX": 120,
                    "rotationZ": 0,
                    "name": "beak"
                  },
                  {
                    "type": "cone",
                    "size": 0.96,
                    "height": 9.6,
                    "x": 0,
                    "y": 60.5,
                    "z": 13.5,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "head-spike"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": -12,
                    "y": 45,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": 30,
                    "name": "wing-right"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": 12,
                    "y": 45,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": -30,
                    "name": "wing-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": -12,
                    "y": 45,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": 30,
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": 25,
                    "y": 38,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": 40,
                    "rotationZ": -30,
                    "rotationX": 16,
                    "name": "wingtip-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.92,
                    "height": 12,
                    "x": 0,
                    "y": 48.5,
                    "z": -16.9,
                    "color": "#7D6B5D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "tail"
                  },
                  {
                    "type": "box",
                    "width": 5.76,
                    "height": 0.48,
                    "depth": 4.8,
                    "x": 0,
                    "y": 48.5,
                    "z": -19.6,
                    "color": "#8D7B6D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "tail-tip"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": -2.4,
                    "y": 43.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 20,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": 2.4,
                    "y": 43.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 20,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": -2.4,
                    "y": 41,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": -60,
                    "rotationZ": 0,
                    "name": "foot-right"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": 2.4,
                    "y": 41,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": -60,
                    "rotationZ": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": -0.96,
                    "y": 55.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": 0.96,
                    "y": 55.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": 12,
                    "y": 45,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": -30,
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": -25,
                    "y": 38,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": -40,
                    "rotationZ": 30,
                    "rotationX": 16,
                    "name": "wingtip-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 7.2,
                    "height": 14.4,
                    "x": 0,
                    "y": 47.5,
                    "z": -2.4,
                    "color": "#7d6d5e",
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "body"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.88,
                    "height": 12,
                    "x": 0,
                    "y": 49.3,
                    "z": 9.6,
                    "color": "#7D6B5D",
                    "rotationX": 45,
                    "rotationZ": 0,
                    "name": "neck"
                  },
                  {
                    "type": "cone",
                    "size": 2.4,
                    "height": 10.56,
                    "x": 0,
                    "y": 52.8,
                    "z": 15.9,
                    "color": "#7D6B5D",
                    "rotationX": 120,
                    "rotationZ": 0,
                    "name": "beak"
                  },
                  {
                    "type": "cone",
                    "size": 0.96,
                    "height": 9.6,
                    "x": 0,
                    "y": 59.5,
                    "z": 13.5,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "head-spike"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": -12,
                    "y": 50,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": -10,
                    "name": "wing-right"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": 12,
                    "y": 50,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": 10,
                    "name": "wing-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": -12,
                    "y": 50,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": -10,
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": 25,
                    "y": 53,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": 40,
                    "rotationZ": 10,
                    "rotationX": 16,
                    "name": "wingtip-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.92,
                    "height": 12,
                    "x": 0,
                    "y": 47.5,
                    "z": -16.9,
                    "color": "#7D6B5D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "tail"
                  },
                  {
                    "type": "box",
                    "width": 5.76,
                    "height": 0.48,
                    "depth": 4.8,
                    "x": 0,
                    "y": 47.5,
                    "z": -19.6,
                    "color": "#8D7B6D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "tail-tip"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": -2.4,
                    "y": 42.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": 2.4,
                    "y": 42.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": -2.4,
                    "y": 39.5,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "foot-right"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": 2.4,
                    "y": 39.5,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": -0.96,
                    "y": 54.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": 0.96,
                    "y": 54.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": 12,
                    "y": 50,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": 10,
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": -25,
                    "y": 53,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": -40,
                    "rotationZ": -10,
                    "rotationX": 16,
                    "name": "wingtip-right"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 7.2,
                    "height": 14.4,
                    "x": 0,
                    "y": 46.5,
                    "z": -2.4,
                    "color": "#7d6d5e",
                    "rotationX": 90,
                    "rotationZ": 0,
                    "name": "body"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.88,
                    "height": 12,
                    "x": 0,
                    "y": 48.3,
                    "z": 9.6,
                    "color": "#7D6B5D",
                    "rotationX": 45,
                    "rotationZ": 0,
                    "name": "neck"
                  },
                  {
                    "type": "cone",
                    "size": 2.4,
                    "height": 10.56,
                    "x": 0,
                    "y": 51.8,
                    "z": 15.9,
                    "color": "#7D6B5D",
                    "rotationX": 120,
                    "rotationZ": 0,
                    "name": "beak"
                  },
                  {
                    "type": "cone",
                    "size": 0.96,
                    "height": 9.6,
                    "x": 0,
                    "y": 58.5,
                    "z": 13.5,
                    "color": "#6D5D4D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "head-spike"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": -12,
                    "y": 43,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": 30,
                    "name": "wing-right"
                  },
                  {
                    "type": "box",
                    "width": 24,
                    "height": 0.48,
                    "depth": 9.6,
                    "x": 12,
                    "y": 43,
                    "z": -2.4,
                    "color": "#8D7B6D",
                    "rotationY": 0,
                    "rotationZ": -30,
                    "name": "wing-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": -12,
                    "y": 43,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": 50,
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": 25,
                    "y": 35,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": 40,
                    "rotationZ": -50,
                    "rotationX": 16,
                    "name": "wingtip-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.92,
                    "height": 12,
                    "x": 0,
                    "y": 46.5,
                    "z": -16.9,
                    "color": "#7D6B5D",
                    "rotationX": -90,
                    "rotationZ": 0,
                    "name": "tail"
                  },
                  {
                    "type": "box",
                    "width": 5.76,
                    "height": 0.48,
                    "depth": 4.8,
                    "x": 0,
                    "y": 46.5,
                    "z": -19.6,
                    "color": "#8D7B6D",
                    "rotationX": 0,
                    "rotationZ": 0,
                    "name": "tail-tip"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": -2.4,
                    "y": 41.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 40,
                    "rotationZ": 0,
                    "name": "leg-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 0.72,
                    "height": 5.76,
                    "x": 2.4,
                    "y": 41.7,
                    "z": -4.8,
                    "color": "#6D5D4D",
                    "rotationX": 40,
                    "rotationZ": 0,
                    "name": "leg-left"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": -2.4,
                    "y": 38,
                    "z": -5.7,
                    "color": "#6D5D4D",
                    "rotationX": -30,
                    "rotationZ": 0,
                    "name": "foot-right"
                  },
                  {
                    "type": "cone",
                    "size": 1.44,
                    "height": 2.4,
                    "x": 2.4,
                    "y": 38,
                    "z": -5.7,
                    "color": "#6D5D4D",
                    "rotationX": -30,
                    "rotationZ": 0,
                    "name": "foot-left"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": -0.96,
                    "y": 53.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 0.72,
                    "x": 0.96,
                    "y": 53.7,
                    "z": 15.4,
                    "color": "#000000",
                    "name": "eye-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 0.24,
                    "depth": 2,
                    "x": 12,
                    "y": 43,
                    "z": 3,
                    "color": "#8D7B6D",
                    "rotationY": 90,
                    "rotationZ": 50,
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 10,
                    "height": 0.24,
                    "depth": 6,
                    "x": -25,
                    "y": 35,
                    "z": -4.1,
                    "color": "#8D7B6D",
                    "rotationY": -40,
                    "rotationZ": 50,
                    "rotationX": 16,
                    "name": "wingtip-right"
                  }
                ]
              }
            ]
          }
        },
        "title": "Pterodactyl"
      },
      "armoredBeast": {
        "speed": 0.9,
        "essence": 20,
        "value": 30,
        "hp": 100,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#676767",
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "size": 30
                  },
                  {
                    "type": "sphere",
                    "size": 17,
                    "color": "#676767",
                    "x": 0,
                    "y": 37,
                    "z": 0
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#676767",
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "size": 30
                  },
                  {
                    "type": "sphere",
                    "size": 17,
                    "color": "#676767",
                    "x": 0,
                    "y": 37,
                    "z": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": -0.4465238854292495,
                    "y": 20,
                    "z": 0.039065777968608106,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": -0.4465238854292495,
                    "y": 36,
                    "z": 0.039065777968608106
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 15.31040016276608,
                    "y": 24,
                    "z": -2.7393050647022767,
                    "rotationZ": 45,
                    "rotationX": -10
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16.203447933624577,
                    "y": 24,
                    "z": 2.8174366206394934,
                    "rotationZ": -45,
                    "rotationX": 10
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 21.219246680839326,
                    "y": 18,
                    "z": -1.9
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22.112294451697828,
                    "y": 18,
                    "z": 2.1
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 9.40155364469283,
                    "y": 8,
                    "z": -1.6974159987006954,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10.294601415551329,
                    "y": 8,
                    "z": 1.7755475546379114,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5.866700300967233,
                    "y": 38,
                    "z": 7.0492869137316205
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -3.9813772291548464,
                    "y": 38,
                    "z": 8.785768690400923
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 6.213996656301093,
                    "y": 38,
                    "z": 9.018902419756037
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -3.6340808738209858,
                    "y": 38,
                    "z": 10.75538419642534
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10.294601415551329,
                    "y": 42,
                    "z": 1.7755475546379114,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 9.40155364469283,
                    "y": 42,
                    "z": -1.6974159987006954,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#676767",
                    "x": -0.4465238854292495,
                    "y": 22,
                    "z": 0.039065777968608106,
                    "size": 30
                  },
                  {
                    "type": "sphere",
                    "size": 17,
                    "color": "#676767",
                    "x": -0.4465238854292495,
                    "y": 37,
                    "z": 0.039065777968608106
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 20,
                    "z": 0,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0,
                    "y": 36,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -16,
                    "y": 24,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -22,
                    "y": 18,
                    "z": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5,
                    "y": 38,
                    "z": 8
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -5,
                    "y": 38,
                    "z": 10
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10,
                    "y": 42,
                    "z": 0,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#676767",
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "size": 30
                  },
                  {
                    "type": "sphere",
                    "size": 17,
                    "color": "#676767",
                    "x": 0,
                    "y": 37,
                    "z": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#A52A2A",
                    "x": 0.4465238854292495,
                    "y": 20,
                    "z": 0.039065777968608106,
                    "size": 28
                  },
                  {
                    "type": "sphere",
                    "size": 18,
                    "color": "#A52A2A",
                    "x": 0.4465238854292495,
                    "y": 36,
                    "z": 0.039065777968608106
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": 16.203447933624577,
                    "y": 24,
                    "z": 2.8174366206394934,
                    "rotationZ": 45,
                    "rotationX": 10
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 14,
                    "color": "#8B4513",
                    "x": -15.31040016276608,
                    "y": 24,
                    "z": -2.7393050647022767,
                    "rotationZ": -45,
                    "rotationX": -10
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": 22.112294451697828,
                    "y": 18,
                    "z": 1.9
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "color": "#A52A2A",
                    "x": -21.219246680839326,
                    "y": 18,
                    "z": -1.6
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": 10.294601415551329,
                    "y": 8,
                    "z": 1.7755475546379114,
                    "rotationZ": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 8,
                    "height": 16,
                    "color": "#8B4513",
                    "x": -9.40155364469283,
                    "y": 8,
                    "z": -1.6974159987006954,
                    "rotationZ": 0
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": 3.9813772291548464,
                    "y": 38,
                    "z": 8.785768690400923
                  },
                  {
                    "type": "sphere",
                    "size": 6,
                    "color": "#FFFFFF",
                    "x": -5.866700300967233,
                    "y": 38,
                    "z": 7.0492869137316205
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": 3.6340808738209858,
                    "y": 38,
                    "z": 10.75538419642534
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "color": "#000000",
                    "x": -6.213996656301093,
                    "y": 38,
                    "z": 9.018902419756037
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": -9.40155364469283,
                    "y": 42,
                    "z": -1.6974159987006954,
                    "rotationZ": 45
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "color": "#8B4513",
                    "x": 10.294601415551329,
                    "y": 42,
                    "z": 1.7755475546379114,
                    "rotationZ": -45
                  },
                  {
                    "type": "sphere",
                    "width": 26,
                    "height": 20,
                    "depth": 24,
                    "color": "#676767",
                    "x": 0.44650238854292496,
                    "y": 22,
                    "z": 0.039065777968608106,
                    "size": 30
                  },
                  {
                    "type": "sphere",
                    "size": 17,
                    "color": "#676767",
                    "x": 0.4465238854292495,
                    "y": 37,
                    "z": 0.039065777968608106
                  }
                ]
              }
            ]
          }
        },
        "armor": 100,
        "title": "Armored Beast"
      },
      "orc": {
        "essence": 5,
        "speed": 1,
        "value": 1,
        "hp": 10,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 28.757142857142853,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 43.75714285714285,
                    "z": 1.4857142857143,
                    "color": "#5c6628",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 43.75714285714285,
                    "z": 7.485714285714296,
                    "color": "#686f20",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 40.257142857142846,
                    "z": 5.485714285714296,
                    "color": "#7d4023",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 45.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 45.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 45.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 45.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 11.999999999999998,
                    "y": 29.75714285714285,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12.000000000000002,
                    "y": 29.75714285714285,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 11.999999999999998,
                    "y": 17.757142857142853,
                    "z": 2.4857142857142978,
                    "color": "#496a29",
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12.000000000000002,
                    "y": 17.757142857142853,
                    "z": 2.4857142857142978,
                    "color": "#496a29",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 9.75714285714285,
                    "z": 1.4857142857142982,
                    "color": "#496a29",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 9.75714285714285,
                    "z": 1.4857142857142982,
                    "color": "#496a29",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 1.7571428571428456,
                    "z": 3.4857142857143026,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 1.7571428571428456,
                    "z": 3.4857142857143026,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": 6.499999999999998,
                    "y": 46.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": -6.5,
                    "y": 46.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-left"
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 5,
                    "x": 0,
                    "y": 50.2,
                    "z": 1.4857142857142929,
                    "rotationX": 0,
                    "color": "#555555",
                    "name": "helmet"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": 4,
                    "y": 38.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-right"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": -4,
                    "y": 38.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 19.757142857142853,
                    "z": 1.4857142857142982,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 9,
                    "depth": 3,
                    "x": 0,
                    "y": 42.75714285714285,
                    "z": -4.514285714285706,
                    "color": "#222222",
                    "name": "hair"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 30,
                    "x": 11.999999999999998,
                    "y": 14.999999999999996,
                    "z": 7.000000000000014,
                    "color": "#8B4513",
                    "name": "club-handle",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "x": 11.999999999999998,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "color": "#8B4513",
                    "name": "club-head"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 19.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 90,
                    "color": "#808080",
                    "name": "club-spike-1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 9.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-2",
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 6.6,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-3",
                    "rotationZ": 90,
                    "rotationX": 0
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 17.6,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-4",
                    "rotationX": 90,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 11.999999999999998,
                    "y": 14.999999999999995,
                    "z": 24.00000000000002,
                    "rotationX": 90,
                    "color": "#808080",
                    "name": "club-spike-top"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 4,
                    "depth": 4,
                    "x": 0,
                    "y": 23.757142857142853,
                    "z": -3.5142857142857027,
                    "color": "#333333",
                    "name": "back-armor"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": 12,
                    "y": 40,
                    "z": 1.4857142857142973,
                    "color": "#796020",
                    "name": "shoulder-pad-right",
                    "rotationX": 90
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": -12,
                    "y": 40,
                    "z": 1.4857142857142973,
                    "color": "#796020",
                    "name": "shoulder-pad-left",
                    "rotationX": 90
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 28.757142857142853,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 43.75714285714285,
                    "z": 1.4857142857143,
                    "color": "#5c6628",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 43.75714285714285,
                    "z": 7.485714285714296,
                    "color": "#686f20",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 40.257142857142846,
                    "z": 5.485714285714296,
                    "color": "#7d4023",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 45.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 45.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 45.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 45.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 11.999999999999998,
                    "y": 29.75714285714285,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12.000000000000002,
                    "y": 29.75714285714285,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 11.999999999999998,
                    "y": 17.757142857142853,
                    "z": 2.4857142857142978,
                    "color": "#496a29",
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12.000000000000002,
                    "y": 17.757142857142853,
                    "z": 2.4857142857142978,
                    "color": "#496a29",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 9.75714285714285,
                    "z": 1.4857142857142982,
                    "color": "#496a29",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 9.75714285714285,
                    "z": 1.4857142857142982,
                    "color": "#496a29",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 1.7571428571428456,
                    "z": 3.4857142857143026,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 1.7571428571428456,
                    "z": 3.4857142857143026,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": 6.499999999999998,
                    "y": 46.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": -6.5,
                    "y": 46.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-left"
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 5,
                    "x": 0,
                    "y": 50.2,
                    "z": 1.4857142857142929,
                    "rotationX": 0,
                    "color": "#555555",
                    "name": "helmet"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": 4,
                    "y": 38.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-right"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": -4,
                    "y": 38.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 19.757142857142853,
                    "z": 1.4857142857142982,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 9,
                    "depth": 3,
                    "x": 0,
                    "y": 42.75714285714285,
                    "z": -4.514285714285706,
                    "color": "#222222",
                    "name": "hair"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 30,
                    "x": 11.999999999999998,
                    "y": 14.999999999999996,
                    "z": 7.000000000000014,
                    "color": "#8B4513",
                    "name": "club-handle",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "x": 11.999999999999998,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "color": "#8B4513",
                    "name": "club-head"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 19.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 90,
                    "color": "#808080",
                    "name": "club-spike-1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 9.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-2",
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 6.6,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-3",
                    "rotationZ": 90,
                    "rotationX": 0
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 17.6,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-4",
                    "rotationX": 90,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 11.999999999999998,
                    "y": 14.999999999999995,
                    "z": 24.00000000000002,
                    "rotationX": 90,
                    "color": "#808080",
                    "name": "club-spike-top"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 4,
                    "depth": 4,
                    "x": 0,
                    "y": 23.757142857142853,
                    "z": -3.5142857142857027,
                    "color": "#333333",
                    "name": "back-armor"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": 12,
                    "y": 40,
                    "z": 1.4857142857142973,
                    "color": "#796020",
                    "name": "shoulder-pad-right",
                    "rotationX": 90
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": -12,
                    "y": 40,
                    "z": 1.4857142857142973,
                    "color": "#796020",
                    "name": "shoulder-pad-left",
                    "rotationX": 90
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 26.757142857142853,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "torso",
                    "rotationY": -10
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 41.75714285714285,
                    "z": 1.4857142857143,
                    "color": "#5c6628",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 41.75714285714285,
                    "z": 7.485714285714296,
                    "color": "#686f20",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 38.257142857142846,
                    "z": 5.485714285714296,
                    "color": "#7d4023",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 43.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 43.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 43.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 43.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 11.999999999999998,
                    "y": 27.75714285714285,
                    "z": -1,
                    "color": "#496a29",
                    "name": "arm-right",
                    "rotationX": 11
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12.000000000000002,
                    "y": 27.75714285714285,
                    "z": 3.6,
                    "color": "#496a29",
                    "name": "arm-left",
                    "rotationX": -14
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 11.6,
                    "y": 15.757142857142853,
                    "z": -3.2,
                    "color": "#496a29",
                    "name": "hand-right",
                    "rotationX": 10
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12.4,
                    "y": 15.757142857142853,
                    "z": 6.5,
                    "color": "#496a29",
                    "name": "hand-left",
                    "rotationX": -14
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 7.757142857142849,
                    "z": 3,
                    "color": "#496a29",
                    "name": "leg-right",
                    "rotationX": -4
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 7.757142857142849,
                    "z": -1,
                    "color": "#496a29",
                    "name": "leg-left",
                    "rotationX": 21
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": -0.24285714285715443,
                    "z": 5.1,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4.1,
                    "y": 1,
                    "z": -1.6,
                    "color": "#3B3B3B",
                    "name": "foot-left",
                    "rotationX": 26
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": 6.499999999999998,
                    "y": 44.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": -6.5,
                    "y": 44.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-left"
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 5,
                    "x": 0,
                    "y": 48.2,
                    "z": 1.4857142857142929,
                    "rotationX": 0,
                    "color": "#555555",
                    "name": "helmet"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": 4,
                    "y": 36.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-right"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": -4,
                    "y": 36.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 17.757142857142853,
                    "z": 1.4857142857142982,
                    "color": "#8B4513",
                    "name": "belt",
                    "rotationY": -10
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 9,
                    "depth": 3,
                    "x": 0,
                    "y": 40.75714285714285,
                    "z": -4.514285714285706,
                    "color": "#222222",
                    "name": "hair"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 30,
                    "x": 11.999999999999998,
                    "y": 12.999999999999996,
                    "z": 2.6,
                    "color": "#8B4513",
                    "name": "club-handle",
                    "rotationZ": 0,
                    "rotationX": -60
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "x": 12.1,
                    "y": 5,
                    "z": 17,
                    "color": "#8B4513",
                    "name": "club-head"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 9.5,
                    "z": 19.7,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-1",
                    "rotationX": 30
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 0,
                    "z": 14.5,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-2",
                    "rotationX": -150
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 7.5,
                    "y": 4.8,
                    "z": 17.3,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-3",
                    "rotationZ": 90,
                    "rotationX": 0
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 16.6,
                    "y": 4.8,
                    "z": 17.3,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-4",
                    "rotationX": 90,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 2.5999999999999996,
                    "z": 21,
                    "rotationX": 120,
                    "color": "#808080",
                    "name": "club-spike-top"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 4,
                    "depth": 4,
                    "x": 0,
                    "y": 21.757142857142853,
                    "z": -3.5142857142857027,
                    "color": "#333333",
                    "name": "back-armor"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": 12,
                    "y": 38,
                    "z": 1,
                    "color": "#796020",
                    "name": "shoulder-pad-right",
                    "rotationX": 105
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": -12,
                    "y": 38,
                    "z": 1,
                    "color": "#796020",
                    "name": "shoulder-pad-left",
                    "rotationX": 75
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 28.757142857142853,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 43.75714285714285,
                    "z": 1.4857142857143,
                    "color": "#5c6628",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 43.75714285714285,
                    "z": 7.485714285714296,
                    "color": "#686f20",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 40.257142857142846,
                    "z": 5.485714285714296,
                    "color": "#7d4023",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 45.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 45.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 45.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 45.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 11.999999999999998,
                    "y": 29.757142857142853,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12.000000000000002,
                    "y": 29.757142857142853,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 11.999999999999998,
                    "y": 17.757142857142853,
                    "z": 2.4857142857142978,
                    "color": "#496a29",
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12.000000000000002,
                    "y": 17.757142857142853,
                    "z": 2.4857142857142978,
                    "color": "#496a29",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 9.75714285714285,
                    "z": 1.4857142857142982,
                    "color": "#496a29",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 9.75714285714285,
                    "z": 1.4857142857142982,
                    "color": "#496a29",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 1.7571428571428456,
                    "z": 3.4857142857143026,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 1.7571428571428456,
                    "z": 3.4857142857143026,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": 6.499999999999998,
                    "y": 46.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": -6.5,
                    "y": 46.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-left"
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 5,
                    "x": 0,
                    "y": 50.2,
                    "z": 1.4857142857142929,
                    "rotationX": 0,
                    "color": "#555555",
                    "name": "helmet"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": 4,
                    "y": 38.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-right"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": -4,
                    "y": 38.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 19.757142857142853,
                    "z": 1.4857142857142982,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 9,
                    "depth": 3,
                    "x": 0,
                    "y": 42.75714285714285,
                    "z": -4.514285714285706,
                    "color": "#222222",
                    "name": "hair"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 30,
                    "x": 11.999999999999998,
                    "y": 14.999999999999996,
                    "z": 7.000000000000014,
                    "color": "#8B4513",
                    "name": "club-handle",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "x": 11.999999999999998,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "color": "#8B4513",
                    "name": "club-head"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 19.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 90,
                    "color": "#808080",
                    "name": "club-spike-1"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 9.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-2",
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 6.6,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-3",
                    "rotationZ": 90,
                    "rotationX": 0
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 17.6,
                    "y": 14.999999999999996,
                    "z": 18.000000000000014,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-4",
                    "rotationX": 90,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 11.999999999999998,
                    "y": 14.999999999999993,
                    "z": 24.00000000000002,
                    "rotationX": 90,
                    "color": "#808080",
                    "name": "club-spike-top"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 4,
                    "depth": 4,
                    "x": 0,
                    "y": 23.757142857142853,
                    "z": -3.5142857142857027,
                    "color": "#333333",
                    "name": "back-armor"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": 12,
                    "y": 40,
                    "z": 1.4857142857142973,
                    "color": "#796020",
                    "name": "shoulder-pad-right",
                    "rotationX": 90
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": -12,
                    "y": 40,
                    "z": 1.4857142857142973,
                    "color": "#796020",
                    "name": "shoulder-pad-left",
                    "rotationX": 90
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 26.757142857142853,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "torso",
                    "rotationY": 10
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 41.75714285714285,
                    "z": 1.4857142857143,
                    "color": "#5c6628",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 41.75714285714285,
                    "z": 7.485714285714296,
                    "color": "#686f20",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 38.257142857142846,
                    "z": 5.485714285714296,
                    "color": "#7d4023",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 43.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 43.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 43.75714285714285,
                    "z": 5.985714285714293,
                    "color": "#c5c5c5",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 43.75714285714285,
                    "z": 7.4857142857143,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 11.999999999999998,
                    "y": 27.75714285714285,
                    "z": 3,
                    "color": "#496a29",
                    "name": "arm-right",
                    "rotationX": -14
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -11.9,
                    "y": 27.75714285714285,
                    "z": 1.4857142857142973,
                    "color": "#496a29",
                    "name": "arm-left",
                    "rotationX": 16
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 11.999999999999998,
                    "y": 15.757142857142853,
                    "z": 6,
                    "color": "#496a29",
                    "name": "hand-right",
                    "rotationX": -14
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12.000000000000002,
                    "y": 16,
                    "z": -1.7,
                    "color": "#496a29",
                    "name": "hand-left",
                    "rotationX": 11
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 7.757142857142849,
                    "z": -1.3,
                    "color": "#496a29",
                    "name": "leg-right",
                    "rotationX": 16
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 7.757142857142849,
                    "z": 5,
                    "color": "#496a29",
                    "name": "leg-left",
                    "rotationY": 0,
                    "rotationX": -15
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 0.20000000000000018,
                    "z": -1.4,
                    "color": "#3B3B3B",
                    "name": "foot-right",
                    "rotationX": 16
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": -0.24285714285715443,
                    "z": 8.1,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": 6.499999999999998,
                    "y": 44.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 6,
                    "depth": 2,
                    "x": -6.5,
                    "y": 44.75714285714285,
                    "z": 0.4857142857142964,
                    "color": "#686b23",
                    "name": "ear-left"
                  },
                  {
                    "type": "cone",
                    "size": 16,
                    "height": 5,
                    "x": 0,
                    "y": 48.2,
                    "z": 1.4857142857142929,
                    "rotationX": 0,
                    "color": "#555555",
                    "name": "helmet"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": 4,
                    "y": 36.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-right"
                  },
                  {
                    "type": "box",
                    "width": 1.5,
                    "height": 3,
                    "depth": 0.7,
                    "x": -4,
                    "y": 36.75714285714285,
                    "z": 8.485714285714296,
                    "color": "#c5c5c5",
                    "name": "tusk-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 17.757142857142853,
                    "z": 1.4857142857142982,
                    "color": "#8B4513",
                    "name": "belt",
                    "rotationY": 10
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 9,
                    "depth": 3,
                    "x": 0,
                    "y": 40.75714285714285,
                    "z": -4.514285714285706,
                    "color": "#222222",
                    "name": "hair"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 30,
                    "x": 11.999999999999998,
                    "y": 12.999999999999996,
                    "z": 7.000000000000014,
                    "color": "#8B4513",
                    "name": "club-handle",
                    "rotationZ": 0,
                    "rotationX": 60
                  },
                  {
                    "type": "sphere",
                    "size": 9,
                    "x": 12.1,
                    "y": 20,
                    "z": 20,
                    "color": "#8B4513",
                    "name": "club-head"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 24.4,
                    "z": 18.000000000000014,
                    "rotationY": 90,
                    "color": "#808080",
                    "name": "club-spike-1",
                    "rotationX": -24
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 12.1,
                    "y": 15.2,
                    "z": 21.8,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-2",
                    "rotationX": 160
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 7.6,
                    "y": 20,
                    "z": 20,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-3",
                    "rotationZ": 90,
                    "rotationX": 0
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 16.700000000000003,
                    "y": 20,
                    "z": 20,
                    "rotationY": 0,
                    "color": "#808080",
                    "name": "club-spike-4",
                    "rotationX": 90,
                    "rotationZ": -90
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 5,
                    "x": 11.999999999999998,
                    "y": 22.3,
                    "z": 24.00000000000002,
                    "rotationX": 60,
                    "color": "#808080",
                    "name": "club-spike-top"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 4,
                    "depth": 4,
                    "x": 0,
                    "y": 21.757142857142853,
                    "z": -3.5142857142857027,
                    "color": "#333333",
                    "name": "back-armor"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": 12,
                    "y": 38,
                    "z": 0,
                    "color": "#796020",
                    "name": "shoulder-pad-right",
                    "rotationX": 75
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 7,
                    "depth": 2,
                    "x": -12,
                    "y": 38,
                    "z": 4,
                    "color": "#796020",
                    "name": "shoulder-pad-left",
                    "rotationX": 105
                  }
                ]
              }
            ]
          }
        },
        "armor": 100,
        "title": "Orc"
      },
      "viking": {
        "hp": 20,
        "value": 10,
        "essence": 15,
        "speed": 1,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 28.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 43.75,
                    "z": 1.48,
                    "color": "#e8c9a0",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 43.75,
                    "z": 7.48,
                    "color": "#E8C9A0",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 40.25,
                    "z": 5.48,
                    "color": "#ecb69b",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 45.75,
                    "z": 5.98,
                    "color": "#87CEFA",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 45.75,
                    "z": 7.48,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 45.75,
                    "z": 5.98,
                    "color": "#87CEFA",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 45.75,
                    "z": 7.48,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 12,
                    "y": 29.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12,
                    "y": 29.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 12,
                    "y": 17.75,
                    "z": 2.48,
                    "color": "#E8C9A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12,
                    "y": 17.75,
                    "z": 2.48,
                    "color": "#E8C9A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 9.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 9.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 1.75,
                    "z": 3.48,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 1.75,
                    "z": 3.48,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 19.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 12,
                    "depth": 3,
                    "x": 0,
                    "y": 40,
                    "z": 4.5,
                    "color": "#FFD700",
                    "name": "beard"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 8,
                    "depth": 8,
                    "x": 0,
                    "y": 51,
                    "z": 1.5,
                    "color": "#A0522D",
                    "name": "helmet-top"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 4.7,
                    "depth": 14.5,
                    "x": 0,
                    "y": 49.1,
                    "z": 1,
                    "color": "#A9A9A9",
                    "name": "helmet-band"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 2,
                    "x": 0,
                    "y": 45,
                    "z": -5,
                    "color": "#ffd700",
                    "name": "hair"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 2,
                    "x": 0,
                    "y": 28,
                    "z": -6,
                    "color": "#CD853F",
                    "name": "cape"
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": -12,
                    "y": 24,
                    "z": 1.5,
                    "color": "#A9A9A9",
                    "name": "bracelet-right",
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": 12,
                    "y": 24,
                    "z": 1.5,
                    "color": "#A9A9A9",
                    "name": "bracelet-left",
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 1,
                    "x": -12,
                    "y": 18,
                    "z": 9,
                    "color": "#cd853f",
                    "name": "shield-wood",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 2,
                    "x": -12,
                    "y": 18,
                    "z": 8,
                    "color": "#A9A9A9",
                    "name": "shield",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 35,
                    "x": 12,
                    "y": 18,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "axe-handle",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 14,
                    "depth": 12,
                    "x": 12,
                    "y": 18,
                    "z": 15,
                    "color": "#A9A9A9",
                    "name": "axe-head",
                    "rotationY": 0,
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 4,
                    "x": 12,
                    "y": 18,
                    "z": 21.5,
                    "rotationX": 90,
                    "color": "#A9A9A9",
                    "name": "axe-spike"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": 5,
                    "y": 58,
                    "z": 1.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-right",
                    "rotationZ": -30
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": -5,
                    "y": 58,
                    "z": 1.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-left",
                    "rotationZ": 30
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 28.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 43.75,
                    "z": 1.48,
                    "color": "#e8c9a0",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 43.75,
                    "z": 7.48,
                    "color": "#E8C9A0",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 40.25,
                    "z": 5.48,
                    "color": "#ecb69b",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 45.75,
                    "z": 5.98,
                    "color": "#87CEFA",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 45.75,
                    "z": 7.48,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 45.75,
                    "z": 5.98,
                    "color": "#87CEFA",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 45.75,
                    "z": 7.48,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 12,
                    "y": 29.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12,
                    "y": 29.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 12,
                    "y": 17.75,
                    "z": 2.48,
                    "color": "#E8C9A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12,
                    "y": 17.75,
                    "z": 2.48,
                    "color": "#E8C9A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 9.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 9.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 1.75,
                    "z": 3.48,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 1.75,
                    "z": 3.48,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 19.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 12,
                    "depth": 3,
                    "x": 0,
                    "y": 40,
                    "z": 4.5,
                    "color": "#FFD700",
                    "name": "beard"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 8,
                    "depth": 8,
                    "x": 0,
                    "y": 51,
                    "z": 1.5,
                    "color": "#A0522D",
                    "name": "helmet-top"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 4.7,
                    "depth": 14.5,
                    "x": 0,
                    "y": 49.1,
                    "z": 1,
                    "color": "#A9A9A9",
                    "name": "helmet-band"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 2,
                    "x": 0,
                    "y": 45,
                    "z": -5,
                    "color": "#ffd700",
                    "name": "hair"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 2,
                    "x": 0,
                    "y": 28,
                    "z": -6,
                    "color": "#CD853F",
                    "name": "cape"
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": -12,
                    "y": 24,
                    "z": 1.5,
                    "color": "#A9A9A9",
                    "name": "bracelet-right",
                    "rotationZ": 0,
                    "rotationX": null
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": 12,
                    "y": 24,
                    "z": 1.5,
                    "color": "#A9A9A9",
                    "name": "bracelet-left",
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 1,
                    "x": -12,
                    "y": 18,
                    "z": 9,
                    "color": "#cd853f",
                    "name": "shield-wood",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 2,
                    "x": -12,
                    "y": 18,
                    "z": 8,
                    "color": "#A9A9A9",
                    "name": "shield",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 35,
                    "x": 12,
                    "y": 18,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "axe-handle",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 14,
                    "depth": 12,
                    "x": 12,
                    "y": 18,
                    "z": 15,
                    "color": "#A9A9A9",
                    "name": "axe-head",
                    "rotationY": 0
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 4,
                    "x": 12,
                    "y": 18,
                    "z": 21.5,
                    "rotationX": 90,
                    "color": "#A9A9A9",
                    "name": "axe-spike"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": 5,
                    "y": 58,
                    "z": 1.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-right",
                    "rotationZ": -30
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": -5,
                    "y": 58,
                    "z": 1.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-left",
                    "rotationZ": 30
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 28.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 43.75,
                    "z": 5.48,
                    "color": "#e8c9a0",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 43.75,
                    "z": 11.48,
                    "color": "#E8C9A0",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 40.25,
                    "z": 9.48,
                    "color": "#ecb69b",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 45.75,
                    "z": 9.98,
                    "color": "#87CEFA",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 45.75,
                    "z": 11.48,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 45.75,
                    "z": 9.98,
                    "color": "#87CEFA",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 45.75,
                    "z": 11.48,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 12,
                    "y": 31.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "arm-left",
                    "rotationX": -20
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12,
                    "y": 31.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "arm-right",
                    "rotationX": 20
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 12,
                    "y": 24.75,
                    "z": 15.48,
                    "color": "#E8C9A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12,
                    "y": 24.75,
                    "z": 2,
                    "color": "#E8C9A0",
                    "name": "hand-right",
                    "rotationX": 105
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 9.75,
                    "z": 10,
                    "color": "#8B4513",
                    "name": "leg-left",
                    "rotationX": -15
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 12.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-right",
                    "rotationX": 5
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 2.75,
                    "z": 13,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 4.75,
                    "z": 2,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 19.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 12,
                    "depth": 3,
                    "x": 0,
                    "y": 40,
                    "z": 8.5,
                    "color": "#FFD700",
                    "name": "beard"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 8,
                    "depth": 8,
                    "x": 0,
                    "y": 51,
                    "z": 5.5,
                    "color": "#A0522D",
                    "name": "helmet-top"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 4.7,
                    "depth": 14.5,
                    "x": 0,
                    "y": 49.1,
                    "z": 5,
                    "color": "#A9A9A9",
                    "name": "helmet-band"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 2,
                    "x": 0,
                    "y": 45,
                    "z": -1,
                    "color": "#ffd700",
                    "name": "hair"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 2,
                    "x": 0,
                    "y": 28,
                    "z": -1,
                    "color": "#CD853F",
                    "name": "cape",
                    "rotationX": -10
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": -12,
                    "y": 30,
                    "z": 5,
                    "color": "#A9A9A9",
                    "name": "bracelet-right",
                    "rotationZ": 0,
                    "rotationX": 20
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": 12,
                    "y": 30,
                    "z": 6,
                    "color": "#A9A9A9",
                    "name": "bracelet-left",
                    "rotationZ": 0,
                    "rotationX": -20
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 1,
                    "x": -14,
                    "y": 25,
                    "z": 8,
                    "color": "#cd853f",
                    "name": "shield-wood",
                    "rotationZ": 30,
                    "rotationX": 110,
                    "rotationY": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 2,
                    "x": -14,
                    "y": 25,
                    "z": 7,
                    "color": "#A9A9A9",
                    "name": "shield",
                    "rotationZ": 30,
                    "rotationX": 110
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 35,
                    "x": 12,
                    "y": 25,
                    "z": 15.48,
                    "color": "#8B4513",
                    "name": "axe-handle",
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 14,
                    "depth": 12,
                    "x": 12,
                    "y": 38,
                    "z": 15.5,
                    "color": "#A9A9A9",
                    "name": "axe-head",
                    "rotationX": 90
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 4,
                    "x": 12,
                    "y": 46,
                    "z": 15.5,
                    "rotationY": 90,
                    "color": "#A9A9A9",
                    "name": "axe-spike"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": 5,
                    "y": 58,
                    "z": 5.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-right",
                    "rotationZ": -30
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": -5,
                    "y": 58,
                    "z": 5.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-left",
                    "rotationZ": 30
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 28.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 43.75,
                    "z": 1.48,
                    "color": "#e8c9a0",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 43.75,
                    "z": 7.48,
                    "color": "#E8C9A0",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 40.25,
                    "z": 5.48,
                    "color": "#ecb69b",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 45.75,
                    "z": 5.98,
                    "color": "#87CEFA",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 45.75,
                    "z": 7.48,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 45.75,
                    "z": 5.98,
                    "color": "#87CEFA",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 45.75,
                    "z": 7.48,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 12,
                    "y": 29.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "arm-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12,
                    "y": 29.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "arm-left"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 12,
                    "y": 17.75,
                    "z": 2.48,
                    "color": "#E8C9A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12,
                    "y": 17.75,
                    "z": 2.48,
                    "color": "#E8C9A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 9.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-right"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 9.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-left"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 1.75,
                    "z": 3.48,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 1.75,
                    "z": 3.48,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 19.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 12,
                    "depth": 3,
                    "x": 0,
                    "y": 40,
                    "z": 4.5,
                    "color": "#FFD700",
                    "name": "beard"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 8,
                    "depth": 8,
                    "x": 0,
                    "y": 51,
                    "z": 1.5,
                    "color": "#A0522D",
                    "name": "helmet-top"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 4.7,
                    "depth": 14.5,
                    "x": 0,
                    "y": 49.1,
                    "z": 1,
                    "color": "#A9A9A9",
                    "name": "helmet-band"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 2,
                    "x": 0,
                    "y": 45,
                    "z": -5,
                    "color": "#ffd700",
                    "name": "hair"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 2,
                    "x": 0,
                    "y": 28,
                    "z": -6,
                    "color": "#CD853F",
                    "name": "cape"
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": -12,
                    "y": 24,
                    "z": 1.5,
                    "color": "#A9A9A9",
                    "name": "bracelet-right",
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": 12,
                    "y": 24,
                    "z": 1.5,
                    "color": "#A9A9A9",
                    "name": "bracelet-left",
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 1,
                    "x": -12,
                    "y": 18,
                    "z": 9,
                    "color": "#cd853f",
                    "name": "shield-wood",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 2,
                    "x": -12,
                    "y": 18,
                    "z": 8,
                    "color": "#A9A9A9",
                    "name": "shield",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 35,
                    "x": 12,
                    "y": 18,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "axe-handle",
                    "rotationZ": 0,
                    "rotationX": 90
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 14,
                    "depth": 12,
                    "x": 12,
                    "y": 18,
                    "z": 15,
                    "color": "#A9A9A9",
                    "name": "axe-head",
                    "rotationY": 0
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 4,
                    "x": 12,
                    "y": 18,
                    "z": 21.5,
                    "rotationX": 90,
                    "color": "#A9A9A9",
                    "name": "axe-spike"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": 5,
                    "y": 58,
                    "z": 1.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-right",
                    "rotationZ": -30
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": -5,
                    "y": 58,
                    "z": 1.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-left",
                    "rotationZ": 30
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 14,
                    "height": 18,
                    "depth": 10,
                    "x": 0,
                    "y": 27.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 15,
                    "x": 0,
                    "y": 42.75,
                    "z": 5.48,
                    "color": "#e8c9a0",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 4,
                    "depth": 6,
                    "x": 0,
                    "y": 42.75,
                    "z": 11.48,
                    "color": "#E8C9A0",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 3,
                    "depth": 6,
                    "x": 0,
                    "y": 39.25,
                    "z": 9.48,
                    "color": "#ecb69b",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": 4.5,
                    "y": 44.75,
                    "z": 9.98,
                    "color": "#87CEFA",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 5,
                    "y": 44.75,
                    "z": 11.48,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "sphere",
                    "size": 4,
                    "x": -4.5,
                    "y": 44.75,
                    "z": 9.98,
                    "color": "#87CEFA",
                    "name": "eye-left"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -5,
                    "y": 44.75,
                    "z": 11.48,
                    "color": "#000000",
                    "name": "pupil-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": 12,
                    "y": 28.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "arm-right",
                    "rotationX": 20
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 20,
                    "depth": 6,
                    "x": -12,
                    "y": 28.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "arm-left",
                    "rotationX": -20
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": 12,
                    "y": 20.75,
                    "z": -4.52,
                    "color": "#E8C9A0",
                    "name": "hand-right"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 5,
                    "depth": 7,
                    "x": -12,
                    "y": 20.75,
                    "z": 15,
                    "color": "#E8C9A0",
                    "name": "hand-left"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": 4,
                    "y": 12.75,
                    "z": 1.48,
                    "color": "#8B4513",
                    "name": "leg-right",
                    "rotationX": 5
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 15,
                    "depth": 6,
                    "x": -4,
                    "y": 9.75,
                    "z": 10,
                    "color": "#8B4513",
                    "name": "leg-left",
                    "rotationX": -15
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": 4,
                    "y": 4.75,
                    "z": 1.48,
                    "color": "#3B3B3B",
                    "name": "foot-right"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 3,
                    "depth": 10,
                    "x": -4,
                    "y": 2.75,
                    "z": 13,
                    "color": "#3B3B3B",
                    "name": "foot-left"
                  },
                  {
                    "type": "box",
                    "width": 15,
                    "height": 3,
                    "depth": 11,
                    "x": 0,
                    "y": 18.75,
                    "z": 5.48,
                    "color": "#8B4513",
                    "name": "belt"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 12,
                    "depth": 3,
                    "x": 0,
                    "y": 39,
                    "z": 8.5,
                    "color": "#FFD700",
                    "name": "beard"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 8,
                    "depth": 8,
                    "x": 0,
                    "y": 50,
                    "z": 5.5,
                    "color": "#A0522D",
                    "name": "helmet-top"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 4.7,
                    "depth": 14.5,
                    "x": 0,
                    "y": 48.1,
                    "z": 5,
                    "color": "#A9A9A9",
                    "name": "helmet-band"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 2,
                    "x": 0,
                    "y": 44,
                    "z": -1,
                    "color": "#ffd700",
                    "name": "hair"
                  },
                  {
                    "type": "box",
                    "width": 16,
                    "height": 20,
                    "depth": 2,
                    "x": 0,
                    "y": 27,
                    "z": -1,
                    "color": "#CD853F",
                    "name": "cape",
                    "rotationX": -10
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": -12,
                    "y": 24,
                    "z": 7,
                    "color": "#A9A9A9",
                    "name": "bracelet-right",
                    "rotationZ": 0,
                    "rotationX": -20
                  },
                  {
                    "type": "cylinder",
                    "size": 9,
                    "height": 5,
                    "x": 12,
                    "y": 24,
                    "z": 4,
                    "color": "#A9A9A9",
                    "name": "bracelet-left",
                    "rotationZ": 0,
                    "rotationX": 15
                  },
                  {
                    "type": "cylinder",
                    "size": 12,
                    "height": 1,
                    "x": -12,
                    "y": 21,
                    "z": 19,
                    "color": "#cd853f",
                    "name": "shield-wood",
                    "rotationZ": 0,
                    "rotationX": 75
                  },
                  {
                    "type": "cylinder",
                    "size": 16,
                    "height": 2,
                    "x": -12,
                    "y": 21,
                    "z": 17.48,
                    "color": "#A9A9A9",
                    "name": "shield",
                    "rotationZ": 0,
                    "rotationX": 75
                  },
                  {
                    "type": "cylinder",
                    "size": 2,
                    "height": 35,
                    "x": 12,
                    "y": 21,
                    "z": -4.52,
                    "color": "#8B4513",
                    "name": "axe-handle",
                    "rotationZ": 0,
                    "rotationX": 0
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 12,
                    "depth": 14,
                    "x": 12,
                    "y": 10,
                    "z": -4.5,
                    "color": "#A9A9A9",
                    "name": "axe-head",
                    "rotationX": 0
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 4,
                    "x": 12,
                    "y": 2,
                    "z": -5,
                    "rotationY": 0,
                    "color": "#A9A9A9",
                    "name": "axe-spike",
                    "rotationX": 180
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": 5,
                    "y": 57,
                    "z": 5.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-right",
                    "rotationZ": -30
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 10,
                    "x": -5,
                    "y": 57,
                    "z": 5.5,
                    "rotationX": 0,
                    "color": "#858585",
                    "name": "helmet-horn-left",
                    "rotationZ": 30
                  }
                ]
              }
            ]
          }
        },
        "coldResistance": 75,
        "title": "Viking"
      },
      "blueDragon": {
        "hp": 500,
        "speed": 0.5,
        "essence": 50,
        "value": 50,
        "boss": true,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 16,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 26,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 36,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 38,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 10,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 6,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 4,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 42,
                    "z": 34,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 36,
                    "z": 40,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 38,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -16,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -16,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 1,
                    "z": 0,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": 0,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -16,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 2,
                    "z": -16,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 32,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 30,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 18,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 12,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 19,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 29,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 39,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 41,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 1.5,
                    "y": 12,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": 5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 3,
                    "y": 8,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": 8,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 4,
                    "y": 6,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": 10,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 45,
                    "z": 34,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 39,
                    "z": 40,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 33,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 1.5,
                    "y": 20,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": 5,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 3,
                    "y": 14,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": 8,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 21,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 31,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 41,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 43,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": -1.5,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": -3,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": -8,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": -4,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": -10,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 47,
                    "z": 34,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 41,
                    "z": 40,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 43,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 14,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 10,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 3,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 9,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 37,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": -1.5,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": -5,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": -3,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": -8,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 26,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 26,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#00008b"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#00008b"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#00008b"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#2A2AA5"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2A2AA5",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2A2AA5",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2A2AA5",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ]
          }
        },
        "fireResistance": 25,
        "coldResistance": 75,
        "electricResistance": 25,
        "title": "Blue Dragon"
      },
      "greenDragon": {
        "hp": 500,
        "speed": 0.5,
        "essence": 50,
        "value": 50,
        "boss": true,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 16,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 26,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 36,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 38,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 10,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 6,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 4,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 42,
                    "z": 34,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 36,
                    "z": 40,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 38,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -16,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -16,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 1,
                    "z": 0,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": 0,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -16,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 2,
                    "z": -16,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 32,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 30,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 18,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 12,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 19,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 29,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 39,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 41,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 1.5,
                    "y": 12,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": 5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 3,
                    "y": 8,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": 8,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 4,
                    "y": 6,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": 10,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 45,
                    "z": 34,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 39,
                    "z": 40,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 33,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 1.5,
                    "y": 20,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": 5,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 3,
                    "y": 14,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": 8,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 21,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 31,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 41,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 43,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": -1.5,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": -3,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": -8,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": -4,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": -10,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 47,
                    "z": 34,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 41,
                    "z": 40,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 43,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 14,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 10,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 3,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 9,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 37,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": -1.5,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": -5,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": -3,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": -8,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 26,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 26,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#008b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#008b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#008b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#2AA52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#2AA52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#2AA52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#2AA52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ]
          }
        },
        "fireResistance": 50,
        "coldResistance": 50,
        "electricResistance": 50,
        "title": "Green Dragon"
      },
      "redDragon": {
        "hp": 500,
        "speed": 0.5,
        "essence": 50,
        "value": 50,
        "boss": true,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 16,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 26,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 36,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 38,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 10,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 6,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 4,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 42,
                    "z": 34,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 36,
                    "z": 40,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 38,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -16,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -16,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 1,
                    "z": 0,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": 0,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -16,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 2,
                    "z": -16,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 32,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 30,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 18,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 12,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 19,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 29,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 39,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 41,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 1.5,
                    "y": 12,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": 5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 3,
                    "y": 8,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": 8,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 4,
                    "y": 6,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": 10,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 45,
                    "z": 34,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 39,
                    "z": 40,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 33,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 1.5,
                    "y": 20,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": 5,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 3,
                    "y": 14,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": 8,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 21,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 31,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 41,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 43,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": -1.5,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": -3,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": -8,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": -4,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": -10,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 47,
                    "z": 34,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 41,
                    "z": 40,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 43,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 14,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 10,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 3,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 9,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 37,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": -1.5,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": -5,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": -3,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": -8,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 26,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 26,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#8b0000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#8b0000"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#8b0000"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#A52A2A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A52A2A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A52A2A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A52A2A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ]
          }
        },
        "fireResistance": 75,
        "coldResistance": 25,
        "electricResistance": 25,
        "title": "Red Dragon"
      },
      "yellowDragon": {
        "hp": 500,
        "speed": 0.5,
        "essence": 50,
        "value": 50,
        "boss": true,
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 16,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 26,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 36,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 38,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 10,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 6,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 4,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 22,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 42,
                    "z": 34,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 44,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 44,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 36,
                    "z": 40,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 38,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 36,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": 0,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": 0,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -16,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -16,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 1,
                    "z": 0,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": 0,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -16,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 2,
                    "z": -16,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 32,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 30,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 18,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 12,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ],
            "walk": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 19,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 29,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 39,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 41,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 1.5,
                    "y": 12,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": 5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 3,
                    "y": 8,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": 8,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 4,
                    "y": 6,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": 10,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 25,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 45,
                    "z": 34,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 47,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 47,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 39,
                    "z": 40,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 39,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 8,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 8,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 1,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 2,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 33,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 1.5,
                    "y": 20,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": 5,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 3,
                    "y": 14,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": 8,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 24,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 19,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 19,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 24,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 21,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 31,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 41,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 43,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": -1.5,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "rotationZ": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": -3,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "rotationZ": -8,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": -4,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "rotationZ": -10,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 27,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 47,
                    "z": 34,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 49,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 49,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 41,
                    "z": 40,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 43,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 41,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 10,
                    "z": -10,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 12,
                    "z": 5,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 14,
                    "z": -11,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 10,
                    "z": -21,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 3,
                    "z": -14,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": 10,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 9,
                    "z": -6,
                    "rotationX": 20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -25,
                    "rotationX": -30,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 37,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 35,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": -1.5,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "rotationZ": -5,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": -3,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "rotationZ": -8,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 26,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12.5,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 26,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 18,
                    "height": 10,
                    "depth": 28,
                    "x": 0,
                    "y": 20.5,
                    "z": -6.4,
                    "rotationX": -19,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 8,
                    "depth": 20,
                    "x": 0,
                    "y": 30.5,
                    "z": 18,
                    "rotationX": -10,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 40.5,
                    "z": 30,
                    "rotationX": -20,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 10,
                    "height": 20,
                    "x": 0,
                    "y": 42.5,
                    "z": 42,
                    "rotationX": 90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 6,
                    "depth": 16,
                    "x": 0,
                    "y": 14,
                    "z": -24,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 4,
                    "depth": 20,
                    "x": 0,
                    "y": 10,
                    "z": -42,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 12,
                    "x": 0,
                    "y": 8,
                    "z": -54,
                    "rotationX": -90,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 22,
                    "height": 10,
                    "depth": 18,
                    "x": 0,
                    "y": 26.5,
                    "z": 0,
                    "rotationX": -14,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 8,
                    "x": 0,
                    "y": 46.5,
                    "z": 34,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": -4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": -4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "sphere",
                    "size": 3,
                    "x": 4,
                    "y": 48.5,
                    "z": 36,
                    "color": "#FFFF00"
                  },
                  {
                    "type": "sphere",
                    "size": 1.5,
                    "x": 4,
                    "y": 48.5,
                    "z": 37,
                    "color": "#000000"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 10,
                    "x": 0,
                    "y": 40.5,
                    "z": 40,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 42.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": -2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 0,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 40.5,
                    "z": 46,
                    "color": "#FFFFFF"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 11,
                    "z": 0,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": 10,
                    "y": 11,
                    "z": -16,
                    "rotationX": -15,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 12,
                    "depth": 5,
                    "x": -10,
                    "y": 13,
                    "z": -16,
                    "rotationX": 5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 4,
                    "z": -1,
                    "rotationX": -5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": 10,
                    "y": 5,
                    "z": -18,
                    "rotationX": -15,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "box",
                    "width": 7,
                    "height": 2,
                    "depth": 7,
                    "x": -10,
                    "y": 7,
                    "z": -14,
                    "rotationX": 5,
                    "color": "#8b8b00"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 36.5,
                    "z": 10,
                    "rotationX": -20,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 6,
                    "height": 10,
                    "x": 0,
                    "y": 34.5,
                    "z": -8,
                    "rotationX": -32,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 5,
                    "height": 8,
                    "x": 0,
                    "y": 22,
                    "z": -24,
                    "rotationX": -75,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "cone",
                    "size": 4,
                    "height": 6,
                    "x": 0,
                    "y": 16,
                    "z": -38,
                    "rotationX": -75,
                    "color": "#A5a52A"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": 18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": -30,
                    "rotationZ": 12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-left-0"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": -40,
                    "y": 12,
                    "z": -25,
                    "rotationY": 15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-right-2"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": 30,
                    "y": 20,
                    "z": -15,
                    "rotationY": 15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-left-1"
                  },
                  {
                    "type": "box",
                    "width": 18,
                    "height": 1,
                    "depth": 24,
                    "x": -30,
                    "y": 20,
                    "z": -15,
                    "rotationY": -15,
                    "rotationZ": 15,
                    "color": "#A5a52A",
                    "rotationX": -15,
                    "name": "wing-right-1"
                  },
                  {
                    "type": "box",
                    "width": 6,
                    "height": 1,
                    "depth": 20,
                    "x": 40,
                    "y": 12,
                    "z": -25,
                    "rotationY": -15,
                    "rotationZ": -15,
                    "color": "#A5a52A",
                    "rotationX": -25,
                    "name": "wing-left-2"
                  },
                  {
                    "type": "box",
                    "width": 20,
                    "height": 1,
                    "depth": 28,
                    "x": -18,
                    "y": 25.5,
                    "z": -4,
                    "rotationY": 30,
                    "rotationZ": -12,
                    "color": "#A5a52A",
                    "rotationX": -5,
                    "name": "wing-right-0"
                  }
                ]
              }
            ]
          }
        },
        "fireResistance": 25,
        "coldResistance": 25,
        "electricResistance": 75,
        "title": "Yellow Dragon"
      },
      "pirate": {
        "title": "Pirate",
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "box",
                    "width": 12,
                    "height": 16,
                    "depth": 7,
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "color": "#2F1A4A",
                    "name": "torso"
                  },
                  {
                    "type": "sphere",
                    "size": 10,
                    "x": 0,
                    "y": 35,
                    "z": 0,
                    "color": "#E8C9A0",
                    "name": "head"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 2,
                    "depth": 4,
                    "x": 0,
                    "y": 35,
                    "z": 4,
                    "color": "#E8C9A0",
                    "name": "nose"
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 2,
                    "depth": 4,
                    "x": 0,
                    "y": 32,
                    "z": 3,
                    "color": "#ECB69B",
                    "name": "jaw"
                  },
                  {
                    "type": "sphere",
                    "size": 2,
                    "x": -3,
                    "y": 36,
                    "z": 4,
                    "color": "#87CEFA",
                    "name": "eye-right"
                  },
                  {
                    "type": "sphere",
                    "size": 1,
                    "x": -3.5,
                    "y": 36,
                    "z": 4.5,
                    "color": "#000000",
                    "name": "pupil-right"
                  },
                  {
                    "type": "box",
                    "width": 3,
                    "height": 2,
                    "depth": 1,
                    "x": 2,
                    "y": 36,
                    "z": 5,
                    "color": "#000000",
                    "name": "eyepatch-left"
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 12,
                    "depth": 4,
                    "x": -8,
                    "y": 24,
                    "z": 0,
                    "color": "#2F1A4A",
                    "name": "arm-right",
                    "rotationZ": -15
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 12,
                    "depth": 4,
                    "x": 8,
                    "y": 24,
                    "z": 0,
                    "color": "#2F1A4A",
                    "name": "arm-left",
                    "rotationZ": 15
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 3,
                    "depth": 5,
                    "x": -8,
                    "y": 16,
                    "z": 1,
                    "color": "#E8C9A0",
                    "name": "hand-right",
                    "rotationX": 90
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 4,
                    "depth": 2,
                    "x": 8,
                    "y": 16,
                    "z": 1,
                    "color": "#C0C0C0",
                    "name": "hook-left",
                    "rotationZ": -45
                  },
                  {
                    "type": "box",
                    "width": 4,
                    "height": 12,
                    "depth": 4,
                    "x": -3,
                    "y": 8,
                    "z": 0,
                    "color": "#3B3B3B",
                    "name": "leg-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 3,
                    "height": 13,
                    "x": 3,
                    "y": 7.5,
                    "z": 0,
                    "color": "#8B4513",
                    "name": "peg-leg-left"
                  },
                  {
                    "type": "box",
                    "width": 5,
                    "height": 2,
                    "depth": 6,
                    "x": -3,
                    "y": 2,
                    "z": 2,
                    "color": "#3B3B3B",
                    "name": "boot-right"
                  },
                  {
                    "type": "cylinder",
                    "size": 4,
                    "height": 2,
                    "x": 3,
                    "y": 2,
                    "z": 2,
                    "color": "#8B4513",
                    "name": "peg-foot-left"
                  },
                  {
                    "type": "box",
                    "width": 11,
                    "height": 10,
                    "depth": 8,
                    "x": 0,
                    "y": 15,
                    "z": 0,
                    "color": "#FF0000",
                    "name": "pants"
                  },
                  {
                    "type": "box",
                    "width": 12,
                    "height": 8,
                    "depth": 2,
                    "x": 0,
                    "y": 32,
                    "z": 3,
                    "color": "#000000",
                    "name": "beard"
                  },
                  {
                    "type": "box",
                    "width": 14,
                    "height": 6,
                    "depth": 10,
                    "x": 0,
                    "y": 40,
                    "z": 0,
                    "color": "#000000",
                    "name": "hat"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 4,
                    "depth": 2,
                    "x": -9,
                    "y": 14,
                    "z": 1,
                    "color": "#8B4513",
                    "name": "sword-handle",
                    "rotationZ": 0,
                    "rotationX": -45
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2.2,
                    "depth": 6,
                    "x": -9,
                    "y": 13,
                    "z": 2,
                    "color": "#C0C0C0",
                    "name": "sword-guard",
                    "rotationZ": 45,
                    "rotationX": 0,
                    "rotationY": 90
                  },
                  {
                    "type": "box",
                    "width": 1,
                    "height": 1,
                    "depth": 18,
                    "x": -9,
                    "y": 8,
                    "z": 7,
                    "color": "#C0C0C0",
                    "name": "sword-blade",
                    "rotationZ": 45,
                    "rotationX": 45
                  },
                  {
                    "type": "box",
                    "width": 8,
                    "height": 2,
                    "depth": 10,
                    "x": 0,
                    "y": 16,
                    "z": 0,
                    "color": "#FFD700",
                    "name": "sash"
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 2,
                    "x": -2,
                    "y": 43,
                    "z": 0,
                    "color": "#FF0000",
                    "name": "hat-feather-right",
                    "rotationZ": 45
                  },
                  {
                    "type": "box",
                    "width": 2,
                    "height": 2,
                    "depth": 2,
                    "x": 2,
                    "y": 43,
                    "z": 0,
                    "color": "#FF0000",
                    "name": "hat-feather-left",
                    "rotationZ": -45
                  }
                ]
              }
            ]
          }
        }
      },
      "spike_ball": {
        "hp": 50,
        "speed": 0.5,
        "value": 10,
        "essence": 15,
        "render": {
          "animations": {
            "walk": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 26,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 26,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              }
            ],
            "idle": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 24,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 24,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 26,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#800000",
                    "x": 0,
                    "y": 26,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "core"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": -12,
                    "rotationX": 90,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "name": "spike-1"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-2"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 120,
                    "name": "spike-3"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": -6,
                    "rotationX": -90,
                    "rotationY": null,
                    "rotationZ": 60,
                    "name": "spike-4"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": -10.392,
                    "y": 26,
                    "z": 6,
                    "rotationX": 90,
                    "rotationY": null,
                    "rotationZ": 240,
                    "name": "spike-5"
                  },
                  {
                    "type": "cylinder",
                    "size": 2.4,
                    "height": 4.8,
                    "color": "#663300",
                    "x": 0,
                    "y": 26,
                    "z": 12,
                    "rotationX": 90,
                    "rotationY": 300,
                    "rotationZ": 0,
                    "name": "spike-6"
                  }
                ]
              }
            ]
          }
        },
        "title": "spike_ball",
        "description": "A rolling spike ball monster with spinning spikes",
        "id": "spike_ball"
      }
    },
    "environment": {
      "tree": {
        "title": "Tree",
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "cylinder",
                    "size": 10,
                    "color": "#733f17",
                    "x": 0,
                    "y": 10.625,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 20
                  },
                  {
                    "type": "cone",
                    "size": 40,
                    "color": "#018314",
                    "x": 0,
                    "y": 50.625,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 60
                  },
                  {
                    "type": "cone",
                    "size": 35,
                    "color": "#018314",
                    "x": 0,
                    "y": 60.625,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 40
                  },
                  {
                    "type": "cone",
                    "size": 15,
                    "color": "#018314",
                    "x": 0,
                    "y": 75.625,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "height": 15
                  }
                ]
              }
            ]
          }
        }
      },
      "rock": {
        "title": "Rock",
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": [
                  {
                    "type": "tetrahedron",
                    "size": 16,
                    "color": "#666666",
                    "x": 3.5,
                    "y": 2,
                    "z": 2.5,
                    "rotationX": 50,
                    "rotationY": 140,
                    "rotationZ": 10
                  },
                  {
                    "type": "tetrahedron",
                    "size": 12,
                    "color": "#5b5b5b",
                    "x": 10.5,
                    "y": 2,
                    "z": 7.5,
                    "rotationX": 50,
                    "rotationY": 150,
                    "rotationZ": 10
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "upgrades": {
      "sentryFrenzy": {
        "desc": "+5% Attack Speed",
        "value": 0.95
      },
      "sentryIntelligence": {
        "desc": "+15% Damage and +10% Range",
        "damage": 1.15,
        "range": 1.1
      },
      "dematerializeSentry": {
        "desc": "Heal 0.5% Core HP per hit",
        "leech": 0.005
      },
      "necroSummon": {
        "desc": "10% chance to raise a skeleton when killing an enemy",
        "summonChance": 1.1
      },
      "necroMastery": {
        "desc": "+20% Range and projectiles pierce one additional enemy",
        "range": 1.2,
        "piercing": 1
      },
      "shadowPierce": {
        "desc": "Projectiles pierce 2 additional enemies",
        "piercing": 2
      },
      "overCharge": {
        "desc": "+30% Range",
        "range": 1.3
      },
      "shadowCrit": {
        "desc": "+10% Critical Chance",
        "critChance": 0.1
      },
      "pyreBurn": {
        "desc": "+50% Burn Damage",
        "burnDamage": 1
      },
      "pyreBlaze": {
        "desc": "+20% Damage and +10% Attack Speed",
        "damage": 1.2,
        "attackSpeed": 1.1
      },
      "pyreSoul": {
        "desc": "+10% splash radius",
        "splashRadius": 1.1
      },
      "mistSlow": {
        "desc": "Slow effect increased by 20%",
        "slowEffect": 0.8
      },
      "mistSpread": {
        "desc": "+25% Range and +1 Piercing",
        "range": 1.25,
        "piercing": 1
      },
      "bloodEff": {
        "desc": "Towers cost 15% less Blood Shards",
        "value": 0.85
      },
      "bloodCore": {
        "desc": "Increase max Core HP by 20% and heal 30 HP",
        "maxHpMultiplier": 1.2,
        "healAmount": 30
      },
      "bloodHarvest": {
        "desc": "Gain 25% more Blood Shards from enemies",
        "value": 1.25
      },
      "essenceExtraction": {
        "desc": "Gain 25% more Essence from enemies",
        "value": 1.25
      },
      "bloodFrenzy": {
        "desc": "All towers deal 20% more damage",
        "damageMultiplier": 1.2
      },
      "bloodRegeneration": {
        "desc": "All healing effects are 25% more effective",
        "healingMultiplier": 1.25
      },
      "essenceOverflow": {
        "desc": "Gain 10% more Essence when above 50% Core HP",
        "value": 1.1
      },
      "darkResilience": {
        "desc": "Towers take 20% less damage from enemy abilities",
        "towerDamageReduction": 0.8
      }
    },
    "effects": {
      "slow": {
        "id": "slow",
        "title": "Slow",
        "desc": "Target is slowed",
        "stat": "speed",
        "lifeTime": 100
      },
      "weaken": {
        "id": "weaken",
        "title": "Weakened",
        "desc": "Target's armor is reduced",
        "stat": "armor",
        "lifeTime": 100
      }
    },
    "waves": {
      "wave1": {
        "title": "Wave 1",
        "enemies": [
          "zombie",
          "zombie",
          "zombie",
          "zombie",
          "zombie",
          "zombie",
          "zombie",
          "zombie",
          "zombie"
        ]
      },
      "wave2": {
        "title": "Wave 2",
        "enemies": [
          "skeleton",
          "skeleton",
          "skeleton",
          "skeleton",
          "skeleton",
          "skeleton",
          "skeleton",
          "skeleton"
        ]
      },
      "swarm": {
        "title": "swarm",
        "enemies": [
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex",
          "trex"
        ],
        "spawnRateMultiplier": 2
      }
    },
    "levels": {
      "level1": {
        "title": "Level 1",
        "wavesets": [
          "level1_start1",
          "level1_start2"
        ],
        "tileMap": {
          "size": 16,
          "terrainTypes": [
            {
              "type": "water",
              "color": "#2d85c6",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "rock",
              "color": "#9e9e9e",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEAIf9RHEX0vjVAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2OcN2/efwYqgqSkJEZk4xipbQHIcGRLaGIBsiU0swBmCU0tAFkyagHBBD4aRKNBRDAECCoYTUWjQUQwBAgqGE1FAx9EAECFSQ0HGbi8AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DMPAgnnz5v2nZTAxjlpAKHhHg4hQCDGMBtFoEBEMAYIKRlPRaBARDAGCCmieigCFBDkNArgMlAAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASElEQVRIS2NkoDFgpLH5DMPAgnnz5v2nRjAlJSVhDQ1GalkAciQ2S6hqATZLRi3ASB/o8TAaRKNBRHohMpqKCIbZaBCNwCACAOcCUBnjhUZTAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEAIf9RHEX0vjVAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDB0E5FSUlJjDTzAchwUPjRxAKY4TSxANlwkAUAUEhJDYCk3yoAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAQElEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFAB7VMRQSdQqICRQv0EtQ99CwDb3jkNHe23xQAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2OcN2/efwYqgqSkJEZk4xhHLUAP3dEgIpjeRoNoNIgIhgBBBaOpaDSICIYAXgXoKQikmGo1GjbDwRZQ5mbCukctIBhGAC4oUBlpvrH3AAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "grass",
              "color": "#4a7c59",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgAnCQy6fQdcSIAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAATklEQVRIS2P0qon8z0AlsK1lOSO6UYxDygKQ69F9QVUfwIIH2RKaWIDsE5pZAPPNqAUEc9BoEI0GEcEQIKhgNBWNBhHBECCoYDQVEQwiAA75PFN7PN69AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DKMWEAxhRq+ayP8EVVGgYNQCgoE3GkSjQUQwBAgqGE1Fo0FEMAQIKhhNRQSDCAB4BShTjqMEpwAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2NkoDFgpLH5DKMWEAxhRq+ayP8EVRFQsK1lOc6gpooFIPtxWUI1C3BZMmoBSvRji4fRIBoNItIKkdFURDC8RoNocAYRADzPTBkQkiUcAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgAnCQy6fQdcSIAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCqgWSra1rKcEWQ7TSyAGU4TC5ANp7oF6IbTxQIARN88U7u38m0AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCpgJKiCQgWjFhAMQJoHEQCyWyhTURksDgAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P0qon8z0AlsK1lOSO6UYyjFiAHyWgQEUxro0E0GkQEQ4CggtFUNMyDCFsEg7xMlQoHl+FgCwgGLIUKRi0gGIA0DyIAQT9MGVwsaTUAAAAASUVORK5CYII="
              ],
              "buildable": true
            },
            {
              "type": "forest",
              "color": "#1c6438",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgA71YpQQB/w8QAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAATklEQVRIS2OUSbH4z0Al8GTOCUZ0oxiHlAUg16P7gqo+gAUPsiU0sQDZJzSzAOabUQsI5qDRIBoNIoIhQFDBaCoaDSKCIUBQwWgqIhhEAIHMNK76+kj9AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DKMWEAxhRpkUi/8EVVGgYNQCgoE3GkSjQUQwBAgqGE1Fo0FEMAQIKhhNRQSDCACNcyCuKmmRrQAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2NkoDFgpLH5DKMWEAxhRpkUi/8EVRFQ8GTOCZxBTRULQPbjsoRqFuCyZNQClOjHFg+jQTQaRKQVIqOpiGB4jQbR4AwiAPx6TBmX9XIXAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgA71YpQQB/w8QAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCqgWSp6MucEI8h2mlgAM5wmFiAbTnUL0A2niwUAO0c0rkd3ClIAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCpgJKiCQgWjFhAMQJoHEQBLXiCu2Bx7HwAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2OUSbH4z0Al8GTOCUZ0oxhHLUAOktEgIpjWRoNoNIgIhgBBBaOpaJgHEbYIBnmZKhUOLsPBFhAMWAoVjFpAMABpHkQAAPlMGX+pQM0AAAAASUVORK5CYII="
              ],
              "buildable": true
            },
            {
              "type": "path",
              "color": "#f5d69a",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEADJ7UXnV1RQ5AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAATklEQVRIS2P8em3WfwYqAW6tNEZ0oxiHlAUg16P7gqo+gAUPsiU0sQDZJzSzAOabUQsI5qDRIBoNIoIhQFDBaCoaDSKCIUBQwWgqIhhEAJvSVIWbYGLaAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DKMWEAxhxq/XZv0nqIoCBaMWEAy80SAaDSKCIUBQwWgqGg0igiFAUMFoKiIYRAACV0CFxNTeCQAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2NkoDFgpLH5DKMWEAxhxq/XZv0nqIqAAm6tNJxBTRULQPbjsoRqFuCyZNQClOjHFg+jQTQaRKQVIqOpiGB4jQbR4AwiAFzITBnELKoVAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEADJ7UXnV1RQ5AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFABzVIRt1YaI8h2mlgAM5wmFiAbTnUL0A2niwUAqyRUhRUUb34AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFABI0EVFCoYtYBgANI8iAAWGUCFGtCTSgAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P8em3WfwYqAW6tNEZ0oxhHLUAOktEgIpjWRoNoNIgIhgBBBaOpaJgHEbYIBnmZKhUOLsPBFhAMWAoVjFpAMABpHkQAYThMGX3v4DMAAAAASUVORK5CYII="
              ],
              "buildable": false
            },
            {
              "type": "lava",
              "color": "#cc6315",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "end",
              "color": "#ff9999",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "start",
              "color": "#ffff80",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII="
              ],
              "buildable": false
            }
          ],
          "terrainMap": [
            [
              "grass",
              "grass",
              "start",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "forest",
              "water",
              "water",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "grass"
            ],
            [
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "grass"
            ],
            [
              "grass",
              "grass",
              "path",
              "rock",
              "water",
              "water",
              "water",
              "grass",
              "path",
              "path",
              "forest",
              "forest",
              "path",
              "forest",
              "path",
              "grass"
            ],
            [
              "grass",
              "grass",
              "path",
              "water",
              "water",
              "water",
              "water",
              "grass",
              "path",
              "grass",
              "forest",
              "forest",
              "path",
              "forest",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "path",
              "water",
              "water",
              "water",
              "water",
              "grass",
              "path",
              "grass",
              "forest",
              "forest",
              "path",
              "forest",
              "path",
              "start"
            ],
            [
              "grass",
              "path",
              "water",
              "water",
              "water",
              "water",
              "water",
              "path",
              "path",
              "forest",
              "grass",
              "forest",
              "path",
              "forest",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "water",
              "water",
              "water",
              "water",
              "water",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "rock",
              "water",
              "water",
              "rock",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "lava",
              "lava",
              "lava",
              "grass",
              "path",
              "grass"
            ],
            [
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "lava",
              "lava",
              "lava",
              "lava",
              "lava",
              "path",
              "grass"
            ],
            [
              "grass",
              "grass",
              "grass",
              "rock",
              "rock",
              "grass",
              "path",
              "path",
              "path",
              "lava",
              "lava",
              "lava",
              "lava",
              "lava",
              "path",
              "grass"
            ],
            [
              "grass",
              "water",
              "water",
              "rock",
              "rock",
              "grass",
              "path",
              "grass",
              "path",
              "lava",
              "lava",
              "lava",
              "lava",
              "lava",
              "path",
              "grass"
            ],
            [
              "grass",
              "water",
              "water",
              "water",
              "grass",
              "grass",
              "path",
              "grass",
              "path",
              "path",
              "lava",
              "lava",
              "path",
              "path",
              "path",
              "grass"
            ],
            [
              "grass",
              "water",
              "water",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "end",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ]
          ],
          "terrainBGColor": "#487957"
        },
        "test": "asdf"
      },
      "level2": {
        "title": "Level 2",
        "wavesets": [
          "swarm",
          "swarm",
          "swarm"
        ],
        "tileMap": {
          "size": 32,
          "terrainTypes": [
            {
              "type": "water",
              "color": "#2d85c6",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2PUbT32n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABAAWoO0FhcUvnAAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "rock",
              "color": "#9e9e9e",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEAIf9RHEX0vjVAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2OcN2/efwYqgqSkJEZk4xipbQHIcGRLaGIBsiU0swBmCU0tAFkyagHBBD4aRKNBRDAECCoYTUWjQUQwBAgqGE1FAx9EAECFSQ0HGbi8AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DMPAgnnz5v2nZTAxjlpAKHhHg4hQCDGMBtFoEBEMAYIKRlPRaBARDAGCCmieigCFBDkNArgMlAAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASElEQVRIS2NkoDFgpLH5DMPAgnnz5v2nRjAlJSVhDQ1GalkAciQ2S6hqATZLRi3ASB/o8TAaRKNBRHohMpqKCIbZaBCNwCACAOcCUBnjhUZTAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEAIf9RHEX0vjVAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDB0E5FSUlJjDTzAchwUPjRxAKY4TSxANlwkAUAUEhJDYCk3yoAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAQElEQVRIS2OcN2/efwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFAB7VMRQSdQqICRQv0EtQ99CwDb3jkNHe23xQAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2OcN2/efwYqgqSkJEZk4xhHLUAP3dEgIpjeRoNoNIgIhgBBBaOpaDSICIYAXgXoKQikmGo1GjbDwRZQ5mbCukctIBhGAC4oUBlpvrH3AAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "grass",
              "color": "#4a7c59",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgAnCQy6fQdcSIAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAATklEQVRIS2P0qon8z0AlsK1lOSO6UYxDygKQ69F9QVUfwIIH2RKaWIDsE5pZAPPNqAUEc9BoEI0GEcEQIKhgNBWNBhHBECCoYDQVEQwiAA75PFN7PN69AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DKMWEAxhRq+ayP8EVVGgYNQCgoE3GkSjQUQwBAgqGE1Fo0FEMAQIKhhNRQSDCAB4BShTjqMEpwAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2NkoDFgpLH5DKMWEAxhRq+ayP8EVRFQsK1lOc6gpooFIPtxWUI1C3BZMmoBSvRji4fRIBoNItIKkdFURDC8RoNocAYRADzPTBkQkiUcAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgAnCQy6fQdcSIAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCqgWSra1rKcEWQ7TSyAGU4TC5ANp7oF6IbTxQIARN88U7u38m0AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2P0qon8z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCpgJKiCQgWjFhAMQJoHEQCyWyhTURksDgAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P0qon8z0AlsK1lOSO6UYyjFiAHyWgQEUxro0E0GkQEQ4CggtFUNMyDCFsEg7xMlQoHl+FgCwgGLIUKRi0gGIA0DyIAQT9MGVwsaTUAAAAASUVORK5CYII="
              ],
              "buildable": true
            },
            {
              "type": "forest",
              "color": "#1c6438",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgA71YpQQB/w8QAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAATklEQVRIS2OUSbH4z0Al8GTOCUZ0oxiHlAUg16P7gqo+gAUPsiU0sQDZJzSzAOabUQsI5qDRIBoNIoIhQFDBaCoaDSKCIUBQwWgqIhhEAIHMNK76+kj9AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DKMWEAxhRpkUi/8EVVGgYNQCgoE3GkSjQUQwBAgqGE1Fo0FEMAQIKhhNRQSDCACNcyCuKmmRrQAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2NkoDFgpLH5DKMWEAxhRpkUi/8EVRFQ8GTOCZxBTRULQPbjsoRqFuCyZNQClOjHFg+jQTQaRKQVIqOpiGB4jQbR4AwiAPx6TBmX9XIXAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCoYTUUjIIgA71YpQQB/w8QAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCqgWSp6MucEI8h2mlgAM5wmFiAbTnUL0A2niwUAO0c0rkd3ClIAAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2OUSbH4z0BDwDhqAaHQHQ0iQiHEMBpEo0FEMAQIKhhNRaNBRDAECCpgJKiCQgWjFhAMQJoHEQBLXiCu2Bx7HwAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2OUSbH4z0Al8GTOCUZ0oxhHLUAOktEgIpjWRoNoNIgIhgBBBaOpaJgHEbYIBnmZKhUOLsPBFhAMWAoVjFpAMABpHkQAAPlMGX+pQM0AAAAASUVORK5CYII="
              ],
              "buildable": true
            },
            {
              "type": "path",
              "color": "#f5d69a",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEADJ7UXnV1RQ5AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAATklEQVRIS2P8em3WfwYqAW6tNEZ0oxiHlAUg16P7gqo+gAUPsiU0sQDZJzSzAOabUQsI5qDRIBoNIoIhQFDBaCoaDSKCIUBQwWgqIhhEAJvSVIWbYGLaAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2NkoDFgpLH5DKMWEAxhxq/XZv0nqIoCBaMWEAy80SAaDSKCIUBQwWgqGg0igiFAUMFoKiIYRAACV0CFxNTeCQAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAS0lEQVRIS2NkoDFgpLH5DKMWEAxhxq/XZv0nqIqAAm6tNJxBTRULQPbjsoRqFuCyZNQClOjHFg+jQTQaRKQVIqOpiGB4jQbR4AwiAFzITBnELKoVAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEADJ7UXnV1RQ5AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFABzVIRt1YaI8h2mlgAM5wmFiAbTnUL0A2niwUAqyRUhRUUb34AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAPUlEQVRIS2P8em3WfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFABI0EVFCoYtYBgANI8iAAWGUCFGtCTSgAAAABJRU5ErkJggg==",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAASklEQVRIS2P8em3WfwYqAW6tNEZ0oxhHLUAOktEgIpjWRoNoNIgIhgBBBaOpaJgHEbYIBnmZKhUOLsPBFhAMWAoVjFpAMABpHkQAYThMGX3v4DMAAAAASUVORK5CYII="
              ],
              "buildable": false
            },
            {
              "type": "lava",
              "color": "#cc6315",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2M8kyz6n4GGgHHUAkKhOxpEhEKIYTSIRoOIYAgQVDCaikaDiGAIEFQwmopGQBABABafNmFbBL82AAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "end",
              "color": "#ff9999",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANklEQVRIS2P8P3PmfwYaAsZRCwiF7mgQEQohhtEgGg0igiFAUMFoKhoNIoIhQFDBaCoaAUEEACT6TJlEjUJmAAAAAElFTkSuQmCC"
              ],
              "buildable": false
            },
            {
              "type": "start",
              "color": "#ffff80",
              "image": [
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII=",
                "iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAANUlEQVRIS+3SsQ0AAAgCQd3czXGEr6x8ahKSC51M6jDtAOlKREIlkUQogAVfJBEKYMEXPSBaS5xT0QJZxg4AAAAASUVORK5CYII="
              ],
              "buildable": false
            }
          ],
          "terrainMap": [
            [
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "start",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "path",
              "path",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "water",
              "forest",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "grass",
              "forest",
              "grass",
              "grass",
              "rock",
              "rock",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "forest",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "grass",
              "forest",
              "grass",
              "grass",
              "rock",
              "rock",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "water",
              "water",
              "water",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "water",
              "water",
              "water",
              "grass",
              "path",
              "grass",
              "forest",
              "forest",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "water",
              "water",
              "water",
              "grass",
              "path",
              "grass",
              "forest",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "end",
              "grass",
              "path",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "start"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "forest",
              "forest",
              "grass",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "forest",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "lava",
              "lava",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "lava",
              "lava",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "lava",
              "lava",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "water",
              "path",
              "water",
              "water",
              "water",
              "water",
              "water",
              "water",
              "water",
              "water",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "water",
              "path",
              "water",
              "water",
              "water",
              "water",
              "water",
              "water",
              "water",
              "water",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "path",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ],
            [
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "start",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass",
              "grass"
            ]
          ],
          "terrainBGColor": "#467554"
        }
      }
    },
    "wavesets": {
      "level1_start1": {
        "title": "Level 1 - Start 1",
        "waves": [
          "wave1",
          "wave1",
          "wave1",
          "wave1",
          "wave1",
          "swarm"
        ]
      },
      "level1_start2": {
        "title": "Level 1 - Start 2",
        "waves": [
          "wave2"
        ],
        "startDelay": 5
      },
      "swarm": {
        "title": "Swarm",
        "waves": [
          "swarm"
        ]
      }
    },
    "particles": {
      "smoke": {
        "title": "Smoke",
        "render": {
          "animations": {
            "idle": [
              {
                "shapes": []
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#1c1c24",
                    "x": null,
                    "y": 0,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 10,
                    "color": "#63637e",
                    "x": null,
                    "y": 0,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 12,
                    "color": "#63637e",
                    "x": null,
                    "y": 0,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0
                  }
                ]
              }
            ],
            "emerge": [
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 0,
                    "color": "#000000",
                    "x": 0,
                    "y": 0,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "alpha": 0
                  }
                ]
              },
              {
                "shapes": [
                  {
                    "type": "sphere",
                    "size": 5,
                    "color": "#000000",
                    "x": 0,
                    "y": 24,
                    "z": 0,
                    "rotationX": 0,
                    "rotationY": 0,
                    "rotationZ": 0,
                    "alpha": 1
                  }
                ]
              }
            ]
          }
        },
        "lifeSpan": 0.66
      }
    },
    "themes": {
      "cyberpunk": {
        "title": "Cyber Punk",
        "css": "/* Default Cyberpunk Theme */ @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&family=Rajdhani:wght@300;400;500;600;700&display=swap');  body {     font-family: 'Orbitron', 'Rajdhani', sans-serif;     background-color: #0a0a16;     color: #00f0ff; }  .sidebar {     background-color: rgba(15, 15, 35, 0.7);     border: 1px solid #00f0ff;     box-shadow: 0 0 10px #00f0ff, inset 0 0 20px rgba(0, 240, 255, 0.2); }  .object-item {     background-color: rgba(0, 0, 35, 0.6);     border-left: 2px solid #fe01fe;     text-transform: uppercase;     letter-spacing: 1px; }  .object-item:hover {     background-color: rgba(254, 1, 254, 0.2);     transform: translateX(5px); }  .object-item.selected {     background-color: rgba(254, 1, 254, 0.3);     border-left: 4px solid #fe01fe;     box-shadow: 0 0 8px rgba(254, 1, 254, 0.5); }  .editor {     background-color: rgba(15, 15, 35, 0.7);     border: 1px solid #fe01fe;     box-shadow: 0 0 15px rgba(254, 1, 254, 0.3); }  #three-js-container {     border: 1px solid rgba(0, 240, 255, 0.5); }  .preview-canvas-container {     border: 1px solid #fe01fe;     box-shadow: 0 0 10px rgba(254, 1, 254, 0.3); }  .preview {     background-color: rgba(15, 15, 35, 0.7);     border: 1px solid #00f0ff;     box-shadow: 0 0 15px rgba(0, 240, 255, 0.3); }  #preview-canvas {     background-color: transparent;     border: 1px solid rgba(0, 240, 255, 0.5); }  .camera-controls {     background: rgba(0, 0, 20, 0.7);     border: 1px solid #00f0ff; }  .camera-controls button {     background-color: rgba(0, 240, 255, 0.2);     border: 1px solid #00f0ff;     color: #00f0ff; }  .camera-controls .color-picker {     border: 1px solid #00f0ff; }  .camera-controls .size-slider {     background: #101028;     border: 1px solid #00f0ff; }  label {     font-weight: bold;     text-transform: uppercase;     letter-spacing: 1px;     color: #fe01fe; }  input, textarea, select {     border: 1px solid #00f0ff;     background-color: rgba(0, 0, 35, 0.6);     color: #00f0ff;     box-shadow: 0 0 5px rgba(0, 240, 255, 0.3); }  input:focus, textarea:focus, select:focus {     outline: none;     border-color: #fe01fe;     box-shadow: 0 0 10px rgba(254, 1, 254, 0.5); }  button {     background-color: rgba(0, 240, 255, 0.2);     border: 1px solid #00f0ff;     color: #00f0ff;     text-transform: uppercase;     letter-spacing: 1px; }  button:after {     background: linear-gradient(to right, transparent, rgba(0, 240, 255, 0.2), transparent); }  button:hover {     background-color: rgba(0, 240, 255, 0.3);     box-shadow: 0 0 10px rgba(0, 240, 255, 0.5), 0 0 20px rgba(0, 240, 255, 0.2);     transform: translateY(-2px); }  button:hover:after {     transform: translateX(100%) rotate(30deg); }  button.primary {     background-color: rgba(254, 1, 254, 0.2);     border: 1px solid #fe01fe;     color: #fe01fe; }  button.primary:hover {     background-color: rgba(254, 1, 254, 0.3);     box-shadow: 0 0 10px rgba(254, 1, 254, 0.5), 0 0 20px rgba(254, 1, 254, 0.2); }  button.danger {     background-color: rgba(255, 0, 76, 0.2);     border: 1px solid #ff004c;     color: #ff004c; }  button.danger:hover {     background-color: rgba(255, 0, 76, 0.3);     box-shadow: 0 0 10px rgba(255, 0, 76, 0.5), 0 0 20px rgba(255, 0, 76, 0.2); }  button.active {     border: 1px solid #00ff9d;     box-shadow: 0 0 10px rgba(0, 255, 157, 0.5);     color: #00ff9d; }  .modal {     background-color: rgba(0, 0, 20, 0.85);     backdrop-filter: blur(5px); }  .modal-content {     background-color: rgba(15, 15, 35, 0.9);     border: 1px solid #00f0ff;     box-shadow: 0 0 30px rgba(0, 240, 255, 0.3), 0 0 60px rgba(0, 240, 255, 0.1); }  .property-list {     border: 1px solid #00f0ff;     background-color: rgba(0, 0, 35, 0.6); }  .tab-navigation {     border-bottom: 1px solid #00f0ff; }  .tab {     text-transform: uppercase;     letter-spacing: 1px; }  .tab:hover {     background-color: rgba(0, 240, 255, 0.1); }  .tab.active {     border-bottom: 3px solid #fe01fe;     box-shadow: 0 5px 10px -5px rgba(254, 1, 254, 0.5);     font-weight: bold; }  .instructions {     background-color: rgba(0, 0, 35, 0.6);     border-left: 4px solid #fe01fe;     box-shadow: 0 0 10px rgba(254, 1, 254, 0.2); }  #grid-display {     background-color: rgba(0, 0, 20, 0.7);     border: 1px solid #00f0ff;     box-shadow: 0 0 10px rgba(0, 240, 255, 0.3); }  .success-message {     color: #00ff9d;     text-transform: uppercase;     letter-spacing: 1px;     animation: fadeOut 2s forwards;     animation-delay: 1s; }  .warning {     background-color: rgba(255, 0, 76, 0.1);     border-left: 4px solid #ff004c;     box-shadow: 0 0 10px rgba(255, 0, 76, 0.2); }  .main-content-container {     background-color: #080815;     color: #00f0ff; }  .content-sidebar {     background: linear-gradient(180deg, rgba(20, 20, 50, 0.8), rgba(10, 10, 30, 0.8));     border-right: 1px solid #00f0ff;     box-shadow: 0 0 20px rgba(0, 240, 255, 0.2); }  #graphics-rightbar {     background: linear-gradient(180deg, rgba(20, 20, 50, 0.8), rgba(10, 10, 30, 0.8));     border-left: 1px solid #00f0ff;     box-shadow: 0 0 20px rgba(0, 240, 255, 0.2); }  .grid-background {     background: #05051a;     background-image: radial-gradient(rgba(0, 240, 255, 0.1) 1px, transparent 1px);     background-size: 20px 20px; }  .toolbar {     background: linear-gradient(90deg, rgba(20, 20, 50, 0.8), rgba(10, 10, 30, 0.8));     border-bottom: 1px solid #00f0ff; }  .btn {     border: 1px solid #00f0ff;     background-color: rgba(0, 240, 255, 0.1);     color: #00f0ff;     text-transform: uppercase; }  .btn:hover {     background-color: rgba(0, 240, 255, 0.2);     box-shadow: 0 0 10px rgba(0, 240, 255, 0.5);     transform: translateY(-2px); }  .btn-primary {     background-color: rgba(254, 1, 254, 0.2);     border: 1px solid #fe01fe;     color: #fe01fe; }  .btn-primary:hover {     background-color: rgba(254, 1, 254, 0.3);     box-shadow: 0 0 10px rgba(254, 1, 254, 0.5); }  .btn-danger {     background-color: rgba(255, 0, 76, 0.2);     border: 1px solid #ff004c;     color: #ff004c; }  .btn-danger:hover {     background-color: rgba(255, 0, 76, 0.3);     box-shadow: 0 0 10px rgba(255, 0, 76, 0.5); }  .btn-secondary {     background-color: rgba(0, 240, 255, 0.15);     border: 1px solid #00f0ff; }  .btn-secondary:hover {     background-color: rgba(0, 240, 255, 0.25);     box-shadow: 0 0 10px rgba(0, 240, 255, 0.5); }  .btn-special {     background-color: rgba(0, 255, 157, 0.2);     border: 1px solid #00ff9d;     color: #00ff9d; }  .btn-special:hover {     background-color: rgba(0, 255, 157, 0.3);     box-shadow: 0 0 10px rgba(0, 255, 157, 0.5); }  #shape-list {     border-bottom: 1px solid rgba(0, 240, 255, 0.2); }  .shape-item {     background-color: rgba(0, 0, 35, 0.6);     border: 1px solid #00f0ff; }  .shape-item:hover {     background-color: rgba(0, 240, 255, 0.1);     transform: translateX(5px); }  .shape-item.active {     background-color: rgba(0, 255, 157, 0.1);     border-color: #00ff9d;     color: #00ff9d;     box-shadow: 0 0 10px rgba(0, 255, 157, 0.3); }  #inspector {     background: rgba(20, 20, 50, 0.8);     border-top: 1px solid #00f0ff; }  .form-row label {     color: #fe01fe; }  .form-row input, .form-row select {     border: 1px solid #00f0ff;     background-color: rgba(0, 0, 35, 0.6);     color: #00f0ff;     box-shadow: 0 0 5px rgba(0, 240, 255, 0.3); }  .scene-info {     background: rgba(0, 0, 20, 0.8);     color: #00f0ff;     box-shadow: 0 0 15px rgba(0, 240, 255, 0.3);     border: 1px solid #00f0ff; }  .button-danger {     background-color: rgba(255, 0, 76, 0.2);     border: 1px solid #ff004c;     color: #ff004c; }  .button-danger:hover {     background-color: rgba(255, 0, 76, 0.3);     box-shadow: 0 0 10px rgba(255, 0, 76, 0.5); }  h2, h3 {     color: #fe01fe;     text-transform: uppercase;     letter-spacing: 3px;     margin-bottom: 15px;     padding-bottom: 5px;     border-bottom: 1px solid #00f0ff;     text-shadow: 0 0 5px rgba(254, 1, 254, 0.7); }  h2:hover, h3:hover {     text-shadow: -2px 0 #00f0ff, 2px 0 #ff004c; }  .container::before {     content: '';     position: fixed;     top: 0;     left: 0;     right: 0;     bottom: 0;     background:          linear-gradient(rgba(0, 240, 255, 0.07) 1px, transparent 1px),         linear-gradient(90deg, rgba(0, 240, 255, 0.07) 1px, transparent 1px);     background-size: 40px 40px;     background-position: center center;     z-index: -1;     perspective: 1000px;     transform-style: preserve-3d;     transform: rotateX(75deg) translateZ(-100px);     pointer-events: none; }  #json-content {     background-color: rgba(0, 0, 35, 0.8);     border: 1px solid #00f0ff;     color: #00ff9d;     font-family: 'Courier New', monospace;     padding: 15px;     box-shadow: 0 0 15px rgba(0, 240, 255, 0.2), inset 0 0 30px rgba(0, 0, 35, 0.5); }  .ref-value-item {     background-color: #405060; }  .remove-ref-btn {     background: none;     border: none;     color: #ff6b6b;     cursor: pointer; }  ::-webkit-scrollbar {     width: 8px;     height: 8px; }  ::-webkit-scrollbar-track {     background: rgba(0, 0, 35, 0.6); }  ::-webkit-scrollbar-thumb {     background: #00f0ff;     border-radius: 0; }  ::-webkit-scrollbar-thumb:hover {     background: #fe01fe; }  button:active::before {     content: '';     position: absolute;     top: 0;     left: 0;     width: 100%;     height: 100%;     background: linear-gradient(90deg, transparent, rgba(0, 240, 255, 0.4), transparent);     animation: loading 1s infinite; }"
      },
      "medieval": {
        "title": "Medieval",
        "css": "/* Medieval Theme */ @import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&family=IM+Fell+English&display=swap');  body {     font-family: 'Cinzel', 'IM Fell English', serif;     background-color: #2b1e12; /* Dark brown, earthy tone */     color: #d4b98a; /* Parchment-like beige */ }  .sidebar {     background-color: rgba(50, 40, 30, 0.8); /* Dark wood */     border: 1px solid #8a5c2e; /* Bronze */     box-shadow: 0 0 10px rgba(138, 92, 46, 0.5), inset 0 0 20px rgba(50, 40, 30, 0.3); }  .object-item {     background-color: rgba(60, 50, 40, 0.6); /* Aged wood */     border-left: 2px solid #b8860b; /* Gold accent */     text-transform: uppercase;     letter-spacing: 1px; }  .object-item:hover {     background-color: rgba(184, 134, 11, 0.2); /* Golden hover */     transform: translateX(5px); }  .object-item.selected {     background-color: rgba(184, 134, 11, 0.3);     border-left: 4px solid #b8860b;     box-shadow: 0 0 8px rgba(184, 134, 11, 0.5); }  .editor {     background-color: rgba(50, 40, 30, 0.7);     border: 1px solid #b8860b;     box-shadow: 0 0 15px rgba(184, 134, 11, 0.3); }  #three-js-container {     border: 1px solid rgba(138, 92, 46, 0.5); /* Bronze edge */ }  .preview-canvas-container {     border: 1px solid #b8860b;     box-shadow: 0 0 10px rgba(184, 134, 11, 0.3); }  .preview {     background-color: rgba(50, 40, 30, 0.7);     border: 1px solid #8a5c2e;     box-shadow: 0 0 15px rgba(138, 92, 46, 0.3); }  #preview-canvas {     background-color: transparent;     border: 1px solid rgba(138, 92, 46, 0.5); }  .camera-controls {     background: rgba(40, 30, 20, 0.7); /* Dark stone */     border: 1px solid #8a5c2e; }  .camera-controls button {     background-color: rgba(138, 92, 46, 0.2);     border: 1px solid #8a5c2e;     color: #d4b98a; }  .camera-controls .color-picker {     border: 1px solid #8a5c2e; }  .camera-controls .size-slider {     background: #3c2f1e; /* Darker wood */     border: 1px solid #8a5c2e; }  label {     font-weight: bold;     text-transform: uppercase;     letter-spacing: 1px;     color: #b8860b; /* Gold text */ }  input, textarea, select {     border: 1px solid #8a5c2e;     background-color: rgba(60, 50, 40, 0.6);     color: #d4b98a;     box-shadow: 0 0 5px rgba(138, 92, 46, 0.3); }  input:focus, textarea:focus, select:focus {     outline: none;     border-color: #b8860b;     box-shadow: 0 0 10px rgba(184, 134, 11, 0.5); }  button {     background-color: rgba(138, 92, 46, 0.2);     border: 1px solid #8a5c2e;     color: #d4b98a;     text-transform: uppercase;     letter-spacing: 1px; }  button:hover {     background-color: rgba(138, 92, 46, 0.3);     box-shadow: 0 0 10px rgba(138, 92, 46, 0.5), 0 0 20px rgba(138, 92, 46, 0.2);     transform: translateY(-2px); }  button.primary {     background-color: rgba(184, 134, 11, 0.2);     border: 1px solid #b8860b;     color: #b8860b; }  button.primary:hover {     background-color: rgba(184, 134, 11, 0.3);     box-shadow: 0 0 10px rgba(184, 134, 11, 0.5), 0 0 20px rgba(184, 134, 11, 0.2); }  button.danger {     background-color: rgba(139, 0, 0, 0.2); /* Crimson */     border: 1px solid #8b0000;     color: #ff4040; }  button.danger:hover {     background-color: rgba(139, 0, 0, 0.3);     box-shadow: 0 0 10px rgba(139, 0, 0, 0.5), 0 0 20px rgba(139, 0, 0, 0.2); }  button.active {     border: 1px solid #228b22; /* Forest green */     box-shadow: 0 0 10px rgba(34, 139, 34, 0.5);     color: #228b22; }  .modal {     background-color: rgba(40, 30, 20, 0.85); /* Stone texture */     backdrop-filter: blur(5px); }  .modal-content {     background-color: rgba(50, 40, 30, 0.9);     border: 1px solid #8a5c2e;     box-shadow: 0 0 30px rgba(138, 92, 46, 0.3), 0 0 60px rgba(138, 92, 46, 0.1); }  .property-list {     border: 1px solid #8a5c2e;     background-color: rgba(60, 50, 40, 0.6); }  .tab-navigation {     border-bottom: 1px solid #8a5c2e; }  .tab {     text-transform: uppercase;     letter-spacing: 1px; }  .tab:hover {     background-color: rgba(138, 92, 46, 0.1); }  .tab.active {     border-bottom: 3px solid #b8860b;     box-shadow: 0 5px 10px -5px rgba(184, 134, 11, 0.5);     font-weight: bold; }  .instructions {     background-color: rgba(60, 50, 40, 0.6);     border-left: 4px solid #b8860b;     box-shadow: 0 0 10px rgba(184, 134, 11, 0.2); }  #grid-display {     background-color: rgba(40, 30, 20, 0.7);     border: 1px solid #8a5c2e;     box-shadow: 0 0 10px rgba(138, 92, 46, 0.3); }  .success-message {     color: #228b22; /* Forest green */     text-transform: uppercase;     letter-spacing: 1px;     animation: fadeOut 2s forwards;     animation-delay: 1s; }  .warning {     background-color: rgba(139, 0, 0, 0.1);     border-left: 4px solid #8b0000;     box-shadow: 0 0 10px rgba(139, 0, 0, 0.2); }  .main-content-container {     background-color: #251a10; /* Darker brown */     color: #d4b98a; }  .content-sidebar {     background: linear-gradient(180deg, rgba(60, 50, 40, 0.8), rgba(40, 30, 20, 0.8));     border-right: 1px solid #8a5c2e;     box-shadow: 0 0 20px rgba(138, 92, 46, 0.2); }  #graphics-rightbar {     background: linear-gradient(180deg, rgba(60, 50, 40, 0.8), rgba(40, 30, 20, 0.8));     border-left: 1px solid #8a5c2e;     box-shadow: 0 0 20px rgba(138, 92, 46, 0.2); }  .grid-background {     background: #1e150d;     background-image: radial-gradient(rgba(138, 92, 46, 0.1) 1px, transparent 1px);     background-size: 20px 20px; }  .toolbar {     background: linear-gradient(90deg, rgba(60, 50, 40, 0.8), rgba(40, 30, 20, 0.8));     border-bottom: 1px solid #8a5c2e; }  .btn {     border: 1px solid #8a5c2e;     background-color: rgba(138, 92, 46, 0.1);     color: #d4b98a;     text-transform: uppercase; }  .btn:hover {     background-color: rgba(138, 92, 46, 0.2);     box-shadow: 0 0 10px rgba(138, 92, 46, 0.5);     transform: translateY(-2px); }  .btn-primary {     background-color: rgba(184, 134, 11, 0.2);     border: 1px solid #b8860b;     color: #b8860b; }  .btn-primary:hover {     background-color: rgba(184, 134, 11, 0.3);     box-shadow: 0 0 10px rgba(184, 134, 11, 0.5); }  .btn-danger {     background-color: rgba(139, 0, 0, 0.2);     border: 1px solid #8b0000;     color: #ff4040; }  .btn-danger:hover {     background-color: rgba(139, 0, 0, 0.3);     box-shadow: 0 0 10px rgba(139, 0, 0, 0.5); }  .btn-secondary {     background-color: rgba(138, 92, 46, 0.15);     border: 1px solid #8a5c2e; }  .btn-secondary:hover {     background-color: rgba(138, 92, 46, 0.25);     box-shadow: 0 0 10px rgba(138, 92, 46, 0.5); }  .btn-special {     background-color: rgba(34, 139, 34, 0.2); /* Forest green */     border: 1px solid #228b22;     color: #228b22; }  .btn-special:hover {     background-color: rgba(34, 139, 34, 0.3);     box-shadow: 0 0 10px rgba(34, 139, 34, 0.5); }  #shape-list {     border-bottom: 1px solid rgba(138, 92, 46, 0.2); }  .shape-item {     background-color: rgba(60, 50, 40, 0.6);     border: 1px solid #8a5c2e; }  .shape-item:hover {     background-color: rgba(138, 92, 46, 0.1);     transform: translateX(5px); }  .shape-item.active {     background-color: rgba(34, 139, 34, 0.1);     border-color: #228b22;     color: #228b22;     box-shadow: 0 0 10px rgba(34, 139, 34, 0.3); }  #inspector {     background: rgba(60, 50, 40, 0.8);     border-top: 1px solid #8a5c2e; }  .form-row label {     color: #b8860b; }  .form-row input, .form-row select {     border: 1px solid #8a5c2e;     background-color: rgba(60, 50, 40, 0.6);     color: #d4b98a;     box-shadow: 0 0 5px rgba(138, 92, 46, 0.3); }  .scene-info {     background: rgba(40, 30, 20, 0.8);     color: #d4b98a;     box-shadow: 0 0 15px rgba(138, 92, 46, 0.3);     border: 1px solid #8a5c2e; }  .button-danger {     background-color: rgba(139, 0, 0, 0.2);     border: 1px solid #8b0000;     color: #ff4040; }  .button-danger:hover {     background-color: rgba(139, 0, 0, 0.3);     box-shadow: 0 0 10px rgba(139, 0, 0, 0.5); }  h2, h3 {     color: #b8860b;     text-transform: uppercase;     letter-spacing: 3px;     margin-bottom: 15px;     padding-bottom: 5px;     border-bottom: 1px solid #8a5c2e;     text-shadow: 0 0 5px rgba(184, 134, 11, 0.7); }   .container::before {     content: '';     position: fixed;     top: 0;     left: 0;     right: 0;     bottom: 0;     background:          linear-gradient(rgba(138, 92, 46, 0.07) 1px, transparent 1px),         linear-gradient(90deg, rgba(138, 92, 46, 0.07) 1px, transparent 1px);     background-size: 40px 40px;     background-position: center center;     z-index: -1;     perspective: 1000px;     transform-style: preserve-3d;     transform: rotateX(75deg) translateZ(-100px);     pointer-events: none; }  #json-content {     background-color: rgba(60, 50, 40, 0.8);     border: 1px solid #8a5c2e;     color: #228b22; /* Green ink */     font-family: 'IM Fell English', serif;     padding: 15px;     box-shadow: 0 0 15px rgba(138, 92, 46, 0.2), inset 0 0 30px rgba(60, 50, 40, 0.5); }  .ref-value-item {     background-color: #4a3a2a; /* Darker wood */ }  .remove-ref-btn {     background: none;     border: none;     color: #ff4040;     cursor: pointer; }  ::-webkit-scrollbar {     width: 8px;     height: 8px; }  ::-webkit-scrollbar-track {     background: rgba(60, 50, 40, 0.6); }  ::-webkit-scrollbar-thumb {     background: #8a5c2e;     border-radius: 0; }  ::-webkit-scrollbar-thumb:hover {     background: #b8860b; }  /* Category Styling for Medieval Theme */ .type-selector {     background-color: rgba(50, 40, 30, 0.7); /* Dark wood */     border: 1px solid #8a5c2e; /* Bronze */     box-shadow: inset 0 0 10px rgba(138, 92, 46, 0.3); }  .category-header {     background-color: rgba(60, 50, 40, 0.8); /* Aged wood */     border: 1px solid #8a5c2e;     color: #d4b98a; /* Parchment beige */     text-transform: uppercase;     letter-spacing: 1px;     font-weight: bold; }  .category-header:hover {     background-color: rgba(138, 92, 46, 0.2); /* Bronze hover */     box-shadow: 0 0 10px rgba(138, 92, 46, 0.5); }  .category-types {     background-color: rgba(40, 30, 20, 0.6); /* Dark stone */ }  .object-type-item {     background-color: rgba(60, 50, 40, 0.6); /* Aged wood */     border-left: 2px solid #b8860b; /* Gold accent */     color: #d4b98a;     text-transform: uppercase;     letter-spacing: 1px; }  .object-type-item:hover {     background-color: rgba(184, 134, 11, 0.2); /* Golden hover */     transform: translateX(5px); }  .object-type-item.selected {     background-color: rgba(184, 134, 11, 0.3);     border-left: 4px solid #b8860b;     box-shadow: 0 0 8px rgba(184, 134, 11, 0.5); }  .object-list {     background-color: rgba(50, 40, 30, 0.5); /* Slightly lighter wood */ }"
      },
      "videogame": {
        "title": "Video Game",
        "css": "@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Share+Tech+Mono&display=swap');  body {     font-family: 'Orbitron', 'Share Tech Mono', sans-serif;     background-color: #0a0a0a; /* Deep black */     color: #00d4ff; /* Neon blue */     overflow: hidden; }  .sidebar {     background: linear-gradient(135deg, rgba(10, 10, 10, 0.9), rgba(155, 0, 255, 0.1)); /* Black to purple fade */     border: 1px solid #ff007a; /* Hot pink */     box-shadow: 0 0 15px rgba(0, 212, 255, 0.5), inset 0 0 10px rgba(155, 0, 255, 0.3); }  .inventory-item {     background-color: rgba(12, 12, 12, 0.7);     border-left: 3px solid #9b00ff; /* Electric purple */     text-transform: uppercase;     letter-spacing: 2px;     transition: all 0.2s ease; }  .inventory-item:hover {     background-color: rgba(0, 212, 255, 0.2);     transform: scale(1.03);     box-shadow: 0 0 10px rgba(0, 212, 255, 0.7); }  .inventory-item.active {     background-color: rgba(255, 0, 122, 0.3); /* Pink glow */     border-left: 5px solid #ff007a;     box-shadow: 0 0 15px rgba(255, 0, 122, 0.8); }  .hud {     background: rgba(10, 10, 10, 0.8);     border: 1px solid #00d4ff;     box-shadow: 0 0 20px rgba(0, 212, 255, 0.4); }  #game-canvas {     border: 1px dashed #c0c0c0; /* Silver dashed */     background: radial-gradient(circle, rgba(155, 0, 255, 0.1), transparent); }  .hologram-display {     border: 2px solid #9b00ff;     box-shadow: 0 0 25px rgba(155, 0, 255, 0.6);     animation: pulseGlow 2s infinite alternate; }  @keyframes pulseGlow {     0% { box-shadow: 0 0 25px rgba(155, 0, 255, 0.6); }     100% { box-shadow: 0 0 35px rgba(155, 0, 255, 0.9); } }  .control-panel {     background: rgba(0, 0, 0, 0.85);     border: 1px solid #c0c0c0; }  .control-panel button {     background-color: rgba(0, 212, 255, 0.2);     border: 1px solid #00d4ff;     color: #fff;     text-transform: uppercase;     transition: all 0.3s ease; }  .control-panel button:hover {     background-color: rgba(0, 212, 255, 0.4);     box-shadow: 0 0 15px rgba(0, 212, 255, 0.8);     transform: translateY(-3px); }  label {     color: #ff007a; /* Hot pink */     font-weight: bold;     text-transform: uppercase;     letter-spacing: 1.5px; }  input, textarea, select {     border: 1px solid #9b00ff;     background-color: rgba(10, 10, 10, 0.7);     color: #00d4ff;     box-shadow: 0 0 8px rgba(155, 0, 255, 0.4); }  input:focus, textarea:focus, select:focus {     outline: none;     border-color: #ff007a;     box-shadow: 0 0 12px rgba(255, 0, 122, 0.7); }  button {     background-color: rgba(155, 0, 255, 0.2);     border: 1px solid #9b00ff;     color: #fff;     text-transform: uppercase;     letter-spacing: 1px;     transition: all 0.3s ease; }  button:hover {     background-color: rgba(155, 0, 255, 0.4);     box-shadow: 0 0 15px rgba(155, 0, 255, 0.7);     transform: translateY(-2px) scale(1.05); }  button.primary {     background-color: rgba(0, 212, 255, 0.3);     border: 1px solid #00d4ff;     color: #fff; }  button.primary:hover {     background-color: rgba(0, 212, 255, 0.5);     box-shadow: 0 0 20px rgba(0, 212, 255, 0.9); }  button.alert {     background-color: rgba(255, 0, 122, 0.2);     border: 1px solid #ff007a;     color: #fff; }  button.alert:hover {     background-color: rgba(255, 0, 122, 0.4);     box-shadow: 0 0 15px rgba(255, 0, 122, 0.7); }  .modal {     background: rgba(0, 0, 0, 0.9);     backdrop-filter: blur(3px); }  .modal-content {     background: linear-gradient(45deg, rgba(10, 10, 10, 0.9), rgba(0, 212, 255, 0.1));     border: 1px solid #00d4ff;     box-shadow: 0 0 30px rgba(0, 212, 255, 0.5); }  .notification {     background-color: rgba(155, 0, 255, 0.3);     border-left: 4px solid #9b00ff;     color: #fff;     animation: slideIn 0.5s ease-out; }  @keyframes slideIn {     0% { transform: translateX(100%); opacity: 0; }     100% { transform: translateX(0); opacity: 1; } }  .main-content {     background: #0a0a0a;     animation: glitch 4s infinite; }   .grid-overlay {     background: repeating-linear-gradient(45deg, rgba(155, 0, 255, 0.05), rgba(155, 0, 255, 0.05) 10px, transparent 10px, transparent 20px); }  .btn {     border: 1px solid #c0c0c0;     background-color: rgba(0, 212, 255, 0.15);     color: #fff; }  .btn:hover {     background-color: rgba(0, 212, 255, 0.3);     box-shadow: 0 0 10px rgba(0, 212, 255, 0.6); }  .btn-primary {     background-color: rgba(9b, 0, 255, 0.25);     border: 1px solid #9b00ff; }  .btn-primary:hover {     background-color: rgba(155, 0, 255, 0.45);     box-shadow: 0 0 15px rgba(155, 0, 255, 0.8); }  ::-webkit-scrollbar {     width: 6px; }  ::-webkit-scrollbar-track {     background: #0a0a0a; }  ::-webkit-scrollbar-thumb {     background: #00d4ff;     border-radius: 3px; }  ::-webkit-scrollbar-thumb:hover {     background: #ff007a; }"
      },
      "Neon Dune": {
        "title": "Neon Dune",
        "css": "body { background-color: #1a0f05; color: #ffffff; font-family: 'Arial', sans-serif; }\n\nh1, h2, h3 { color: #00ffbf; }\n\n.button-primary { background-color: #00ffbf; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer; transition: all 0.3s ease; }\n.button-primary:hover { transform: scale(1.05); box-shadow: 0 0 15px #00ffbf; }\n\n.link { color: #00ffbf; text-decoration: none; }\n.link:hover { text-decoration: underline; }\n\n.card { background-color: #2d1e13; border-radius: 10px; padding: 20px; margin: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); }\n\ninput, textarea { background-color: #2d1e13; color: #ffffff; border: 1px solid #00ffbf; padding: 8px; border-radius: 5px; }\n\nheader { background-color: #00ffbf; padding: 20px; text-align: center; box-shadow: 0 4px 6px rgba(0,255,191,0.3); }\n\nfooter { background-color: #2d1e13; color: #ffffff; padding: 20px; text-align: center; border-top: 1px solid #00ffbf; }\n"
      },
      "scifi2": {
        "title": "SciFi2.0",
        "css": "@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&display=swap'); :root {     --primary-bg: #0a0a1a;     --secondary-bg: #121228;     --accent-color: #00ffff;     --text-color: #e0e7ff;     --border-color: #2a2a4a;     --highlight-color: #ff00ff;     --hover-color: rgba(0, 255, 255, 0.2); }  body {     background-color: var(--primary-bg);     color: var(--text-color);     font-family: 'Orbitron', 'Arial', sans-serif;     line-height: 1.6; }  .container {     background-color: var(--secondary-bg);     border: 2px solid var(--border-color);     box-shadow: 0 0 20px rgba(0, 255, 255, 0.1); }  /* Sidebar Styling */ .sidebar {     background-color: #0f0f2a;     border-right: 1px solid var(--border-color); }  .object-item, .object-type-item {     background-color: var(--secondary-bg);     border: 1px solid var(--border-color);     color: var(--text-color);     transition: all 0.3s ease; }  .object-item:hover, .object-type-item:hover {     background-color: var(--hover-color);     border-color: var(--accent-color); }  .object-item.selected, .object-type-item.selected {     background-color: var(--accent-color);     color: var(--primary-bg); }  /* Button Styling */ button {     background-color: var(--secondary-bg);     color: var(--accent-color);     border: 2px solid var(--accent-color);     transition: all 0.3s ease;     position: relative;     overflow: hidden; }  button:before {     content: '';     position: absolute;     top: 0;     left: -100%;     width: 100%;     height: 100%;     background: linear-gradient(120deg, transparent, var(--highlight-color), transparent);     transition: all 0.5s ease; }  button:hover:before {     left: 100%; }  button:hover {     background-color: var(--accent-color);     color: var(--primary-bg); }  .primary {     background-color: var(--accent-color);     color: var(--primary-bg); }  .danger {     border-color: #ff4444;     color: #ff4444; }  /* Input Styling */ input, textarea, select {     background-color: var(--secondary-bg);     color: var(--text-color);     border: 1px solid var(--border-color);     transition: border-color 0.3s ease; }  input:focus, textarea:focus, select:focus {     border-color: var(--accent-color);     outline: none;     box-shadow: 0 0 10px rgba(0, 255, 255, 0.2); }  /* Modal Styling */ .modal {     background-color: rgba(10, 10, 26, 0.9); }  .modal-content {     background-color: var(--secondary-bg);     border: 2px solid var(--border-color);     box-shadow: 0 0 30px rgba(0, 255, 255, 0.1); }  /* Graphics Editor Enhancements */ #canvas-container {     background:          linear-gradient(45deg, rgba(0,255,255,0.05) 25%, transparent 25%) 0 0,         linear-gradient(-45deg, rgba(0,255,255,0.05) 25%, transparent 25%) 0 0,         linear-gradient(45deg, transparent 75%, rgba(0,255,255,0.05) 75%) 0 0,         linear-gradient(-45deg, transparent 75%, rgba(0,255,255,0.05) 75%) 0 0;     background-size: 20px 20px;     background-color: var(--primary-bg); }  .scene-info {     background-color: rgba(18, 18, 40, 0.8);     border: 1px solid var(--border-color);     color: var(--accent-color); }  /* Toolbar Styling */ .toolbar .btn {     background-color: var(--secondary-bg);     border-color: var(--border-color);     color: var(--accent-color); }  .toolbar .btn:hover {     background-color: var(--accent-color);     color: var(--primary-bg); }  /* Tab and Category Styling */ .tab, .category-header {     color: var(--text-color);     transition: color 0.3s ease; }  .tab:hover, .category-header:hover {     color: var(--accent-color); }  .tab.active {     border-bottom-color: var(--accent-color); }  /* Scrollbar (for browsers that support) */ ::-webkit-scrollbar {     width: 10px; }  ::-webkit-scrollbar-track {     background: var(--secondary-bg); }  ::-webkit-scrollbar-thumb {     background: var(--accent-color);     border-radius: 5px; }  ::-webkit-scrollbar-thumb:hover {     background: var(--highlight-color); }  /* Subtle Sci-Fi Animations */ @keyframes pulse-border {     0%, 100% { box-shadow: 0 0 10px rgba(0, 255, 255, 0.3); }     50% { box-shadow: 0 0 20px rgba(0, 255, 255, 0.6); } }  @keyframes grid-pulse {     0%, 100% { opacity: 0.1; }     50% { opacity: 0.3; } }  /* Additional Futuristic Effects */ body::before {     content: '';     position: fixed;     top: 0;     left: 0;     width: 100%;     height: 100%;     pointer-events: none;     background:          repeating-linear-gradient(             0deg,             rgba(0, 0, 0, 0.15),             rgba(0, 0, 0, 0.15) 1px,             transparent 1px,             transparent 2px         );     opacity: 0.3;     z-index: 9999; }"
      },
      "videoGame2": {
        "title": "Video Game 2",
        "css": "/* retro-theme.css - Pixel Art Retro Video Game Theme */\n\n/* Import pixel font from Google Fonts */\n@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n\n/* Base Styles */\nbody {\n    background-color: #1a1a1a; /* Dark retro background */\n    font-family: 'Press Start 2P', cursive; /* Pixelated font */\n    image-rendering: pixelated; /* Ensures crisp pixel art rendering */\n    color: #fff; /* Default text color */\n}\n\n/* Container */\n.container {\n    background: #2b2b2b; /* Retro gray */\n    border: 4px solid #000; /* Thick black border */\n    padding: .5em;\n}\n\n/* Sidebar */\n.sidebar {\n    background: #3c3c3c; /* Mid-gray retro */\n    border: 4px solid #000;\n}\n\n.sidebar img {\n    image-rendering: pixelated;\n    border-bottom: 2px solid #000;\n}\n\n/* Object List */\n.object-item {\n    background: #5a5a5a; /* Darker gray */\n    border: 2px solid #000;\n    color: #fff;\n    font-size: 10px; /* Smaller for pixel readability */\n}\n\n.object-item:hover, .object-item.selected {\n    background: #ffcc00; /* Bright retro yellow */\n    color: #000;\n}\n.object-type-item.selected {\n    color: #ffcc00;\n}\n\n/* Buttons */\nbutton {\n    background: #ff3333; /* Retro red */\n    color: #fff;\n    border: 2px solid #000;\n    font-family: 'Press Start 2P', cursive;\n    font-size: 10px;\n    text-transform: uppercase; /* Retro game style */\n    transition: background 0.1s ease;\n}\n\nbutton:hover {\n    background: #33cc33; /* Retro green */\n}\n\nbutton.primary {\n    background: #33cc33; /* Green for primary actions */\n}\n\nbutton.primary:hover {\n    background: #ffcc00; /* Yellow on hover */\n}\n\n/* Main Content */\n.main-content {\n    background: #2b2b2b;\n}\n\n/* Editor */\n.editor {\n    background: #3c3c3c;\n    border: 4px solid #000;\n    color: #fff;\n    font-size: 10px;\n}\n\n/* Canvas and Grid Containers */\n#canvas-container, .grid-container {\n    background: #000; /* Black canvas background */\n    border: 4px solid #fff;\n}\n\n#canvas, #grid {\n    image-rendering: pixelated;\n    background: repeating-linear-gradient(\n        45deg,\n        #333 0px,\n        #333 10px,\n        #000 10px,\n        #000 20px\n    ); /* Retro checkerboard grid */\n}\n\n.scene-info {\n    background: rgba(0, 0, 0, 0.8);\n    border: 2px solid #fff;\n    color: #00ff00; /* Neon green */\n    font-size: 8px;\n}\n\n/* Toolbar */\n.toolbar {\n    background: #5a5a5a;\n    border-bottom: 2px solid #000;\n}\n\n.btn {\n    background: #ff3333; /* Retro red */\n    color: #fff;\n    border: 2px solid #000;\n    font-family: 'Press Start 2P', cursive;\n    font-size: 10px;\n    transition: background 0.1s ease;\n}\n\n.btn:hover {\n    background: #33cc33; /* Retro green */\n}\n\n.btn.btn-danger {\n    background: #ff0000; /* Bright red */\n}\n\n.btn.btn-danger:hover {\n    background: #cc0000; /* Darker red */\n}\n\n.btn.btn-secondary {\n    background: #6666ff; /* Retro blue */\n}\n\n.btn.btn-secondary:hover {\n    background: #9999ff; /* Lighter blue */\n}\n\n.btn.btn-special {\n    background: #ff00ff; /* Retro magenta */\n}\n\n.btn.btn-special:hover {\n    background: #cc00cc; /* Darker magenta */\n}\n\n/* Modals */\n.modal {\n    background: rgba(0, 0, 0, 0.8);\n}\n\n.modal-content {\n    background: #3c3c3c;\n    border: 4px solid #fff;\n    color: #fff;\n    font-size: 10px;\n}\n\n/* Form Elements */\n.form-group label {\n    color: #00ff00; /* Neon green */\n    font-size: 10px;\n}\n\ninput, textarea, select {\n    background: #000;\n    border: 2px solid #fff;\n    color: #ffcc00; /* Retro yellow */\n    font-family: 'Press Start 2P', cursive;\n    font-size: 10px;\n}\n\ninput[type=\"color\"] {\n    padding: 0; /* Fix color picker padding */\n    height: 20px; /* Consistent height */\n}\n\n/* Tabs */\n.tab-navigation {\n    border-bottom: 2px solid #000;\n}\n\n.tab {\n    background: #5a5a5a;\n    border: 2px solid #000;\n    color: #fff;\n    font-size: 10px;\n}\n\n.tab.active {\n    background: #ffcc00; /* Yellow for active tab */\n    color: #000;\n}\n\n/* Inspector and JSON Editor */\n#inspector, #json-editor {\n    background: #3c3c3c;\n    border: 2px solid #000;\n}\n\n#json-content {\n    background: #000;\n    color: #00ff00; /* Green for code-like text */\n}\n\n/* Translation Controls */\n.translation-controls button {\n    background: #6666ff; /* Retro blue */\n}\n\n.translation-controls button:hover {\n    background: #9999ff;\n}\n\n/* Shape List */\n.shape-item {\n    background: #5a5a5a;\n    border: 2px solid #000;\n    color: #fff;\n    font-size: 10px;\n}\n\n.shape-item:hover {\n    background: #ffcc00;\n    color: #000;\n}\n\n.type-selector .object-item {\n  font-size: .6em;\n}\n\n/* codemirror-retro.css - Retro Pixel Art Theme for CodeMirror */\n\n/* Import pixel font from Google Fonts */\n@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');\n\n/* Base CodeMirror Styles */\n.CodeMirror {\n    height: 100% !important;\n    font-family: 'Press Start 2P', cursive !important;\n    font-size: 10px !important; /* Small size for pixel readability */\n    background: #000 !important; /* Black background like a CRT screen */\n    color: #00ff00 !important; /* Neon green default text */\n    border: 4px solid #fff !important; /* Thick white border */\n    image-rendering: pixelated; /* Crisp rendering */\n}\n.CodeMirror-gutters {\n background-color: #000;\n}\n\n/* Retro Theme Definition */\n.cm-s-retro .CodeMirror-gutters {\n    background: #1a1a1a !important; /* Dark gray gutter */\n    border-right: 2px solid #fff !important; /* White separator */\n    color: #ffcc00 !important; /* Yellow line numbers */\n}\n\n.cm-s-retro .CodeMirror-linenumber {\n    color: #ffcc00 !important; /* Yellow line numbers */\n    padding: 0 5px !important;\n}\n\n.cm-s-retro .CodeMirror-cursor {\n    border-left: 2px solid #ff3333 !important; /* Red blinking cursor */\n    animation: blink 1s step-end infinite; /* Retro blink effect */\n}\n\n.cm-s-retro .CodeMirror-selected {\n    background: #ff3333 !important; /* Red selection highlight */\n    opacity: 0.5; /* Slightly transparent for retro effect */\n}\n\n.cm-s-retro .CodeMirror-focused .CodeMirror-selected {\n    background: #ff3333 !important;\n}\n\n/* Syntax Highlighting */\n.cm-s-retro .cm-comment {\n    color: #6666ff !important; /* Blue for comments */\n    font-style: italic; /* Slight retro flair */\n}\n\n.cm-s-retro .cm-string {\n    color: #ffcc00 !important; /* Yellow for strings */\n}\n\n.cm-s-retro .cm-number {\n    color: #33cc33 !important; /* Green for numbers */\n}\n\n.cm-s-retro .cm-keyword {\n    color: #ff00ff !important; /* Magenta for keywords */\n    font-weight: bold; /* Bold for emphasis */\n}\n\n.cm-s-retro .cm-operator {\n    color: #fff !important; /* White for operators */\n}\n\n.cm-s-retro .cm-variable {\n    color: #00ff00 !important; /* Green for variables */\n}\n\n.cm-s-retro .cm-variable-2 {\n    color: #33cc33 !important; /* Lighter green for secondary variables */\n}\n\n.cm-s-retro .cm-def {\n    color: #ff00ff !important; /* Magenta for definitions */\n}\n\n.cm-s-retro .cm-property {\n    color: #ffcc00 !important; /* Yellow for properties */\n}\n\n.cm-s-retro .cm-function {\n    color: #ff00ff !important; /* Magenta for functions */\n}\n\n.cm-s-retro .cm-builtin {\n    color: #33cc33 !important; /* Green for built-ins */\n}\n\n.cm-s-retro .cm-tag {\n    color: #ff3333 !important; /* Red for tags (if HTML mode is used) */\n}\n\n.cm-s-retro .cm-attribute {\n    color: #ffcc00 !important; /* Yellow for attributes */\n}\n\n/* Matching Brackets */\n.cm-s-retro .CodeMirror-matchingbracket {\n    color: #33cc33 !important; /* Green for matching brackets */\n    border-bottom: 2px solid #33cc33 !important;\n    background: none !important;\n}\n\n.cm-s-retro .CodeMirror-nonmatchingbracket {\n    color: #ff3333 !important; /* Red for non-matching brackets */\n    border-bottom: 2px solid #ff3333 !important;\n}\n\n/* Autocomplete Hints */\n.CodeMirror-hints {\n    background: #2b2b2b !important; /* Dark retro gray */\n    border: 2px solid #fff !important; /* White border */\n    color: #fff !important;\n    font-family: 'Press Start 2P', cursive !important;\n    font-size: 10px !important;\n    box-shadow: 4px 4px 0 #000; /* Retro shadow effect */\n}\n\n.CodeMirror-hints .CodeMirror-hint {\n    color: #ffcc00 !important; /* Yellow for hint items */\n    padding: 5px !important;\n}\n\n.CodeMirror-hints .CodeMirror-hint-active {\n    background: #ff3333 !important; /* Red for selected hint */\n    color: #000 !important;\n}\n\n/* Scrollbars (minimal retro style) */\n.CodeMirror-vscrollbar, .CodeMirror-hscrollbar {\n    background: #3c3c3c !important;\n}\n\n.CodeMirror-scrollbar-filler {\n    background: #000 !important;\n}\n\n/* Animations */\n@keyframes blink {\n    50% { opacity: 0; }\n}"
      },
      "codeMirrorTheme": {
        "title": "Code - Ez On Eyes",
        "css": ".CodeMirror {    background: #1e1e1e;    color: #d4d4d4;    font-size: 14px; } .CodeMirror-gutters {    background: #252525;  border-right: 1px solid #444; } .CodeMirror-linenumber {    color: #888; }.CodeMirror-cursor {    border-left: 1px solid #d4d4d4; } .CodeMirror-selected {    background: #3a3a3a; }.CodeMirror-focused .CodeMirror-selected {    background: #404040; /* Slightly lighter when focused */}.CodeMirror-activeline-background {    background: #2a2a2a; /* Subtle active line highlight */}.CodeMirror-matchingbracket {    color: #b5cea8; /* Muted green for matching brackets */}.CodeMirror-nonmatchingbracket {    color: #d16969; /* Soft red for non-matching */}/* Override default theme's syntax highlighting */.cm-s-default .cm-header { color: #dcdcaa; } /* Soft yellow (overrides #00f blue) */.cm-s-default .cm-quote { color: #b5cea8; } /* Muted green (overrides #090) */.cm-negative { color: #d16969; } /* Soft red */.cm-positive { color: #6a9955; } /* Muted green */.cm-header, .cm-strong { font-weight: 700; }.cm-em { font-style: italic; }.cm-s-default .cm-link { color: #d7ba7d; text-decoration: underline; } /* Muted yellow (overrides #00c blue) */.cm-strikethrough { text-decoration: line-through; }.cm-s-default .cm-keyword { color: #ce9178; } /* Soft orange (overrides #708 purple) */.cm-s-default .cm-atom { color: #d4d4d4; } /* Light gray (overrides #219 blue) */.cm-s-default .cm-number { color: #b5cea8; } /* Muted green (overrides #164) */.cm-s-default .cm-def { color: #dcdcaa; } /* Soft yellow (overrides #00f blue) */.cm-s-default .cm-variable-2 { color: #d4d4d4; } /* Light gray (overrides #05a blue) */.cm-s-default .cm-variable-3, .cm-s-default .cm-type { color: #dcdcaa; } /* Soft yellow (overrides #085 blue) */.cm-s-default .cm-comment { color: #6a9955; } /* Muted green (overrides #a50) */.cm-s-default .cm-string { color: #ce9178; } /* Soft orange (overrides #a11) */.cm-s-default .cm-string-2 { color: #d7ba7d; } /* Muted yellow (overrides #f50) */.cm-s-default .cm-meta { color: #d4d4d4; } /* Light gray (overrides #555) */.cm-s-default .cm-qualifier { color: #d4d4d4; } /* Light gray (overrides #555) */.cm-s-default .cm-builtin { color: #dcdcaa; } /* Soft yellow (overrides #30a) */.cm-s-default .cm-bracket { color: #d4d4d4; } /* Light gray (overrides #997) */.cm-s-default .cm-tag { color: #dcdcaa; } /* Soft yellow (overrides #170) */.cm-s-default .cm-attribute { color: #d4d4d4; } /* Light gray (overrides #00c blue) */.cm-s-default .cm-hr { color: #888; } /* Muted gray (overrides #999) */.cm-s-default .cm-link { color: #d7ba7d; } /* Muted yellow (overrides #00c blue) */.cm-s-default .cm-error { color: #d16969; } /* Soft red (overrides red) */.cm-invalidchar { color: #d16969; } /* Soft red *//* Search highlight */.cm-searching {    background-color: rgba(255, 255, 0, 0.2); /* Subtle yellow */}"
      },
      "professional": {
        "title": "Professional",
        "css": "/* Professional Theme */ @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;600&family=Inter:wght@300;400;500;600&display=swap');  body {     font-family: 'Inter', 'Roboto Mono', sans-serif;     background-color: #1a1a2e;     color: #e6e6fa;     line-height: 1.6; }  .sidebar {     background-color: rgba(34, 34, 54, 0.95);     border: 1px solid #4b5e87;     box-shadow: 0 4px 12px rgba(75, 94, 135, 0.2); }  .object-item {     background-color: rgba(34, 34, 54, 0.8);     border-left: 2px solid #8a4af0;     text-transform: uppercase;     letter-spacing: 0.5px;     transition: all 0.3s ease; }  .object-item:hover {     background-color: rgba(138, 74, 240, 0.15);     transform: translateX(3px); }  .object-item.selected {     background-color: rgba(138, 74, 240, 0.25);     border-left: 3px solid #8a4af0;     box-shadow: 0 0 6px rgba(138, 74, 240, 0.4); }  .editor {     background-color: rgba(34, 34, 54, 0.95);     border: 1px solid #4b5e87;     box-shadow: 0 4px 12px rgba(75, 94, 135, 0.15); }  #three-js-container {     border: 1px solid rgba(75, 94, 135, 0.6); }  .preview-canvas-container {     border: 1px solid #8a4af0;     box-shadow: 0 4px 12px rgba(138, 74, 240, 0.1); }  .preview {     background-color: rgba(34, 34, 54, 0.9);     border: 1px solid #4b5e87;     box-shadow: 0 4px 12px rgba(75, 94, 135, 0.15); }  #preview-canvas {     background-color: transparent;     border: 1px solid rgba(75, 94, 135, 0.5); }  .camera-controls {     background: rgba(26, 26, 46, 0.9);     border: 1px solid #4b5e87; }  .camera-controls button {     background-color: rgba(75, 94, 135, 0.3);     border: 1px solid #4b5e87;     color: #e6e6fa;     transition: all 0.3s ease; }  .camera-controls button:hover {     background-color: rgba(75, 94, 135, 0.5);     box-shadow: 0 2px 8px rgba(75, 94, 135, 0.3); }  .camera-controls .color-picker {     border: 1px solid #4b5e87; }  .camera-controls .size-slider {     background: #2a2a42;     border: 1px solid #4b5e87; }  label {     font-weight: 500;     text-transform: uppercase;     letter-spacing: 0.5px;     color: #8a4af0; }  input, textarea, select {     border: 1px solid #4b5e87;     background-color: rgba(34, 34, 54, 0.8);     color: #e6e6fa;     box-shadow: 0 2px 6px rgba(75, 94, 135, 0.1);     transition: all 0.3s ease; }  input:focus, textarea:focus, select:focus {     outline: none;     border-color: #8a4af0;     box-shadow: 0 0 8px rgba(138, 74, 240, 0.3); }  button {     background-color: rgba(75, 94, 135, 0.3);     border: 1px solid #4b5e87;     color: #e6e6fa;     text-transform: uppercase;     letter-spacing: 0.5px;     transition: all 0.3s ease; }  button:hover {     background-color: rgba(75, 94, 135, 0.5);     box-shadow: 0 2px 8px rgba(75, 94, 135, 0.3);     transform: translateY(-1px); }  button.primary {     background-color: rgba(138, 74, 240, 0.3);     border: 1px solid #8a4af0;     color: #e6e6fa; }  button.primary:hover {     background-color: rgba(138, 74, 240, 0.5);     box-shadow: 0 2px 8px rgba(138, 74, 240, 0.3); }  button.danger {     background-color: rgba(240, 74, 74, 0.3);     border: 1px solid #f04a4a;     color: #e6e6fa; }  button.danger:hover {     background-color: rgba(240, 74, 74, 0.5);     box-shadow: 0 2px 8px rgba(240, 74, 74, 0.3); }  button.active {     border: 1px solid #00cc99;     box-shadow: 0 0 8px rgba(0, 204, 153, 0.4);     color: #00cc99; }  .modal {     background-color: rgba(26, 26, 46, 0.9);     backdrop-filter: blur(3px); }  .modal-content {     background-color: rgba(34, 34, 54, 0.95);     border: 1px solid #4b5e87;     box-shadow: 0 8px 24px rgba(75, 94, 135, 0.2); }  .property-list {     border: 1px solid #4b5e87;     background-color: rgba(34, 34, 54, 0.8); }  .tab-navigation {     border-bottom: 1px solid #4b5e87; }  .tab {     text-transform: uppercase;     letter-spacing: 0.5px;     transition: all 0.3s ease; }  .tab:hover {     background-color: rgba(75, 94, 135, 0.2); }  .tab.active {     border-bottom: 2px solid #8a4af0;     box-shadow: 0 4px 8px -4px rgba(138, 74, 240, 0.4);     font-weight: 600; }  .instructions {     background-color: rgba(34, 34, 54, 0.8);     border-left: 3px solid #8a4af0;     box-shadow: 0 2px 6px rgba(138, 74, 240, 0.1); }  #grid-display {     background-color: rgba(26, 26, 46, 0.9);     border: 1px solid #4b5e87;     box-shadow: 0 4px 12px rgba(75, 94, 135, 0.15); }  .success-message {     color: #00cc99;     text-transform: uppercase;     letter-spacing: 0.5px;     animation: fadeOut 2s forwards;     animation-delay: 1s; }  .warning {     background-color: rgba(240, 74, 74, 0.15);     border-left: 3px solid #f04a4a;     box-shadow: 0 2px 6px rgba(240, 74, 74, 0.1); }  .main-content-container {     background-color: #1f1f38;     color: #e6e6fa; }  .content-sidebar {     background: linear-gradient(180deg, rgba(34, 34, 54, 0.95), rgba(26, 26, 46, 0.95));     border-right: 1px solid #4b5e87;     box-shadow: 0 4px 12px rgba(75, 94, 135, 0.15); }  #graphics-rightbar {     background: linear-gradient(180deg, rgba(34, 34, 54, 0.95), rgba(26, 26, 46, 0.95));     border-left: 1px solid #4b5e87;     box-shadow: 0 4px 12px rgba(75, 94, 135, 0.15); }  .grid-background {     background: #1a1a2e;     background-image: radial-gradient(rgba(75, 94, 135, 0.15) 1px, transparent 1px);     background-size: 30px 30px; }  .toolbar {     background: linear-gradient(90deg, rgba(34, 34, 54, 0.95), rgba(26, 26, 46, 0.95));     border-bottom: 1px solid #4b5e87; }  .btn {     border: 1px solid #4b5e87;     background-color: rgba(75, 94, 135, 0.3);     color: #e6e6fa;     text-transform: uppercase;     transition: all 0.3s ease; }  .btn:hover {     background-color: rgba(75, 94, 135, 0.5);     box-shadow: 0 2px 8px rgba(75, 94, 135, 0.3);     transform: translateY(-1px); }  .btn-primary {     background-color: rgba(138, 74, 240, 0.3);     border: 1px solid #8a4af0;     color: #e6e6fa; }  .btn-primary:hover {     background-color: rgba(138, 74, 240, 0.5);     box-shadow: 0 2px 8px rgba(138, 74, 240, 0.3); }  .btn-danger {     background-color: rgba(240, 74, 74, 0.3);     border: 1px solid #f04a4a;     color: #e6e6fa; }  .btn-danger:hover {     background-color: rgba(240, 74, 74, 0.5);     box-shadow: 0 2px 8px rgba(240, 74, 74, 0.3); }  .btn-secondary {     background-color: rgba(75, 94, 135, 0.25);     border: 1px solid #4b5e87; }  .btn-secondary:hover {     background-color: rgba(75, 94, 135, 0.4);     box-shadow: 0 2px 8px rgba(75, 94, 135, 0.3); }  .btn-special {     background-color: rgba(0, 204, 153, 0.3);     border: 1px solid #00cc99;     color: #e6e6fa; }  .btn-special:hover {     background-color: rgba(0, 204, 153, 0.5);     box-shadow: 0 2px 8px rgba(0, 204, 153, 0.3); }  #shape-list {     border-bottom: 1px solid rgba(75, 94, 135, 0.3); }  .shape-item {     background-color: rgba(34, 34, 54, 0.8);     border: 1px solid #4b5e87;     transition: all 0.3s ease; }  .shape-item:hover {     background-color: rgba(75, 94, 135, 0.2);     transform: translateX(3px); }  .shape-item.active {     background-color: rgba(0, 204, 153, 0.15);     border-color: #00cc99;     color: #00cc99;     box-shadow: 0 0 8px rgba(0, 204, 153, 0.3); }  #inspector {     background: rgba(34, 34, 54, 0.95);     border-top: 1px solid #4b5e87; }  .form-row label {     color: #8a4af0; }  .form-row input, .form-row select {     border: 1px solid #4b5e87;     background-color: rgba(34, 34, 54, 0.8);     color: #e6e6fa;     box-shadow: 0 2px 6px rgba(75, 94, 135, 0.1); }  .scene-info {     background: rgba(26, 26, 46, 0.9);     color: #e6e6fa;     box-shadow: 0 4px 12px rgba(75, 94, 135, 0.15);     border: 1px solid #4b5e87; }  .button-danger {     background-color: rgba(240, 74, 74, 0.3);     border: 1px solid #f04a4a;     color: #e6e6fa; }  .button-danger:hover {     background-color: rgba(240, 74, 74, 0.5);     box-shadow: 0 2px 8px rgba(240, 74, 74, 0.3); }  h2, h3 {     color: #8a4af0;     text-transform: uppercase;     letter-spacing: 1px;     margin-bottom: 12px;     padding-bottom: 4px;     border-bottom: 1px solid #4b5e87;     text-shadow: 0 0 4px rgba(138, 74, 240, 0.3); }  ::-webkit-scrollbar {     width: 6px;     height: 6px; }  ::-webkit-scrollbar-track {     background: rgba(34, 34, 54, 0.8); }  ::-webkit-scrollbar-thumb {     background: #4b5e87;     border-radius: 3px; }  ::-webkit-scrollbar-thumb:hover {     background: #8a4af0; }"
      },
      "professional2": {
        "title": "Professional Warm",
        "css": "/* Professional Cyberpunk Variation - Warm Edition */ @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;500;600&family=Inter:wght@300;400;500;600&display=swap');  body {     font-family: 'Inter', 'Roboto Mono', sans-serif;     background-color: #2b1e1e; /* Deep reddish-brown */     color: #f4e1d2; /* Soft cream for text */     line-height: 1.6; }  .sidebar {     background-color: rgba(54, 36, 36, 0.95); /* Muted dark red */     border: 1px solid #7a4e4e; /* Subtle reddish-gray */     box-shadow: 0 4px 12px rgba(122, 78, 78, 0.2); }  .object-item {     background-color: rgba(54, 36, 36, 0.8);     border-left: 2px solid #d97706; /* Warm amber */     text-transform: uppercase;     letter-spacing: 0.5px;     transition: all 0.3s ease; }  .object-item:hover {     background-color: rgba(217, 119, 6, 0.15);     transform: translateX(3px); }  .object-item.selected {     background-color: rgba(217, 119, 6, 0.25);     border-left: 3px solid #d97706;     box-shadow: 0 0 6px rgba(217, 119, 6, 0.4); }  .editor {     background-color: rgba(54, 36, 36, 0.95);     border: 1px solid #7a4e4e;     box-shadow: 0 4px 12px rgba(122, 78, 78, 0.15); }  #three-js-container {     border: 1px solid rgba(122, 78, 78, 0.6); }  .preview-canvas-container {     border: 1px solid #d97706;     box-shadow: 0 4px 12px rgba(217, 119, 6, 0.1); }  .preview {     background-color: rgba(54, 36, 36, 0.9);     border: 1px solid #7a4e4e;     box-shadow: 0 4px 12px rgba(122, 78, 78, 0.15); }  #preview-canvas {     background-color: transparent;     border: 1px solid rgba(122, 78, 78, 0.5); }  .camera-controls {     background: rgba(46, 28, 28, 0.9); /* Darker reddish tint */     border: 1px solid #7a4e4e; }  .camera-controls button {     background-color: rgba(122, 78, 78, 0.3);     border: 1px solid #7a4e4e;     color: #f4e1d2;     transition: all 0.3s ease; }  .camera-controls button:hover {     background-color: rgba(122, 78, 78, 0.5);     box-shadow: 0 2px 8px rgba(122, 78, 78, 0.3); }  .camera-controls .color-picker {     border: 1px solid #7a4e4e; }  .camera-controls .size-slider {     background: #3a2424;     border: 1px solid #7a4e4e; }  label {     font-weight: 500;     text-transform: uppercase;     letter-spacing: 0.5px;     color: #d97706; /* Amber for labels */ }  input, textarea, select {     border: 1px solid #7a4e4e;     background-color: rgba(54, 36, 36, 0.8);     color: #f4e1d2;     box-shadow: 0 2px 6px rgba(122, 78, 78, 0.1);     transition: all 0.3s ease; }  input:focus, textarea:focus, select:focus {     outline: none;     border-color: #d97706;     box-shadow: 0 0 8px rgba(217, 119, 6, 0.3); }  button {     background-color: rgba(122, 78, 78, 0.3);     border: 1px solid #7a4e4e;     color: #f4e1d2;     text-transform: uppercase;     letter-spacing: 0.5px;     transition: all 0.3s ease; }  button:hover {     background-color: rgba(122, 78, 78, 0.5);     box-shadow: 0 2px 8px rgba(122, 78, 78, 0.3);     transform: translateY(-1px); }  button.primary {     background-color: rgba(217, 119, 6, 0.3);     border: 1px solid #d97706;     color: #f4e1d2; }  button.primary:hover {     background-color: rgba(217, 119, 6, 0.5);     box-shadow: 0 2px 8px rgba(217, 119, 6, 0.3); }  button.danger {     background-color: rgba(220, 38, 38, 0.3); /* Softer red */     border: 1px solid #dc2626;     color: #f4e1d2; }  button.danger:hover {     background-color: rgba(220, 38, 38, 0.5);     box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3); }  button.active {     border: 1px solid #10b981; /* Emerald green for active state */     box-shadow: 0 0 8px rgba(16, 185, 129, 0.4);     color: #10b981; }  .modal {     background-color: rgba(46, 28, 28, 0.9);     backdrop-filter: blur(3px); }  .modal-content {     background-color: rgba(54, 36, 36, 0.95);     border: 1px solid #7a4e4e;     box-shadow: 0 8px 24px rgba(122, 78, 78, 0.2); }  .property-list {     border: 1px solid #7a4e4e;     background-color: rgba(54, 36, 36, 0.8); }  .tab-navigation {     border-bottom: 1px solid #7a4e4e; }  .tab {     text-transform: uppercase;     letter-spacing: 0.5px;     transition: all 0.3s ease; }  .tab:hover {     background-color: rgba(122, 78, 78, 0.2); }  .tab.active {     border-bottom: 2px solid #d97706;     box-shadow: 0 4px 8px -4px rgba(217, 119, 6, 0.4);     font-weight: 600; }  .instructions {     background-color: rgba(54, 36, 36, 0.8);     border-left: 3px solid #d97706;     box-shadow: 0 2px 6px rgba(217, 119, 6, 0.1); }  #grid-display {     background-color: rgba(46, 28, 28, 0.9);     border: 1px solid #7a4e4e;     box-shadow: 0 4px 12px rgba(122, 78, 78, 0.15); }  .success-message {     color: #10b981; /* Emerald green for success */     text-transform: uppercase;     letter-spacing: 0.5px;     animation: fadeOut 2s forwards;     animation-delay: 1s; }  .warning {     background-color: rgba(220, 38, 38, 0.15);     border-left: 3px solid #dc2626;     box-shadow: 0 2px 6px rgba(220, 38, 38, 0.1); }  .main-content-container {     background-color: #332121; /* Slightly lighter reddish-brown */     color: #f4e1d2; }  .content-sidebar {     background: linear-gradient(180deg, rgba(54, 36, 36, 0.95), rgba(46, 28, 28, 0.95));     border-right: 1px solid #7a4e4e;     box-shadow: 0 4px 12px rgba(122, 78, 78, 0.15); }  #graphics-rightbar {     background: linear-gradient(180deg, rgba(54, 36, 36, 0.95), rgba(46, 28, 28, 0.95));     border-left: 1px solid #7a4e4e;     box-shadow: 0 4px 12px rgba(122, 78, 78, 0.15); }  .grid-background {     background: #2b1e1e;     background-image: radial-gradient(rgba(122, 78, 78, 0.15) 1px, transparent 1px);     background-size:30px 30px; }  .toolbar {     background: linear-gradient(90deg, rgba(54, 36, 36, 0.95), rgba(46, 28, 28, 0.95));     border-bottom: 1px solid #7a4e4e; }  .btn {     border: 1px solid #7a4e4e;     background-color: rgba(122, 78, 78, 0.3);     color: #f4e1d2;     text-transform: uppercase;     transition: all 0.3s ease; }  .btn:hover {     background-color: rgba(122, 78, 78, 0.5);     box-shadow: 0 2px 8px rgba(122, 78, 78, 0.3);     transform: translateY(-1px); }  .btn-primary {     background-color: rgba(217, 119, 6, 0.3);     border: 1px solid #d97706;     color: #f4e1d2; }  .btn-primary:hover {     background-color: rgba(217, 119, 6, 0.5);     box-shadow: 0 2px 8px rgba(217, 119, 6, 0.3); }  .btn-danger {     background-color: rgba(220, 38, 38, 0.3);     border: 1px solid #dc2626;     color: #f4e1d2; }  .btn-danger:hover {     background-color: rgba(220, 38, 38, 0.5);     box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3); }  .btn-secondary {     background-color: rgba(122, 78, 78, 0.25);     border: 1px solid #7a4e4e; }  .btn-secondary:hover {     background-color: rgba(122, 78, 78, 0.4);     box-shadow: 0 2px 8px rgba(122, 78, 78, 0.3); }  .btn-special {     background-color: rgba(16, 185, 129, 0.3);     border: 1px solid #10b981;     color: #f4e1d2; }  .btn-special:hover {     background-color: rgba(16, 185, 129, 0.5);     box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3); }  #shape-list {     border-bottom: 1px solid rgba(122, 78, 78, 0.3); }  .shape-item {     background-color: rgba(54, 36, 36, 0.8);     border: 1px solid #7a4e4e;     transition: all 0.3s ease; }  .shape-item:hover {     background-color: rgba(122, 78, 78, 0.2);     transform: translateX(3px); }  .shape-item.active {     background-color: rgba(16, 185, 129, 0.15);     border-color: #10b981;     color: #10b981;     box-shadow: 0 0 8px rgba(16, 185, 129, 0.3); }  #inspector {     background: rgba(54, 36, 36, 0.95);     border-top: 1px solid #7a4e4e; }  .form-row label {     color: #d97706; }  .form-row input, .form-row select {     border: 1px solid #7a4e4e;     background-color: rgba(54, 36, 36, 0.8);     color: #f4e1d2;     box-shadow: 0 2px 6px rgba(122, 78, 78, 0.1); }  .scene-info {     background: rgba(46, 28, 28, 0.9prisma);     color: #f4e1d2;     box-shadow: 0 4px 12px rgba(122, 78, 78, 0.15);     border: 1px solid #7a4e4e; }  .button-danger {     background-color: rgba(220, 38, 38, 0.3);     border: 1px solid #dc2626;     color: #f4e1d2; }  .button-danger:hover {     background-color: rgba(220, 38, 38, 0.5);     box-shadow: 0 2px 8px rgba(220, 38, 38, 0.3); }  h2, h3 {     color: #d97706;     text-transform: uppercase;     letter-spacing: 1px;     margin-bottom: 12px;     padding-bottom: 4px;     border-bottom: 1px solid #7a4e4e;     text-shadow: 0 0 4px rgba(217, 119, 6, 0.3); }  ::-webkit-scrollbar {     width: 6px;     height: 6px; }  ::-webkit-scrollbar-track {     background: rgba(54, 36, 36, 0.8); }  ::-webkit-scrollbar-thumb {     background: #7a4e4e;     border-radius: 3px; }  ::-webkit-scrollbar-thumb:hover {     background: #d97706; }"
      },
      "professional3": {
        "title": "Claude",
        "css": "/* Eclipse Theme - A premium dark UI experience */ @import url('https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600&family=JetBrains+Mono:wght@400;500;600&display=swap');  :root {   --bg-primary: #0f111a;   --bg-secondary: #141725;   --bg-tertiary: #1a1d2d;   --accent-primary: #7c4dff;   --accent-secondary: #00bcd4;   --accent-tertiary: #ff4081;   --text-primary: #eceff1;   --text-secondary: #b0bec5;   --border-light: rgba(99, 114, 166, 0.25);   --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.3);   --shadow-md: 0 4px 16px rgba(0, 0, 0, 0.4);   --shadow-lg: 0 8px 32px rgba(0, 0, 0, 0.5);   --gradient-bg: linear-gradient(135deg, rgba(20, 23, 37, 0.95), rgba(15, 17, 26, 0.95));   --gradient-accent: linear-gradient(135deg, var(--accent-primary), var(--accent-secondary)); }  body {   font-family: 'Space Grotesk', sans-serif;   background-color: var(--bg-primary);   color: var(--text-primary);   line-height: 1.6;   transition: background-color 0.3s ease;   background-image:      radial-gradient(circle at 15% 15%, rgba(124, 77, 255, 0.08) 0%, transparent 25%),     radial-gradient(circle at 85% 85%, rgba(0, 188, 212, 0.08) 0%, transparent 25%); }  /* Modern sidebar with glassmorphism effect */ .sidebar {   background: var(--gradient-bg);   border-right: 1px solid var(--border-light);   box-shadow: var(--shadow-md);   backdrop-filter: blur(10px);   -webkit-backdrop-filter: blur(10px); }  .object-item {   background-color: transparent;   border-left: 2px solid transparent;   text-transform: uppercase;   letter-spacing: 0.5px;   color: var(--text-secondary);   font-weight: 500;   transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);   margin-bottom: 4px;   border-radius: 0 4px 4px 0; }  .object-item:hover {   background-color: rgba(124, 77, 255, 0.1);   border-left: 2px solid var(--accent-primary);   color: var(--text-primary);   transform: translateX(2px); }  .object-item.selected {   background: linear-gradient(90deg, rgba(124, 77, 255, 0.15), rgba(124, 77, 255, 0.05));   border-left: 3px solid var(--accent-primary);   color: var(--accent-primary);   box-shadow: 0 0 12px rgba(124, 77, 255, 0.2);   font-weight: 600; }  /* Editor area with polished look */ .editor {   background-color: var(--bg-secondary);   border: 1px solid var(--border-light);   box-shadow: var(--shadow-md);   border-radius: 6px;   overflow: hidden; }  #three-js-container {   border: 1px solid var(--border-light);   border-radius: 6px;   box-shadow: inset 0 0 16px rgba(0, 0, 0, 0.2);   background: rgba(15, 17, 26, 0.5); }  .preview-canvas-container {   border: 1px solid var(--accent-primary);   box-shadow: 0 0 16px rgba(124, 77, 255, 0.15);   border-radius: 6px;   overflow: hidden; }  .preview {   background-color: var(--bg-secondary);   border: 1px solid var(--border-light);   box-shadow: var(--shadow-md);   border-radius: 6px; }  #preview-canvas {   background-color: transparent;   border: 1px solid var(--border-light);   border-radius: 4px; }  /* Enhanced camera controls with dynamic hover effects */ .camera-controls {   background: var(--bg-tertiary);   border: 1px solid var(--border-light);   border-radius: 6px;   padding: 12px;   box-shadow: var(--shadow-sm); }  .camera-controls button {   background-color: rgba(99, 114, 166, 0.15);   border: 1px solid var(--border-light);   color: var(--text-primary);   border-radius: 4px;   padding: 8px 12px;   font-weight: 500;   transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1); }  .camera-controls button:hover {   background-color: rgba(124, 77, 255, 0.15);   border-color: var(--accent-primary);   box-shadow: 0 0 12px rgba(124, 77, 255, 0.2);   transform: translateY(-2px) scale(1.02); }  .camera-controls button:active {   transform: translateY(1px); }  .camera-controls .color-picker {   border: 1px solid var(--border-light);   border-radius: 4px;   overflow: hidden;   box-shadow: var(--shadow-sm); }  .camera-controls .size-slider {   background: var(--bg-secondary);   border: 1px solid var(--border-light);   border-radius: 4px;   height: 6px;   box-shadow: inset 0 0 4px rgba(0, 0, 0, 0.2); }  .camera-controls .size-slider::-webkit-slider-thumb {   background: var(--accent-primary);   box-shadow: 0 0 8px rgba(124, 77, 255, 0.4);   border-radius: 50%;   cursor: pointer;   transition: all 0.2s ease; }  .camera-controls .size-slider::-webkit-slider-thumb:hover {   transform: scale(1.2); }  /* Form elements with attractive focus states */ label {   font-weight: 500;   text-transform: uppercase;   letter-spacing: 0.5px;   color: var(--accent-primary);   margin-bottom: 6px;   display: block;   font-size: 0.85rem; }  input, textarea, select {   border: 1px solid var(--border-light);   background-color: rgba(15, 17, 26, 0.6);   color: var(--text-primary);   border-radius: 4px;   padding: 10px 12px;   box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);   transition: all 0.3s ease;   font-family: 'JetBrains Mono', monospace; }  input:focus, textarea:focus, select:focus {   outline: none;   border-color: var(--accent-primary);   box-shadow: 0 0 0 3px rgba(124, 77, 255, 0.2), inset 0 2px 4px rgba(0, 0, 0, 0.1);   background-color: rgba(20, 23, 37, 0.8); }  /* Modern button styles with micro-interactions */ button {   background-color: var(--bg-tertiary);   border: 1px solid var(--border-light);   color: var(--text-primary);   text-transform: uppercase;   letter-spacing: 0.5px;   font-weight: 500;   padding: 10px 16px;   border-radius: 4px;   transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);   position: relative;   overflow: hidden; }  button:hover {   background-color: rgba(99, 114, 166, 0.2);   border-color: var(--border-light);   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);   transform: translateY(-2px); }  button:active {   transform: translateY(1px); }  button::after {   content: '';   position: absolute;   top: 50%;   left: 50%;   width: 100%;   height: 100%;   background: radial-gradient(circle, rgba(255, 255, 255, 0.2) 0%, transparent 50%);   transform: scale(0);   opacity: 0;   transition: transform 0.5s, opacity 0.3s;   pointer-events: none; }  button:active::after {   transform: scale(2);   opacity: 1;   transition: 0s; }  button.primary {   background: linear-gradient(135deg, rgba(124, 77, 255, 0.2), rgba(0, 188, 212, 0.2));   border: 1px solid var(--accent-primary);   color: var(--text-primary);   position: relative;   z-index: 1; }  button.primary:hover {   background: linear-gradient(135deg, rgba(124, 77, 255, 0.3), rgba(0, 188, 212, 0.3));   box-shadow: 0 4px 16px rgba(124, 77, 255, 0.3); }  button.primary::before {   content: '';   position: absolute;   top: 0;   left: 0;   right: 0;   bottom: 0;   background: var(--gradient-accent);   opacity: 0;   z-index: -1;   transition: opacity 0.3s ease;   border-radius: 3px; }  button.primary:hover::before {   opacity: 0.1; }  button.danger {   background-color: rgba(244, 67, 54, 0.15);   border: 1px solid #f44336;   color: #f44336; }  button.danger:hover {   background-color: rgba(244, 67, 54, 0.25);   box-shadow: 0 4px 16px rgba(244, 67, 54, 0.2); }  button.active {   border: 1px solid var(--accent-secondary);   box-shadow: 0 0 12px rgba(0, 188, 212, 0.3);   color: var(--accent-secondary);   background-color: rgba(0, 188, 212, 0.15); }  /* Modal with glassmorphism effect */ .modal {   background-color: rgba(15, 17, 26, 0.7);   backdrop-filter: blur(8px);   -webkit-backdrop-filter: blur(8px); }  .modal-content {   background-color: var(--bg-secondary);   border: 1px solid var(--border-light);   box-shadow: var(--shadow-lg);   border-radius: 8px;   overflow: hidden;   animation: modalAppear 0.3s ease; }  @keyframes modalAppear {   from {     opacity: 0;     transform: scale(0.95) translateY(-10px);   }   to {     opacity: 1;     transform: scale(1) translateY(0);   } }  .property-list {   border: 1px solid var(--border-light);   background-color: var(--bg-tertiary);   border-radius: 6px;   overflow: hidden; }  /* Tab navigation with smooth transitions */ .tab-navigation {   border-bottom: 1px solid var(--border-light);   display: flex;   gap: 4px;   padding: 0 6px; }  .tab {   text-transform: uppercase;   letter-spacing: 0.5px;   font-weight: 500;   padding: 10px 16px;   color: var(--text-secondary);   position: relative;   transition: all 0.3s ease;   border-radius: 4px 4px 0 0; }  .tab:hover {   background-color: rgba(99, 114, 166, 0.1);   color: var(--text-primary); }  .tab.active {   color: var(--accent-primary);   font-weight: 600;   background-color: rgba(124, 77, 255, 0.05); }  .tab.active::after {   content: '';   position: absolute;   bottom: -1px;   left: 0;   right: 0;   height: 2px;   background: var(--gradient-accent);   box-shadow: 0 0 8px rgba(124, 77, 255, 0.5); }  /* Stylized instructions and warnings */ .instructions {   background-color: rgba(124, 77, 255, 0.05);   border-left: 3px solid var(--accent-primary);   border-radius: 0 4px 4px 0;   padding: 12px 16px;   margin: 16px 0;   box-shadow: var(--shadow-sm);   position: relative; }  .instructions::before {   content: 'i';   position: absolute;   left: -12px;   top: 10px;   width: 20px;   height: 20px;   background: var(--accent-primary);   border-radius: 50%;   display: flex;   align-items: center;   justify-content: center;   font-weight: bold;   font-style: italic;   color: white;   font-size: 14px; }  #grid-display {   background-color: var(--bg-secondary);   border: 1px solid var(--border-light);   box-shadow: var(--shadow-md);   border-radius: 6px;   overflow: hidden; }  .success-message {   color: #4caf50;   text-transform: uppercase;   letter-spacing: 0.5px;   font-weight: 500;   animation: fadeOut 2s forwards;   animation-delay: 1.5s;   padding: 8px 12px;   background-color: rgba(76, 175, 80, 0.1);   border-radius: 4px;   display: inline-block; }  @keyframes fadeOut {   from { opacity: 1; }   to { opacity: 0; } }  .warning {   background-color: rgba(244, 67, 54, 0.1);   border-left: 3px solid #f44336;   border-radius: 0 4px 4px 0;   padding: 12px 16px;   margin: 16px 0;   box-shadow: var(--shadow-sm);   position: relative; }  .warning::before {   content: '!';   position: absolute;   left: -12px;   top: 10px;   width: 20px;   height: 20px;   background: #f44336;   border-radius: 50%;   display: flex;   align-items: center;   justify-content: center;   font-weight: bold;   color: white;   font-size: 14px; }  /* Content containers with subtle gradients */ .main-content-container {   background-color: var(--bg-primary);   color: var(--text-primary); }  .content-sidebar {   background: var(--gradient-bg);   border-right: 1px solid var(--border-light);   box-shadow: var(--shadow-md);   backdrop-filter: blur(10px);   -webkit-backdrop-filter: blur(10px); }  #graphics-rightbar {   background: var(--gradient-bg);   border-left: 1px solid var(--border-light);   box-shadow: var(--shadow-md);   backdrop-filter: blur(10px);   -webkit-backdrop-filter: blur(10px); }  /* Subtle grid background */ .grid-background {   background: var(--bg-primary);   background-image:      linear-gradient(rgba(99, 114, 166, 0.05) 1px, transparent 1px),     linear-gradient(90deg, rgba(99, 114, 166, 0.05) 1px, transparent 1px);   background-size: 20px 20px; }  /* Toolbar with subtle glassmorphism */ .toolbar {   background: var(--gradient-bg);   border-bottom: 1px solid var(--border-light);   box-shadow: var(--shadow-sm);   backdrop-filter: blur(10px);   -webkit-backdrop-filter: blur(10px);   padding: 8px 16px;   display: flex;   align-items: center;   gap: 8px; }  /* Button variations with consistent styling */ .btn {   border: 1px solid var(--border-light);   background-color: rgba(99, 114, 166, 0.1);   color: var(--text-primary);   text-transform: uppercase;   letter-spacing: 0.5px;   font-weight: 500;   padding: 8px 14px;   border-radius: 4px;   transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);   position: relative;   overflow: hidden;   font-size: 0.85rem; }  .btn:hover {   background-color: rgba(99, 114, 166, 0.2);   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);   transform: translateY(-2px); }  .btn:active {   transform: translateY(1px); }  .btn-primary {   background: linear-gradient(135deg, rgba(124, 77, 255, 0.2), rgba(0, 188, 212, 0.2));   border: 1px solid var(--accent-primary);   color: var(--text-primary);   position: relative;   z-index: 1; }  .btn-primary:hover {   background: linear-gradient(135deg, rgba(124, 77, 255, 0.3), rgba(0, 188, 212, 0.3));   box-shadow: 0 4px 16px rgba(124, 77, 255, 0.2); }  .btn-primary::before {   content: '';   position: absolute;   top: 0;   left: 0;   right: 0;   bottom: 0;   background: var(--gradient-accent);   opacity: 0;   z-index: -1;   transition: opacity 0.3s ease;   border-radius: 3px; }  .btn-primary:hover::before {   opacity: 0.1; }  .btn-danger {   background-color: rgba(244, 67, 54, 0.15);   border: 1px solid #f44336;   color: #f44336; }  .btn-danger:hover {   background-color: rgba(244, 67, 54, 0.25);   box-shadow: 0 4px 16px rgba(244, 67, 54, 0.2); }  .btn-secondary {   background-color: rgba(99, 114, 166, 0.1);   border: 1px solid var(--border-light); }  .btn-secondary:hover {   background-color: rgba(99, 114, 166, 0.2);   box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15); }  .btn-special {   background-color: rgba(0, 188, 212, 0.15);   border: 1px solid var(--accent-secondary);   color: var(--accent-secondary); }  .btn-special:hover {   background-color: rgba(0, 188, 212, 0.25);   box-shadow: 0 4px 16px rgba(0, 188, 212, 0.2); }  /* Shape list with improved visual hierarchy */ #shape-list {   border-bottom: 1px solid var(--border-light);   padding-bottom: 16px;   margin-bottom: 16px; }  .shape-item {   background-color: var(--bg-tertiary);   border: 1px solid var(--border-light);   border-radius: 4px;   padding: 10px 14px;   margin-bottom: 6px;   transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);   display: flex;   align-items: center;   gap: 8px; }  .shape-item:hover {   background-color: rgba(99, 114, 166, 0.15);   transform: translateX(3px);   border-color: var(--border-light); }  .shape-item.active {   background-color: rgba(0, 188, 212, 0.1);   border-color: var(--accent-secondary);   color: var(--accent-secondary);   box-shadow: 0 0 12px rgba(0, 188, 212, 0.15);   font-weight: 500; }  /* Inspector panel with clean design */ #inspector {   background: var(--bg-secondary);   border-top: 1px solid var(--border-light);   padding: 16px; }  .form-row {   margin-bottom: 12px; }  .form-row label {   color: var(--accent-primary);   margin-bottom: 6px; }  .form-row input, .form-row select {   width: 100%;   border: 1px solid var(--border-light);   background-color: rgba(15, 17, 26, 0.6);   color: var(--text-primary);   padding: 10px 12px;   border-radius: 4px; }  /* Scene info with modern styling */ .scene-info {   background: var(--bg-tertiary);   color: var(--text-primary);   border: 1px solid var(--border-light);   border-radius: 6px;   padding: 12px 16px;   margin-bottom: 16px;   box-shadow: var(--shadow-sm); }  .button-danger {   background-color: rgba(244, 67, 54, 0.15);   border: 1px solid #f44336;   color: #f44336;   padding: 10px 16px;   border-radius: 4px;   font-weight: 500;   transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1); }  .button-danger:hover {   background-color: rgba(244, 67, 54, 0.25);   box-shadow: 0 4px 16px rgba(244, 67, 54, 0.2);   transform: translateY(-2px); }  /* Typography improvements */ h2, h3 {   color: var(--accent-primary);   text-transform: uppercase;   letter-spacing: 1px;   margin-bottom: 16px;   padding-bottom: 8px;   border-bottom: 1px solid var(--border-light);   font-weight: 600;   text-shadow: 0 0 20px rgba(124, 77, 255, 0.3);   position: relative; }  h2::after, h3::after {   content: '';   position: absolute;   bottom: -1px;   left: 0;   width: 50px;   height: 2px;   background: var(--gradient-accent);   box-shadow: 0 0 8px rgba(124, 77, 255, 0.5); }  /* Sleek scrollbars */ ::-webkit-scrollbar {   width: 6px;   height: 6px; }  ::-webkit-scrollbar-track {   background: var(--bg-tertiary);   border-radius: 3px; }  ::-webkit-scrollbar-thumb {   background: rgba(124, 77, 255, 0.3);   border-radius: 3px;   border: 1px solid var(--bg-tertiary); }  ::-webkit-scrollbar-thumb:hover {   background: var(--accent-primary); }  /* Animations and transitions */ @keyframes pulse {   0% { box-shadow: 0 0 0 0 rgba(124, 77, 255, 0.4); }   70% { box-shadow: 0 0 0 10px rgba(124, 77, 255, 0); }   100% { box-shadow: 0 0 0 0 rgba(124, 77, 255, 0); } }  .pulse-animation {   animation: pulse 2s infinite; }  /* Tooltips */ [data-tooltip] {   position: relative; }  [data-tooltip]::after {   content: attr(data-tooltip);   position: absolute;   bottom: 125%;   left: 50%;   transform: translateX(-50%);   padding: 6px 10px;   background: var(--bg-tertiary);   color: var(--text-primary);   border-radius: 4px;   font-size: 0.75rem;   white-space: nowrap;   opacity: 0;   visibility: hidden;   transition: all 0.3s ease;   z-index: 100;   box-shadow: var(--shadow-md);   border: 1px solid var(--border-light); }  [data-tooltip]:hover::after {   opacity: 1;   visibility: visible; }"
      },
      "claude2": {
        "title": "Claude 2",
        "css": "/* Professional Theme - Clean UI */ @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=IBM+Plex+Mono:wght@400;500&display=swap');  :root {   --bg-primary: #16192e;   --bg-secondary: #1d2035;   --bg-tertiary: #252a43;   --accent-primary: #4d7cff;   --accent-muted: rgba(77, 124, 255, 0.15);   --text-primary: #e9edf5;   --text-secondary: #a9b1c3;   --border-color: rgba(108, 123, 163, 0.25);   --shadow-sm: 0 2px 6px rgba(0, 0, 0, 0.2);   --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.25); }  body {   font-family: 'Inter', sans-serif;   background-color: var(--bg-primary);   color: var(--text-primary);   line-height: 1.6; }  /* Sidebar styling */ .sidebar {   background-color: var(--bg-secondary);   border-right: 1px solid var(--border-color);   box-shadow: var(--shadow-sm); }  .object-item {   background-color: transparent;   border-left: 2px solid transparent;   text-transform: none;   letter-spacing: 0.2px;   color: var(--text-secondary);   font-weight: 400;   transition: all 0.2s ease;   padding: 10px 14px;   margin-bottom: 2px; }  .object-item:hover {   background-color: var(--bg-tertiary);   border-left: 2px solid var(--accent-primary);   color: var(--text-primary); }  .object-item.selected {   background-color: var(--accent-muted);   border-left: 2px solid var(--accent-primary);   color: var(--text-primary);   font-weight: 500; }  /* Editor area */ .editor {   background-color: var(--bg-secondary);   border: 1px solid var(--border-color);   box-shadow: var(--shadow-sm);   border-radius: 4px; }  #three-js-container {   border: 1px solid var(--border-color);   border-radius: 4px;   background: var(--bg-primary); }  .preview-canvas-container {   border: 1px solid var(--border-color);   box-shadow: var(--shadow-sm);   border-radius: 4px; }  .preview {   background-color: var(--bg-secondary);   border: 1px solid var(--border-color);   box-shadow: var(--shadow-sm);   border-radius: 4px; }  #preview-canvas {   background-color: transparent;   border: 1px solid var(--border-color);   border-radius: 2px; }  /* Camera controls */ .camera-controls {   background: var(--bg-tertiary);   border: 1px solid var(--border-color);   border-radius: 4px;   padding: 12px; }  .camera-controls button {   background-color: var(--bg-secondary);   border: 1px solid var(--border-color);   color: var(--text-primary);   border-radius: 3px;   padding: 8px 12px;   transition: all 0.2s ease; }  .camera-controls button:hover {   background-color: var(--accent-muted);   border-color: var(--accent-primary); }  .camera-controls .color-picker {   border: 1px solid var(--border-color);   border-radius: 3px; }  .camera-controls .size-slider {   background: var(--bg-secondary);   border: 1px solid var(--border-color);   border-radius: 3px;   height: 5px; }  .camera-controls .size-slider::-webkit-slider-thumb {   background: var(--accent-primary);   border-radius: 50%;   cursor: pointer; }  /* Form elements */ label {   font-weight: 500;   color: var(--text-primary);   margin-bottom: 6px;   display: block;   font-size: 0.875rem; }  input, textarea, select {   border: 1px solid var(--border-color);   background-color: var(--bg-secondary);   color: var(--text-primary);   border-radius: 3px;   width: calc(100% - 24px);  padding: 8px 12px;   transition: all 0.2s ease;   font-family: 'IBM Plex Mono', monospace; }  input:focus, textarea:focus, select:focus {   outline: none;   border-color: var(--accent-primary);   box-shadow: 0 0 0 2px var(--accent-muted); }  /* Button styles */ button {   background-color: var(--bg-tertiary);   border: 1px solid var(--border-color);   color: var(--text-primary);   font-weight: 500;   padding: 8px 14px;   border-radius: 3px;   transition: all 0.2s ease; }  button:hover {   background-color: var(--accent-muted);   border-color: var(--accent-primary); }  button.primary {   background-color: var(--accent-primary);   border: 1px solid var(--accent-primary);   color: white; }  button.primary:hover {   background-color: #3a6ae6;   border-color: #3a6ae6;   box-shadow: var(--shadow-sm); }  button.danger {   background-color: rgba(235, 68, 68, 0.15);   border: 1px solid #eb4444;   color: #eb4444; }  button.danger:hover {   background-color: rgba(235, 68, 68, 0.25);   box-shadow: var(--shadow-sm); }  button.active {   background-color: rgba(52, 199, 154, 0.15);   border: 1px solid #34c79a;   color: #34c79a; }  /* Modal styling */ .modal {   background-color: rgba(22, 25, 46, 0.8); }  .modal-content {   background-color: var(--bg-secondary);   border: 1px solid var(--border-color);   box-shadow: var(--shadow-md);   border-radius: 4px; }  .property-list {   border: 1px solid var(--border-color);   background-color: var(--bg-tertiary);   border-radius: 4px; }  /* Tab navigation */ .tab-navigation {   border-bottom: 1px solid var(--border-color);   display: flex;   padding: 0 4px; }  .tab {   padding: 10px 16px;   color: var(--text-secondary);   transition: all 0.2s ease; }  .tab:hover {   background-color: var(--bg-tertiary);   color: var(--text-primary); }  .tab.active {   color: var(--accent-primary);   font-weight: 500;   border-bottom: 2px solid var(--accent-primary); }  /* Info and warning boxes */ .instructions {   background-color: var(--bg-tertiary);   border-left: 3px solid var(--accent-primary);   border-radius: 0 4px 4px 0;   padding: 12px 16px;   margin: 16px 0; }  #grid-display {   background-color: var(--bg-secondary);   border: 1px solid var(--border-color);   box-shadow: var(--shadow-sm);   border-radius: 4px; }  .success-message {   color: #34c79a;   font-weight: 500;   animation: fadeOut 2s forwards;   animation-delay: 1.5s;   padding: 8px 12px; }  @keyframes fadeOut {   from { opacity: 1; }   to { opacity: 0; } }  .warning {   background-color: rgba(235, 68, 68, 0.1);   border-left: 3px solid #eb4444;   border-radius: 0 4px 4px 0;   padding: 12px 16px;   margin: 16px 0; }  /* Main containers */ .main-content-container {   background-color: var(--bg-primary);   color: var(--text-primary); }  .content-sidebar {   background: var(--bg-secondary);   border-right: 1px solid var(--border-color);   box-shadow: var(--shadow-sm); }  #graphics-rightbar {   background: var(--bg-secondary);   border-left: 1px solid var(--border-color);   box-shadow: var(--shadow-sm); }  /* Subtle grid background */ .grid-background {   background: var(--bg-primary);   background-image:      linear-gradient(rgba(108, 123, 163, 0.05) 1px, transparent 1px),     linear-gradient(90deg, rgba(108, 123, 163, 0.05) 1px, transparent 1px);   background-size: 20px 20px; }  /* Toolbar */ .toolbar {   background: var(--bg-secondary);   border-bottom: 1px solid var(--border-color);   box-shadow: var(--shadow-sm);   padding: 8px 16px;   display: flex;   align-items: center;   gap: 8px; }  /* Button variations */ .btn {   border: 1px solid var(--border-color);   background-color: var(--bg-tertiary);   color: var(--text-primary);   font-weight: 500;   padding: 8px 14px;   border-radius: 3px;   transition: all 0.2s ease;   font-size: 0.875rem; }  .btn:hover {   background-color: var(--accent-muted);   border-color: var(--accent-primary); }  .btn-primary {   background-color: var(--accent-primary);   border: 1px solid var(--accent-primary);   color: white; }  .btn-primary:hover {   background-color: #3a6ae6;   border-color: #3a6ae6; }  .btn-danger {   background-color: rgba(235, 68, 68, 0.15);   border: 1px solid #eb4444;   color: #eb4444; }  .btn-danger:hover {   background-color: rgba(235, 68, 68, 0.25); }  .btn-secondary {   background-color: var(--bg-tertiary);   border: 1px solid var(--border-color); }  .btn-secondary:hover {   background-color: var(--accent-muted);   border-color: var(--accent-primary); }  .btn-special {   background-color: rgba(52, 199, 154, 0.15);   border: 1px solid #34c79a;   color: #34c79a; }  .btn-special:hover {   background-color: rgba(52, 199, 154, 0.25); }  /* Shape list */ #shape-list {   border-bottom: 1px solid var(--border-color);   padding-bottom: 16px;   margin-bottom: 16px; }  .shape-item {   background-color: var(--bg-tertiary);   border: 1px solid var(--border-color);   border-radius: 3px;   padding: 10px 14px;   margin-bottom: 6px;   transition: all 0.2s ease;   display: flex;   align-items: center;   gap: 8px; }  .shape-item:hover {   background-color: var(--accent-muted);   border-color: var(--accent-primary); }  .shape-item.active {   background-color: rgba(52, 199, 154, 0.1);   border-color: #34c79a;   color: #34c79a;   font-weight: 500; }  /* Inspector panel */ #inspector {   background: var(--bg-secondary);   border-top: 1px solid var(--border-color);   padding: 16px; }  .form-row {   margin-bottom: 12px; }  .form-row label {   color: var(--text-primary);   margin-bottom: 6px; }  .form-row input, .form-row select {   width: 100%;   border: 1px solid var(--border-color);   background-color: var(--bg-secondary);   color: var(--text-primary);   padding: 8px 12px;   border-radius: 3px; }  /* Scene info */ .scene-info {   background: var(--bg-tertiary);   color: var(--text-primary);   border: 1px solid var(--border-color);   border-radius: 4px;   padding: 12px 16px;   margin-bottom: 16px; }  .button-danger {   background-color: rgba(235, 68, 68, 0.15);   border: 1px solid #eb4444;   color: #eb4444;   padding: 8px 14px;   border-radius: 3px;   font-weight: 500;   transition: all 0.2s ease; }  .button-danger:hover {   background-color: rgba(235, 68, 68, 0.25); }  /* Typography */ h2, h3 {   color: var(--text-primary);   margin-bottom: 16px;   padding-bottom: 8px;   border-bottom: 1px solid var(--border-color);   font-weight: 600; }  /* Scrollbars */ ::-webkit-scrollbar {   width: 6px;   height: 6px; }  ::-webkit-scrollbar-track {   background: var(--bg-tertiary);   border-radius: 3px; }  ::-webkit-scrollbar-thumb {   background: rgba(108, 123, 163, 0.5);   border-radius: 3px; }  ::-webkit-scrollbar-thumb:hover {   background: rgba(108, 123, 163, 0.7); }"
      }
    },
    "modifierSets": {
      "global": {
        "maxBloodCoreHP": 100,
        "bloodShardMultiplier": 1,
        "towerCostMod": 1,
        "damageMultiplier": 1,
        "healingMultiplier": 1,
        "essenceMultiplier": 1,
        "towerDamageReduction": 1,
        "population": 0,
        "maxPopulation": 5
      }
    },
    "sounds": {
      "testSound": {
        "title": "Test Sound",
        "audio": ""
      }
    },
    "libraries": {
      "graphicsEditor": {
        "script": "class GraphicsEditor {\n    constructor(gameEditor, config, {ShapeFactory}) {\n\n        this.gltfCache = new Map();\n        this.gameEditor = gameEditor;\n      \n        this.shapeFactory = new ShapeFactory();\n\n        this.config = config;\n        // DOM elements\n        this.container = document.getElementById('graphics-editor-container');\n        this.canvas = document.getElementById('canvas');\n\n        // Three.js core components\n        this.scene = null;\n        this.camera = null;\n        this.renderer = null;\n        this.controls = null;\n\n        // Interaction components\n        this.raycaster = new window.THREE.Raycaster();\n        this.mouse = new window.THREE.Vector2();\n        this.selectedOutline = null;\n        this.originalMaterials = new Map();\n\n        // State management\n        this.renderData = { \n            animations: { \n                \"idle\": [{ shapes: [] }] \n            } \n        };\n        this.selectedShapeIndex = -1;\n        this.currentAnimation = \"idle\";\n        this.currentFrame = 0;\n        this.isDragging = false;\n        this.clickStartTime = 0;\n        this.isPreviewingAnimation = false;\n        \n        this.init();\n    }\n\n    init() {\n        this.initThreeJS();\n        this.initEventListeners();\n        this.refreshShapes(false);\n\t\t\t\t//this.loadGLTF();\n        this.animate();\n    }\n    initThreeJS() {\n        // Scene setup\n        this.scene = new window.THREE.Scene();\n\n        // Camera setup\n        this.camera = new window.THREE.PerspectiveCamera(\n            75, \n            this.canvas.clientWidth / this.canvas.clientHeight, \n            0.1, \n            1000\n        );\n        this.camera.position.set(100, 100, 100);\n        this.camera.lookAt(0, 0, 0);\n\n        // Renderer setup\n        this.renderer = new window.THREE.WebGLRenderer({ \n            canvas: this.canvas, \n            antialias: false, \n            alpha: true \n        });\n        this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\n\n        // Add helpers\n        const gridHelper = new window.THREE.GridHelper(100, 100);\n        this.scene.add(gridHelper);\n\n        const axesHelper = new window.THREE.AxesHelper(5);\n        this.scene.add(axesHelper);\n\n        // Orbit controls\n        this.controls = new window.THREE.OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 0.25;\n\n        // Resize handling\n        window.addEventListener('resize', this.handleResize.bind(this));\n    }\n\n    handleResize() {\n        this.camera.aspect = this.canvas.clientWidth / this.canvas.clientHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.canvas.clientWidth, this.canvas.clientHeight);\n    }\n\n    initEventListeners() {\n        // Button event listeners\n        const buttonMappings = {\n            'add-shape': this.addNewShape.bind(this),\n            'preview-animation': this.togglePreview.bind(this),\n            'duplicate-shape': this.duplicateSelectedShape.bind(this),\n            'delete-shape': this.deleteSelectedShape.bind(this),\n            'scale-all': this.scaleAllShapes.bind(this),\n            'rotate-all': this.rotateAllShapes.bind(this),\n            'move-all': this.moveAllShapes.bind(this),\n            'generate-isometric': this.showIsometricModal.bind(this),\n            'add-animation': this.addNewAnimation.bind(this),\n            'delete-animation': this.deleteAnimation.bind(this),\n            'duplicate-frame': this.duplicateFrame.bind(this),\n            'delete-frame': this.deleteFrame.bind(this)\n        };\n\n        Object.entries(buttonMappings).forEach(([id, handler]) => {\n            const button = document.getElementById(id);\n            if (button) button.addEventListener('click', handler);\n        });\n\n        // Canvas interaction\n        this.canvas.addEventListener('mousedown', this.handleMouseDown.bind(this));\n        this.canvas.addEventListener('mousemove', this.handleMouseMove.bind(this));\n        this.canvas.addEventListener('mouseup', this.handleMouseUp.bind(this));\n\n        // Additional event listeners\n        document.body.addEventListener('renderGraphicsObject', this.handleRenderObject.bind(this));\n        \n        // Move modal listeners\n        document.getElementById('move-cancel').addEventListener('click', () => {\n            document.getElementById('move-modal').classList.remove('show');\n        });\n\n        document.getElementById('move-apply').addEventListener('click', this.applyMoveModal.bind(this));\n\n        // Isometric modal listeners\n        document.getElementById('iso-cancel').addEventListener('click', () => {\n            document.getElementById('modal-generateIsoSprites').classList.remove('show');\n        });\n        document.getElementById('iso-generate').addEventListener('click', this.generateIsometricSprites.bind(this));\n    }\n\n    handleRenderObject(event) {\n\n        this.canvas.width = this.gameEditor.getCollections().configs.game.canvasWidth;\n        this.canvas.height = this.gameEditor.getCollections().configs.game.canvasHeight;\n        this.canvas.setAttribute('style','');\n        this.setPreviewAnimationState(false);\n        this.renderData = event.detail.data;\n        document.getElementById('json-content').value = JSON.stringify(this.renderData, null, 2);\n        this.currentAnimation = \"idle\";\n        this.selectedShapeIndex = this.renderData.animations.idle[0].shapes.length > 0 ? 0 : -1;                \n        this.refreshShapes(false);\n        this.handleResize();\n    }\n\n    applyMoveModal() {\n        const xOffset = parseFloat(document.getElementById('move-x').value) || 0;\n        const yOffset = parseFloat(document.getElementById('move-y').value) || 0;\n        const zOffset = parseFloat(document.getElementById('move-z').value) || 0;\n        \n        // Apply the offset to all shapes\n        this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.forEach(shape => {\n            shape.x = (shape.x || 0) + xOffset;\n            shape.y = (shape.y || 0) + yOffset;\n            shape.z = (shape.z || 0) + zOffset;\n        });\n        this.refreshShapes(true);\n        \n        // Hide the modal\n        document.getElementById('move-modal').classList.remove('show');\n    }\n\n    handleMouseDown(event) {\n        this.isDragging = false;\n        this.clickStartTime = Date.now();\n    }\n\n    handleMouseMove() {\n        if (Date.now() - this.clickStartTime > 100) {\n            this.isDragging = true;\n        }\n    }\n\n    handleMouseUp(event) {\n        if (this.isDragging) return;\n\n        const rect = this.canvas.getBoundingClientRect();\n        this.mouse.x = ((event.clientX - rect.left) / this.canvas.clientWidth) * 2 - 1;\n        this.mouse.y = -((event.clientY - rect.top) / this.canvas.clientHeight) * 2 + 1;\n\n        this.raycaster.setFromCamera(this.mouse, this.camera);\n\n        const shapes = this.scene.children.filter(obj => obj.userData.isShape);\n        const intersects = this.raycaster.intersectObjects(shapes, true);\n\n        if (intersects.length > 0) {\n            const index = intersects[0].object.userData.index;\n            this.selectShape(index);\n        }\n    }\n\n    animate() {\n        requestAnimationFrame(this.animate.bind(this));\n        this.controls.update();\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    selectShape(index) {\n        if(this.isPreviewingAnimation){\n            this.setPreviewAnimationState(false);\n        }\n        this.selectedShapeIndex = (this.selectedShapeIndex === index) ? -1 : index;\n        this.updateShapeList();\n        this.highlightSelectedShape();\n    }\n\n    togglePreview(e) {\n        this.isPreviewingAnimation = !this.isPreviewingAnimation;\n        this.animatePreview();\n        this.setPreviewAnimationState(this.isPreviewingAnimation);            \n    }\n\n    setPreviewAnimationState(isPreviewing) {\n        this.isPreviewingAnimation = isPreviewing;\n        let btn = document.getElementById('preview-animation');\n        if (this.isPreviewingAnimation) {\n            btn.classList.add(\"active\");\n        } else {\n            this.currentFrame = 0;\n            btn.classList.remove(\"active\");\n        }\n    }\n\n    animatePreview() {\n        if (!this.isPreviewingAnimation) return;\n        this.currentFrame = (this.currentFrame + 1) % this.renderData.animations[this.currentAnimation].length;\n        this.renderShapes(false);\n        setTimeout(this.animatePreview.bind(this), 166); // ~6 FPS, adjust as needed\n    }\n\n    highlightSelectedShape() {\n        // Remove existing outlines\n        this.scene.children.forEach(obj => {\n            if (obj.userData.isOutline) {\n                this.scene.remove(obj);\n                if (obj.geometry) obj.geometry.dispose();\n                if (obj.material) obj.material.dispose();\n            }\n        });\n        \n        // Reset any highlighted materials\n        this.originalMaterials.forEach((material, object) => {\n            object.material = material;\n        });\n        this.originalMaterials.clear();\n        \n        // If no shape is selected, return\n        if (this.selectedShapeIndex < 0 || \n            this.selectedShapeIndex >= this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.length) {\n            return;\n        }\n    \n        // Find all meshes belonging to the selected shape (including GLTF children)\n        const selectedMeshes = [];\n        this.scene.traverse(obj => {\n            if (obj.userData.isShape && obj.userData.index === this.selectedShapeIndex && obj.isMesh) {\n                selectedMeshes.push(obj);\n            }\n        });\n    \n        // Handle highlighting for all relevant meshes\n        selectedMeshes.forEach(mesh => {\n            // Store original material\n            this.originalMaterials.set(mesh, mesh.material);\n            \n            // Create highlight material\n            const highlightMaterial = mesh.material.clone();\n            highlightMaterial.emissive = new window.THREE.Color(0x555555);\n            highlightMaterial.emissiveIntensity = 0.5;\n            mesh.material = highlightMaterial;\n            \n            // Create outline for each mesh component\n            const outlineGeometry = mesh.geometry.clone();\n            const outlineMaterial = new window.THREE.MeshBasicMaterial({ \n                color: 0xffff00,\n                side: window.THREE.BackSide\n            });\n            \n            const outline = new window.THREE.Mesh(outlineGeometry, outlineMaterial);\n            outline.position.copy(mesh.position);\n            outline.rotation.copy(mesh.rotation);\n            outline.scale.copy(mesh.scale);\n            outline.scale.multiplyScalar(1.05);\n            outline.userData.isOutline = true;\n            \n            this.scene.add(outline);\n        });\n    }\n    renderShapes(fireSave = true) {\n        // Remove only top-level shape groups\n        const objectsToRemove = this.scene.children.filter(obj => obj.userData.isShape);\n        objectsToRemove.forEach(obj => {\n            // Dispose of all resources in the hierarchy\n            this.shapeFactory.disposeObject(obj); // Use ShapeFactory's dispose method\n            this.originalMaterials.delete(obj);\n            this.scene.remove(obj);\n        });\n\n        // Add lights if they don't exist\n        if (!this.scene.getObjectByName('ambient-light')) {\n            const ambientLight = new window.THREE.AmbientLight(0xffffff, 0.6);\n            ambientLight.name = 'ambient-light';\n            this.scene.add(ambientLight);\n            const directionalLight = new window.THREE.DirectionalLight(0xffffff, 0.8);\n            directionalLight.position.set(5, 10, 7.5);\n            directionalLight.name = 'dir-light';\n            this.scene.add(directionalLight);\n        }\n\n        const currentShapes = this.renderData.animations[this.currentAnimation][this.currentFrame];\n        this.createObjectsFromJSON(currentShapes, this.scene);\n\n        document.getElementById('shape-count').textContent = currentShapes.shapes.length;\n        document.getElementById('json-content').value = JSON.stringify(this.renderData, null, 2);\n\n        if( fireSave) {\n            const myCustomEvent = new CustomEvent('saveGraphicsObject', {\n                detail: { data: this.renderData, propertyName: 'render' },\n                bubbles: true,\n                cancelable: true\n            });\n            document.body.dispatchEvent(myCustomEvent);\n        } else {\n            let valEl = this.gameEditor.elements.editor.querySelector(`#render-value`);\n            if( valEl ) {\n                valEl.value = JSON.stringify(this.renderData);\n            }\n        }\n\n        this.highlightSelectedShape();\n    }\n//gltf\n   createObjectsFromJSON(shapeData, scene) {\n        const group = this.shapeFactory.createFromJSON(shapeData);\n        scene.add(group);\n    }\n//gltf\n    addNewShape() {\n        const newShape = {\n            type: 'gltf',            \n            url: 'samples/models/Avocado/Avocado.gltf',\n            size: 2,\n            color: '#3498db',\n            x: 0,\n            y: 0,\n            z: 0,\n            rotationX: 0,\n            rotationY: 0,\n            rotationZ: 0\n        };\n        this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.push(newShape);\n        this.selectedShapeIndex = this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.length - 1;\n        this.refreshShapes(true);\n    }\n\n    duplicateSelectedShape() {\n        if (this.selectedShapeIndex >= 0) {\n            const originalShape = this.renderData.animations[this.currentAnimation][this.currentFrame].shapes[this.selectedShapeIndex];\n            const newShape = JSON.parse(JSON.stringify(originalShape));\n            this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.push(newShape);\n            this.selectedShapeIndex = this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.length - 1;\n            this.refreshShapes(true);\n        }\n    }\n\n    deleteSelectedShape() {\n        if (this.selectedShapeIndex >= 0) {\n            this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.splice(this.selectedShapeIndex, 1);\n            if (this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.length > 0) {\n                this.selectedShapeIndex = Math.min(this.selectedShapeIndex, this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.length - 1);\n            } else {\n                this.selectedShapeIndex = -1;\n            }\n            this.refreshShapes(true);\n        }\n    }\n\n    scaleAllShapes() {\n        const currentShapes = this.renderData.animations[this.currentAnimation][this.currentFrame].shapes;\n        if (currentShapes.length === 0) return;\n        const scaleFactor = parseFloat(prompt(\"Enter scale factor (e.g. 2 for double size, 0.5 for half size):\", \"1\"));\n        if (isNaN(scaleFactor) || scaleFactor <= 0) {\n            alert(\"Please enter a valid positive number\");\n            return;\n        }\n        let centerX = 0, centerY = 0, centerZ = 0;\n        currentShapes.forEach(shape => {\n            centerX += shape.x || 0;\n            centerY += shape.y || 0;\n            centerZ += shape.z || 0;\n        });\n        centerX /= currentShapes.length;\n        centerY /= currentShapes.length;\n        centerZ /= currentShapes.length;\n        currentShapes.forEach(shape => {\n            if (shape.size) shape.size *= scaleFactor;\n            if (shape.width) shape.width *= scaleFactor;\n            if (shape.height) shape.height *= scaleFactor;\n            if (shape.depth) shape.depth *= scaleFactor;\n            if (shape.tubeSize) shape.tubeSize *= scaleFactor;\n            shape.x = centerX + ((shape.x || 0) - centerX) * scaleFactor;\n            shape.y = centerY + ((shape.y || 0) - centerY) * scaleFactor;\n            shape.z = centerZ + ((shape.z || 0) - centerZ) * scaleFactor;\n        });\n        this.refreshShapes(true);\n    }\n\n    rotateAllShapes() {\n        const currentShapes = this.renderData.animations[this.currentAnimation][this.currentFrame].shapes;\n        if (currentShapes.length === 0) return;\n\n        // Get modal elements\n        const rotateModal = document.getElementById('rotate-modal');\n        const rotateAngleInput = document.getElementById('rotate-angle');\n        const rotateAxisSelect = document.getElementById('rotate-axis');\n        const rotateCancelBtn = document.getElementById('rotate-cancel');\n        const rotateApplyBtn = document.getElementById('rotate-apply');\n\n        // Reset inputs to default values\n        rotateAngleInput.value = \"0\";\n        rotateAxisSelect.value = \"y\"; // Default to Y-axis\n\n        // Show the modal\n        rotateModal.classList.add('show');\n\n        // Cancel button handler\n        rotateCancelBtn.onclick = () => {\n            rotateModal.classList.remove('show');\n        };\n\n        // Apply button handler\n        rotateApplyBtn.onclick = () => {\n            const angleDeg = parseFloat(rotateAngleInput.value);\n            if (isNaN(angleDeg)) {\n                alert(\"Please enter a valid angle\");\n                return;\n            }\n\n            const axis = rotateAxisSelect.value;\n            const angleRad = angleDeg * Math.PI / 180;\n\n            // Calculate the center of all shapes in the current frame\n            let centerX = 0, centerY = 0, centerZ = 0;\n            currentShapes.forEach(shape => {\n                centerX += shape.x || 0;\n                centerY += shape.y || 0;\n                centerZ += shape.z || 0;\n            });\n            centerX /= currentShapes.length;\n            centerY /= currentShapes.length;\n            centerZ /= currentShapes.length;\n\n            // Rotate shapes around the group center by adjusting positions\n            currentShapes.forEach(shape => {\n                const x = shape.x || 0;\n                const y = shape.y || 0;\n                const z = shape.z || 0;\n\n                // Translate to origin relative to center\n                const relX = x - centerX;\n                const relY = y - centerY;\n                const relZ = z - centerZ;\n\n                // Apply rotation around the chosen axis\n                if (axis === 'x') {\n                    // X-axis rotation (y-z plane)\n                    const newRelY = relY * Math.cos(angleRad) - relZ * Math.sin(angleRad);\n                    const newRelZ = relY * Math.sin(angleRad) + relZ * Math.cos(angleRad);\n                    shape.y = centerY + newRelY;\n                    shape.z = centerZ + newRelZ;\n                    // x remains unchanged\n                } else if (axis === 'y') {\n                    // Y-axis rotation (x-z plane)\n                    const newRelX = relX * Math.cos(angleRad) + relZ * Math.sin(angleRad);\n                    const newRelZ = -relX * Math.sin(angleRad) + relZ * Math.cos(angleRad);\n                    shape.x = centerX + newRelX;\n                    shape.z = centerZ + newRelZ;\n                    // y remains unchanged\n                } else if (axis === 'z') {\n                    // Z-axis rotation (x-y plane)\n                    const newRelX = relX * Math.cos(angleRad) - relY * Math.sin(angleRad);\n                    const newRelY = relX * Math.sin(angleRad) + relY * Math.cos(angleRad);\n                    shape.x = centerX + newRelX;\n                    shape.y = centerY + newRelY;\n                    // z remains unchanged\n                }\n                // Individual rotations (rotationX, rotationY, rotationZ) are preserved\n            });\n\n            // Update the scene and hide the modal\n            this.refreshShapes(true);\n            rotateModal.classList.remove('show');\n        };\n    }\n\n    moveAllShapes() {\n        if (this.renderData.animations[this.currentAnimation][this.currentFrame].shapes.length === 0) return;\n        document.getElementById('move-modal').classList.add('show');\n        document.getElementById('move-x').value = '0';\n        document.getElementById('move-y').value = '0';\n        document.getElementById('move-z').value = '0';\n    }\n\n    showIsometricModal() {\n        document.getElementById('modal-generateIsoSprites').classList.add('show');\n    }\n\n    generateIsometricSprites() {\n        const frustumSize = parseFloat(document.getElementById('iso-frustum').value) || 48;\n        const cameraDistance = parseFloat(document.getElementById('iso-distance').value) || 100;\n        const size = parseFloat(document.getElementById('iso-size').value) || 64;\n        const aspect = 1;\n        const tempRenderer = new window.THREE.WebGLRenderer({ antialias: false, alpha: true });\n        tempRenderer.setSize(size, size);\n        document.getElementById('modal-generateIsoSprites').classList.remove('show');\n    \n        const renderTarget = new window.THREE.WebGLRenderTarget(size, size);\n        const cameras = [\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000),\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000),\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000),\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000),\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000),\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000),\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000),\n            new window.THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000)\n        ];\n    \n        // Position cameras at 8 angles (45° increments)\n        cameras[0].position.set(cameraDistance, cameraDistance, cameraDistance);           // NE up\n        cameras[1].position.set(0, cameraDistance, cameraDistance);                       // N up\n        cameras[2].position.set(-cameraDistance, cameraDistance, cameraDistance);         // NW up\n        cameras[3].position.set(-cameraDistance, cameraDistance, 0);                      // W up\n        cameras[4].position.set(-cameraDistance, cameraDistance, -cameraDistance);        // SW up\n        cameras[5].position.set(0, cameraDistance, -cameraDistance);                      // S up\n        cameras[6].position.set(cameraDistance, cameraDistance, -cameraDistance);         // SE up\n        cameras[7].position.set(cameraDistance, cameraDistance, 0);                       // E up\n        \n        cameras.forEach(camera => camera.lookAt(0, 0, 0));\n    \n        const sprites = {};     \n       \n        for (const animType in this.renderData.animations) {\n            sprites[animType] = [];\n            this.renderData.animations[animType].forEach(frame => {\n                const scene = new window.THREE.Scene();\n                const ambientLight = new window.THREE.AmbientLight(0xffffff, 0.6);\n                ambientLight.name = 'ambient-light';\n                scene.add(ambientLight);\n                \n                const directionalLight = new window.THREE.DirectionalLight(0xffffff, 0.8);\n                directionalLight.position.set(5, 10, 7.5);\n                directionalLight.name = 'dir-light';\n                scene.add(directionalLight);\n                this.createObjectsFromJSON(frame, scene);\n    \n                const frameSprites = [];\n                for (const camera of cameras) {\n                    tempRenderer.setRenderTarget(renderTarget);\n                    tempRenderer.render(scene, camera);\n                    const buffer = new Uint8Array(size * size * 4);\n                    tempRenderer.readRenderTargetPixels(renderTarget, 0, 0, size, size, buffer);\n                    const flippedBuffer = new Uint8Array(size * size * 4);\n                    for (let y = 0; y < size; y++) {\n                        const srcRowStart = y * size * 4;\n                        const destRowStart = (size - 1 - y) * size * 4;\n                        flippedBuffer.set(buffer.subarray(srcRowStart, srcRowStart + size * 4), destRowStart);\n                    }\n                    const canvas = document.createElement('canvas');\n                    canvas.width = size;\n                    canvas.height = size;\n                    const ctx = canvas.getContext('2d');\n                    const imageData = ctx.createImageData(size, size);\n                    imageData.data.set(flippedBuffer);\n                    ctx.putImageData(imageData, 0, 0);\n                    frameSprites.push(canvas.toDataURL());\n                }\n                sprites[animType].push(frameSprites);\n            });\n        }\n    \n        tempRenderer.setRenderTarget(null);\n        tempRenderer.dispose();\n        renderTarget.dispose();\n        this.displayIsometricSprites(sprites);\n    }\n    displayIsometricSprites(sprites) {\n        const modal = document.createElement('div');\n        modal.style.cssText = `\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%; \n            background-color: rgba(0, 0, 0, 0.7); z-index: 1000; \n            display: flex; align-items: center; justify-content: center;\n        `;\n        const content = document.createElement('div');\n        content.style.cssText = `\n            background: #333; padding: 20px; border-radius: 8px; \n            max-width: 80%; max-height: 80%; overflow: auto;\n        `;\n    \n        const angleLabels = ['NE', 'N', 'NW', 'W', 'SW', 'S', 'SE', 'E']; // Labels for 8 angles\n    \n        for (const animType in sprites) {\n            const animSection = document.createElement('div');\n            const title = document.createElement('h3');\n            title.textContent = `${animType} Animation`;\n            title.style.color = '#e0e0e0';\n            animSection.appendChild(title);\n    \n            // Create a container for all angles\n            const anglesContainer = document.createElement('div');\n            anglesContainer.style.cssText = `margin: 10px 0;`;\n    \n            // For each angle (0-7)\n            for (let angle = 0; angle < 8; angle++) {\n                const angleSection = document.createElement('div');\n    \n                const grid = document.createElement('div');\n                grid.style.cssText = `\n                    display: grid; \n                    grid-template-columns: repeat(${Math.min(sprites[animType].length, 4)}, 1fr); \n                    gap: 5px; \n                    margin-bottom: 15px;\n                `;\n    \n                // Add all frames for this specific angle\n                sprites[animType].forEach(frame => {\n                    const img = document.createElement('img');\n                    img.src = frame[angle]; // Get the specific angle's sprite\n                    img.style.maxWidth = '100%';\n                    grid.appendChild(img);\n                });\n    \n                angleSection.appendChild(grid);\n                anglesContainer.appendChild(angleSection);\n            }\n    \n            animSection.appendChild(anglesContainer);\n            content.appendChild(animSection);\n        }\n    \n        const closeButton = document.createElement('button');\n        closeButton.textContent = 'Close';\n        closeButton.style.cssText = `\n            margin-top: 20px; padding: 8px 16px; background-color: #4CAF50; \n            color: #fff; border: none; border-radius: 6px; cursor: pointer;\n        `;\n        closeButton.addEventListener('click', () => document.body.removeChild(modal));\n        content.appendChild(closeButton);\n        modal.appendChild(content);\n        document.body.appendChild(modal);\n    }\n\n    addNewAnimation() {\n        const animName = prompt(\"Enter animation name:\", `anim${Object.keys(this.renderData.animations).length + 1}`);\n        if (animName && !this.renderData.animations[animName]) {\n            this.renderData.animations[animName] = [ ...this.renderData.animations[\"idle\"] ];\n            this.currentAnimation = animName;\n            this.currentFrame = 0;\n            this.refreshShapes(true);\n        }\n    }\n\n    deleteAnimation() {\n        if (this.currentAnimation !== \"idle\") {\n            delete this.renderData.animations[this.currentAnimation];\n            this.currentAnimation = \"idle\";\n            this.currentFrame = 0;\n            this.selectedShapeIndex = -1;\n            this.refreshShapes(true);\n        }\n    }\n\n    duplicateFrame() {\n        if (this.renderData.animations[this.currentAnimation].length > 0) {\n            const currentShapes = this.renderData.animations[this.currentAnimation][this.currentFrame];\n            const newFrame = { shapes: JSON.parse(JSON.stringify(currentShapes.shapes)) };\n            this.renderData.animations[this.currentAnimation].splice(this.currentFrame + 1, 0, newFrame);\n            this.currentFrame++;\n            this.refreshShapes(true);\n        }\n    }\n\n    deleteFrame() {\n        if (this.renderData.animations[this.currentAnimation].length > 1) {\n            this.renderData.animations[this.currentAnimation].splice(this.currentFrame, 1);\n            this.currentFrame = Math.min(this.currentFrame, this.renderData.animations[this.currentAnimation].length - 1);\n            this.refreshShapes(true);\n        }\n    }\n\n    refreshShapes(param) {\n        this.updateShapeList();\n        this.renderShapes(param);\n    }\n\n    updateShapeList() {\n        const shapeList = document.getElementById('shape-list');\n        shapeList.innerHTML = '';\n    \n        // Animation selector\n        const animSelector = document.createElement('select');\n        animSelector.style.marginBottom = '10px';\n        Object.keys(this.renderData.animations).forEach(anim => {\n            const option = document.createElement('option');\n            option.value = anim;\n            option.textContent = anim;\n            if (anim === this.currentAnimation) option.selected = true;\n            animSelector.appendChild(option);\n        });\n        animSelector.addEventListener('change', () => {\n            this.setPreviewAnimationState(false);\n            this.currentAnimation = animSelector.value;\n            this.currentFrame = 0;\n            this.selectedShapeIndex = -1;\n            \n            this.refreshShapes(false);\n        });\n        shapeList.appendChild(animSelector);\n    \n        // Frame list\n        const frameList = document.createElement('div');\n        frameList.style.marginBottom = '10px';\n        this.renderData.animations[this.currentAnimation].forEach((frame, index) => {\n            const frameItem = document.createElement('div');\n            frameItem.textContent = `Frame ${index + 1}`;\n            frameItem.style.padding = '5px';\n            frameItem.style.cursor = 'pointer';\n            if (index === this.currentFrame) frameItem.style.backgroundColor = '#555';\n            frameItem.addEventListener('click', () => {\n                this.setPreviewAnimationState(false);\n                this.currentFrame = index;\n                this.refreshShapes(false);\n            });\n            frameList.appendChild(frameItem);\n        });\n        shapeList.appendChild(frameList);\n    \n        // Shape list for current frame\n        const currentShapes = this.renderData.animations[this.currentAnimation][this.currentFrame].shapes;\n        if (currentShapes.length === 0) {\n            const emptyMessage = document.createElement('div');\n            emptyMessage.textContent = 'No shapes in this frame.';\n            emptyMessage.style.padding = '10px';\n            emptyMessage.style.color = '#777';\n            shapeList.appendChild(emptyMessage);\n            document.getElementById('selected-shape').textContent = 'None';\n            return;\n        }\n    \n        currentShapes.forEach((shape, index) => {\n            const shapeItem = document.createElement('div');\n            shapeItem.className = 'shape-item';\n            if (index === this.selectedShapeIndex) {\n                shapeItem.classList.add('active');\n                document.getElementById('selected-shape').textContent = `${shape.type} (${index})`;\n            }\n            const title = document.createElement('div');\n            title.textContent = `${index + 1}. ${shape.name || shape.type} ${shape.color}`;\n            title.style.fontWeight = 'bold';\n            title.style.marginBottom = '5px';\n            shapeItem.appendChild(title);\n            const position = document.createElement('div');\n            position.textContent = `Position: X=${shape.x || 0}, Y=${shape.y || 0}, Z=${shape.z || 0}`;\n            position.style.fontSize = '12px';\n            shapeItem.appendChild(position);\n            shapeItem.addEventListener('click', () => {\n                this.selectShape(index);\n                this.createInspector(shape);\n            });\n            shapeList.appendChild(shapeItem);\n        });\n    \n        if (this.selectedShapeIndex >= 0) {\n            let shape = currentShapes[this.selectedShapeIndex];\n            if (shape) {\n                this.createInspector(shape);\n            } else {\n                const inspector = document.getElementById('inspector');\n                inspector.innerHTML = \"\";\n                this.selectedShapeIndex = -1;\n                this.refreshShapes(true);\n            }\n        }\n    }\n    createInspector(shape) {\n        const inspector = document.getElementById('inspector');\n        inspector.innerHTML = \"\";\n        inspector.className = 'inspector';\n\n        this.addFormRow(inspector, 'Name', 'text', 'name', shape.name || \"\");\n        \n        // Type selector\n        this.addFormRow(inspector, 'Type', 'select', 'type', shape.type, {\n            options: ['cube', 'sphere', 'box', 'cylinder', 'cone', 'torus', 'tetrahedron', 'gltf'],\n            change: (e) => {\n        \n                let newValue = e.target.value;\n                if (newValue != 'gltf') {\n                    delete this.renderData.animations[this.currentAnimation][this.currentFrame].shapes[this.selectedShapeIndex].url\n                } \n                \n                this.renderData.animations[this.currentAnimation][this.currentFrame].shapes[this.selectedShapeIndex]['type'] = newValue;\n                this.refreshShapes(false);\n            }\n        });\n        \n        if (shape.type === 'gltf') {\n            let property = 'url';\n            let input = this.addFormRow(inspector, 'Model', 'file', property, shape.url, { 'change' :  async (e) => {\n                e.preventDefault();\n\n                // Get the file from the input element\n                const file = e.target.files[0]; // Access the file object\n                if (!file) {\n                    console.error('No file selected');\n                    return;\n                }\n                // // Create FormData and append the file\n                 const formData = new FormData();\n                 formData.append('gltfFile', file); // 'gltfFile' matches the multer.single('gltfFile') on the server\n\n                try {\n                     const response = await fetch('/upload-model', {\n                         method: 'POST',\n                         body: formData // Send the FormData with the file\n                     });\n\n                     const result = await response.json();\n                     shape.url = result.filePath; \n                     this.renderData.animations[this.currentAnimation][this.currentFrame].shapes[this.selectedShapeIndex][property] = result.filePath;\n                     this.refreshShapes(false);\n                } catch (error) {\n                     console.error('Error uploading file:', error);\n                }\n            }});\n            input.setAttribute(\"accept\",\".gltf\");\n        }\n        // Color picker\n        this.addFormRow(inspector, 'Color', 'color', 'color', shape.color);\n        \n        this.addFormRow(inspector, 'X Scale', 'number', 'scaleX', shape.scaleX || 1, { min: 0.1, step: 0.1 });\n        this.addFormRow(inspector, 'Y Scale', 'number', 'scaleY', shape.scaleY || 1, { min: 0.1, step: 0.1 });\n        this.addFormRow(inspector, 'Z Scale', 'number', 'scaleZ', shape.scaleZ || 1, { min: 0.1, step: 0.1 });\n        // Position inputs\n        this.addFormRow(inspector, 'X Position', 'number', 'x', shape.x || 0, { step: 0.1 });\n        this.addFormRow(inspector, 'Y Position', 'number', 'y', shape.y || 0, { step: 0.1 });\n        this.addFormRow(inspector, 'Z Position', 'number', 'z', shape.z || 0, { step: 0.1 });\n        \n        // Rotation inputs\n        this.addFormRow(inspector, 'X Rotation', 'number', 'rotationX', shape.rotationX || 0, { step: 5 });\n        this.addFormRow(inspector, 'Y Rotation', 'number', 'rotationY', shape.rotationY || 0, { step: 5 });\n        this.addFormRow(inspector, 'Z Rotation', 'number', 'rotationZ', shape.rotationZ || 0, { step: 5 });\n        \n        // Size inputs\n        if (['cube', 'sphere', 'tetrahedron', 'torus'].includes(shape.type)) {\n            this.addFormRow(inspector, 'Size', 'number', 'size', shape.size || 2, { min: 0.1, step: 0.1 });\n        }\n        \n        if (shape.type === 'box') {\n            this.addFormRow(inspector, 'Width', 'number', 'width', shape.width || 2, { min: 0.1, step: 0.1 });\n            this.addFormRow(inspector, 'Height', 'number', 'height', shape.height || 2, { min: 0.1, step: 0.1 });\n            this.addFormRow(inspector, 'Depth', 'number', 'depth', shape.depth || 2, { min: 0.1, step: 0.1 });\n        }\n        \n        if (['cylinder', 'cone'].includes(shape.type)) {\n            this.addFormRow(inspector, 'Size', 'number', 'size', shape.size || 2, { min: 0.1, step: 0.1 });\n            this.addFormRow(inspector, 'Height', 'number', 'height', shape.height || 3, { min: 0.1, step: 0.1 });\n        }\n        \n        if (shape.type === 'torus') {\n            this.addFormRow(inspector, 'Tube Size', 'number', 'tubeSize', shape.tubeSize || shape.size / 6, { min: 0.1, step: 0.1 });\n        }\n    }\n\n    addFormRow(container, label, type, property, value, options = {}) {\n        const row = document.createElement('div');\n        row.className = 'form-row';\n        \n        const labelElement = document.createElement('label');\n        labelElement.textContent = label;\n        row.appendChild(labelElement);\n        \n        let input;\n        \n        if (type === 'select') {\n            input = document.createElement('select');\n            (options.options || []).forEach(optionValue => {\n                const option = document.createElement('option');\n                option.value = optionValue;\n                option.textContent = optionValue;\n                if (value === optionValue) {\n                    option.selected = true;\n                }\n                input.appendChild(option);\n            });\n        } else if(type === \"color\") {\n            input = document.createElement('input');\n            input.type = \"text\";\n            input.value = value;\n            let colorInput = document.createElement('input');\n            colorInput.type = \"color\";\n            colorInput.value = value;\n\n            colorInput.addEventListener('change', () => {\n                let newValue = colorInput.value;                \n                this.renderData.animations[this.currentAnimation][this.currentFrame].shapes[this.selectedShapeIndex][property] = newValue;\n                this.refreshShapes(true);\n            });\n            row.appendChild(colorInput);\n        } else if(type === \"file\") {\n            let inputContainer = document.createElement('div');\n            inputContainer.style = \"flex: 1; display: flex; flex-direction: column; font-size: .75em;\";\n            input = document.createElement('input');\n            input.style = \"width: calc(100% - 18px);\"\n            input.type = type;\n            inputContainer.appendChild(input);\n            if( value ) {\n                let urlName = document.createElement('span');\n                urlName.innerText = value;            \n                inputContainer.appendChild(urlName);\n            }\n            row.appendChild(inputContainer);\n            container.appendChild(row);\n            input.addEventListener('change', options.change );\n            return input;\n        } else {\n            input = document.createElement('input');\n            input.type = type;\n            input.value = value;\n            \n            if (type === 'number') {\n                input.min = options.min !== undefined ? options.min : -64;\n                input.max = options.max !== undefined ? options.max : 64;\n                input.step = options.step || 1;\n            }\n        }\n        \n        input.addEventListener('change', options.change || ((e) => {\n        \n            let newValue = e.target.value;\n            if (type === 'number') {\n                newValue = parseFloat(newValue);\n            } else if(type === 'file') {\n                return;\n            }\n            \n            this.renderData.animations[this.currentAnimation][this.currentFrame].shapes[this.selectedShapeIndex][property] = newValue;\n            this.refreshShapes(false);\n        }));\n        \n        row.appendChild(input);\n        container.appendChild(row);\n        return input;\n    }\n\n    importJSON() {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = '.json';\n        \n        input.addEventListener('change', e => {\n            const file = e.target.files[0];\n            if (!file) return;\n            \n            const reader = new FileReader();\n            reader.onload = (event) => {\n                try {\n                    const importedData = JSON.parse(event.target.result);\n                    this.renderData = importedData;\n                    this.selectedShapeIndex = this.renderData.animations.idle[0].shapes.length > 0 ? 0 : -1;\n                    \n                    this.refreshShapes(true);\n                    \n                    // Reset camera position\n                    this.camera.position.set(0, 5, 10);\n                    this.controls.target.set(0, 0, 0);\n                } catch (error) {\n                    alert('Invalid JSON file: ' + error.message);\n                }\n            };\n            reader.readAsText(file);\n        });\n        \n        input.click();\n    }\n\n    applyJSON() {\n        try {\n            const newData = JSON.parse(document.getElementById('json-content').value);\n            this.renderData = newData;\n            this.selectedShapeIndex = this.renderData.animations.idle[0].shapes.length > 0 ? 0 : -1;\n            \n            this.refreshShapes(true);\n        } catch (error) {\n            alert('Invalid JSON: ' + error.message);\n        }\n    }\n\n\n}\n"
      },
      "terrainMapEditor": {
        "script": "\nclass TerrainMapEditor {\n    constructor(gameEditor, config = {}, { TileMap, TerrainImageProcessor, CoordinateTranslator, ImageManager, ShapeFactory }) {\n        this.gameEditor = gameEditor;\n\n        this.engineClasses = {\n            TileMap: TileMap,\n            TerrainImageProcessor: TerrainImageProcessor,\n            CoordinateTranslator: CoordinateTranslator,\n            ImageManager: ImageManager,\n            ShapeFactory: ShapeFactory\n        }\n        // Default configuration\n        this.defaultConfig = {\n            gridSize: 48,\n            imageSize: 128,\n            canvasWidth: 1536, \n            canvasHeight: 768\n        };\n        this.config = { ...this.defaultConfig, ...config };\n\n        // Grid and terrain configuration\n        this.defaultMapSize = 16;\n        this.mapSize = this.defaultMapSize;\n        this.currentTerrainType = 'grass';\n        this.isMouseDown = false;\n        \n        // Terrain map structure\n        this.tileMap = {\n            size: 16,\n            terrainTypes: [\n                { type: \"start\", color: \"#ffff00\", image: [] },\n                { type: \"end\", color: \"#ff0000\", image: [] },\n                { type: \"path\", color: \"#eeae9e\", image: [] },\n                { type: \"grass\", color: \"#8bc34a\", image: [] },\n                { type: \"water\", color: \"#64b5f6\", image: [] },\n                { type: \"rock\", color: \"#9e9e9e\", image: [] }\n            ],\n            terrainMap: []\n        };\n\n        this.environment = this.gameEditor.getCollections().environment;\n        this.terrainTypesContainer = null;\n        this.draggedItem = null;\n\n        // DOM elements\n        this.canvasEl = document.getElementById('grid');\n        // Managers and renderers\n\n        this.imageManager = new this.engineClasses.ImageManager(this.gameEditor, {imageSize: this.config.imageSize}, {ShapeFactory});\n        this.mapRenderer = null;\n        this.mapManager = null;\n\n        this.translator = new this.engineClasses.CoordinateTranslator(this.config, this.tileMap.size, this.gameEditor.getCollections().configs.game.isIsometric);\n        this.terrainCanvasBuffer = document.createElement('canvas');\n        this.terrainCanvasBuffer.width = this.canvasEl.width;\n        this.terrainCanvasBuffer.height = this.canvasEl.height;\n        // Bind methods to maintain correct context\n        this.init();\n    }\n\n    init() {\n        this.setupTerrainTypesUI();\n        this.setupEventListeners();\n        this.updateTerrainStyles();\n        this.setupTerrainImageProcessor();\n    }\n\n    setupEventListeners() {\n        document.getElementById('terrainColor').addEventListener('change', (el) => {                    \n            document.getElementById('terrainColorText').value = el.target.value;\n        });\n\n        document.getElementById('terrainMapSize').addEventListener('change', (ev) => {    \n            const newGridSize = parseInt(ev.target.value);\n            const oldGridSize = this.tileMap.size;\n            \n            // Create a new map to hold the resized terrain\n            const newTerrainMap = [];\n            for (let i = 0; i < newGridSize; i++) {\n                newTerrainMap.push(new Array(newGridSize));\n            }\n            \n            // Calculate offsets for maintaining center\n            const oldOffset = Math.floor(oldGridSize / 2);\n            const newOffset = Math.floor(newGridSize / 2);\n            \n            // Fill the new map\n            for (let newI = 0; newI < newGridSize; newI++) {\n                for (let newJ = 0; newJ < newGridSize; newJ++) {\n                    const absI = newI - newOffset;\n                    const absJ = newJ - newOffset;\n                    \n                    const oldI = absI + oldOffset;\n                    const oldJ = absJ + oldOffset;\n                    \n                    if (oldI >= 0 && oldI < oldGridSize && oldJ >= 0 && oldJ < oldGridSize) {\n                        // Copy existing terrain\n                        newTerrainMap[newI][newJ] = this.tileMap.terrainMap[oldI][oldJ];\n                    } else {\n                        // Use nearest edge value for new areas\n                        const clampedI = Math.max(0, Math.min(oldGridSize - 1, oldI));\n                        const clampedJ = Math.max(0, Math.min(oldGridSize - 1, oldJ));\n                        newTerrainMap[newI][newJ] = this.tileMap.terrainMap[clampedI][clampedJ];\n                    }\n                }\n            }\n            \n            // Update tileMap with new terrain\n            this.tileMap.terrainMap = newTerrainMap;\n            this.tileMap.size = newGridSize;\n            this.translator = new this.engineClasses.CoordinateTranslator(this.config, newGridSize, this.gameEditor.getCollections().configs.game.isIsometric);\n            \n            this.updateTerrainStyles();\n            this.setupTerrainTypesUI();\n            this.initGridCanvas();\n            this.exportMap();\n        });\n\n        document.getElementById('terrainBGColor').addEventListener('change', (ev) => {\n            this.tileMap.terrainBGColor = ev.target.value;\n            this.canvasEl.backgroundColor = ev.target.value;\n            this.exportMap();\n        }); \n\n        // Handle mouseup event (stop dragging)\n        document.addEventListener('mouseup', () => {\n            this.isMouseDown = false;\n        });\n\n        // Add mouse down event for canvas\n        this.canvasEl.addEventListener('mousedown', (e) => {\n            this.isMouseDown = true;\n            this.handleCanvasInteraction(e);\n        });\n        \n        // Add mouse move event for drawing while dragging\n        this.canvasEl.addEventListener('mousemove', (e) => {\n            if (this.isMouseDown) {\n                this.handleCanvasInteraction(e);\n            }\n        });\n\n        // Add translation event listeners\n        document.getElementById('translate-left').addEventListener('click', () => this.translateMap(-1, 0));\n        document.getElementById('translate-right').addEventListener('click', () => this.translateMap(1, 0));\n        document.getElementById('translate-up').addEventListener('click', () => this.translateMap(0, -1));\n        document.getElementById('translate-down').addEventListener('click', () => this.translateMap(0, 1));\n\n        // Handle editTileMap event\n        document.body.addEventListener('editTileMap', async (event) => {\n\n            this.config = event.detail.config;\n            this.tileMap = event.detail.data;\n\t\t\t\t\t\tthis.savePropertyName = event.detail.propertyName;\n            this.canvasEl.width = this.config.canvasWidth;\n            this.canvasEl.height = this.config.canvasHeight;\n            let bgColor = this.tileMap.terrainBGColor || \"#7aad7b\";\n            document.getElementById('terrainBGColor').value = bgColor;\n            this.canvasEl.backgroundColor = bgColor;\n          \t\n          \n            this.imageManager = new this.engineClasses.ImageManager(this.gameEditor, {imageSize: this.config.imageSize}, {ShapeFactory: this.engineClasses.ShapeFactory});\n          \n            await this.imageManager.loadImages(\"levels\", { level: { tileMap: this.tileMap }});\n\n            const terrainImages = this.imageManager.getImages(\"levels\", \"level\");\n\n            this.terrainTileMapper = this.gameEditor.propertyModuleInstances.TileMap;\n            this.terrainTileMapper.init(this.terrainCanvasBuffer, this.gameEditor.getCollections().configs.game.gridSize, terrainImages, this.gameEditor.getCollections().configs.game.isIsometric);\n            this.game = { state: {}, terrainTileMapper: this.terrainTileMapper, config: this.gameEditor.getCollections(), translator: this.translator };\n            this.mapRenderer = new (this.gameEditor.scriptContext.getRenderer(\"mapRenderer\"))(this.game, null,\n                { \n                    gameConfig: this.config, \n                    terrainCanvasBuffer: this.terrainCanvasBuffer, \n                    canvasBuffer: this.canvasEl, \n                    environment: this.environment, \n                    imageManager: this.imageManager, \n                    levelName: 'level', \n                    level: { tileMap: this.tileMap }\n                }\n            );\n            \n            // Update grid size if it's different\n            if (this.tileMap.size && this.tileMap.size !== this.mapSize) {\n                this.mapSize = this.tileMap.size;\n                this.translator = new this.engineClasses.CoordinateTranslator(this.config, this.mapSize, this.gameEditor.getCollections().configs.game.isIsometric);\n            } else {\n                this.mapSize = this.defaultMapSize;\n                this.translator = new this.engineClasses.CoordinateTranslator(this.config, this.mapSize, this.gameEditor.getCollections().configs.game.isIsometric);\n            }\n            \n            document.getElementById('terrainMapSize').value = this.mapSize;\n            requestAnimationFrame(() => {\n            // Load terrain types if provided\n            this.updateTerrainStyles();\n            this.setupTerrainTypesUI();\n            this.initGridCanvas();\n            });\n        });\n    }\n    setupTerrainImageProcessor() {\n        const processor = new this.engineClasses.TerrainImageProcessor();\n        processor.initialize(\n            document.getElementById('terrainImage'),\n            document.getElementById('terrain-image-upload'),\n            document.getElementById('terrain-image-display')\n        );\n        return processor;\n    }\n\n    setupTerrainTypesUI() {\n        const terrainsPanel = document.getElementById('terrainsPanel');\n        \n        // Clear existing content\n        const existingColorPicker = terrainsPanel.querySelector('.terrain-types-container');\n        if (existingColorPicker) {\n            terrainsPanel.removeChild(existingColorPicker);\n        }\n        \n        // Create new terrain types container\n        this.terrainTypesContainer = document.createElement('div');\n        this.terrainTypesContainer.className = 'terrain-types-container';\n        \n        // Add terrain options from terrainTypes array\n        this.tileMap.terrainTypes.forEach(terrain => {\n            const terrainItem = document.createElement('div');\n            terrainItem.className = 'terrain-item';\n            terrainItem.draggable = true;\n            \n            // Add drag event listeners\n            terrainItem.addEventListener('dragstart', this.handleDragStart.bind(this));\n            terrainItem.addEventListener('dragover', this.handleDragOver.bind(this));\n            terrainItem.addEventListener('drop', this.handleDrop.bind(this));\n            terrainItem.addEventListener('dragend', this.handleDragEnd.bind(this));\n            \n            // Color option\n            const option = document.createElement('div');\n            option.className = 'color-option';\n            option.dataset.type = terrain.type;\n            option.style.backgroundColor = terrain.color;\n            \n            // Set the first one as active by default (or current selected if updating)\n            if (terrain.type === this.currentTerrainType) {\n                option.classList.add('active');\n            }\n            \n            // Add click event to select terrain\n            option.addEventListener('click', () => {\n                document.querySelectorAll('.color-option').forEach(opt => {\n                    opt.classList.remove('active');\n                });\n                option.classList.add('active');\n                this.currentTerrainType = option.dataset.type;\n            });\n            \n            // Label for the terrain type\n            const label = document.createElement('div');\n            label.className = 'terrain-label';\n            label.textContent = terrain.type;\n            \n            // Button container\n            const buttonContainer = document.createElement('div');\n            buttonContainer.className = 'terrain-buttons';\n            \n            // Add edit button\n            const editBtn = document.createElement('button');\n            editBtn.className = 'edit-terrain-btn';\n            editBtn.innerHTML = '✏️';\n            editBtn.title = 'Edit terrain';\n            editBtn.addEventListener('click', () => this.showTerrainEditForm(terrain));\n            buttonContainer.appendChild(editBtn);\n            \n            // Add delete button\n            const deleteBtn = document.createElement('button');\n            deleteBtn.className = 'delete-terrain-btn';\n            deleteBtn.innerHTML = '❌';\n            deleteBtn.title = 'Delete terrain';\n            deleteBtn.addEventListener('click', () => this.deleteTerrain(terrain.type));\n            buttonContainer.appendChild(deleteBtn);\n            \n            // Assemble the terrain item\n            terrainItem.appendChild(option);\n            terrainItem.appendChild(label);\n            terrainItem.appendChild(buttonContainer);\n            \n            this.terrainTypesContainer.appendChild(terrainItem);\n        });\n        \n        // Add \"Add New Terrain\" button\n        const addNewBtn = document.createElement('button');\n        addNewBtn.className = 'add-terrain-btn';\n        addNewBtn.innerHTML = '+ Add Terrain';\n        addNewBtn.addEventListener('click', this.showAddTerrainForm.bind(this));\n        this.terrainTypesContainer.appendChild(addNewBtn);\n        \n        terrainsPanel.appendChild(this.terrainTypesContainer);\n        \n        // Create or update the terrain form event listeners\n        document.getElementById('saveTerrainBtn').addEventListener('click', this.saveTerrainType.bind(this));\n        document.getElementById('cancelTerrainBtn').addEventListener('click', this.hideTerrainForm.bind(this));\n    }\n\n    handleDragStart(e) {\n        this.draggedItem = e.target;\n        e.dataTransfer.effectAllowed = 'move';\n        e.dataTransfer.setData('text/html', e.target.innerHTML);\n        e.target.style.opacity = '0.4';\n    }\n    \n    handleDragOver(e) {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        return false;\n    }\n    \n    handleDrop(e) {\n        e.preventDefault();\n        if (this.draggedItem !== e.target) {\n            // Swap the positions in the DOM\n            const allItems = Array.from(this.terrainTypesContainer.querySelectorAll('.terrain-item'));\n            const draggedIndex = allItems.indexOf(this.draggedItem);\n            const dropIndex = allItems.indexOf(e.target);\n    \n            // Update the terrainTypes array\n            const temp = this.tileMap.terrainTypes[draggedIndex];\n            this.tileMap.terrainTypes[draggedIndex] = this.tileMap.terrainTypes[dropIndex];\n            this.tileMap.terrainTypes[dropIndex] = temp;\n    \n            // Update the DOM\n            if (draggedIndex < dropIndex) {\n                e.target.parentNode.insertBefore(this.draggedItem, e.target.nextSibling);\n            } else {\n                e.target.parentNode.insertBefore(this.draggedItem, e.target);\n            }\n            this.exportMap();\n        }\n        return false;\n    }\n    \n    handleDragEnd(e) {\n        e.target.style.opacity = '1';\n        this.draggedItem = null;\n    }\n\n    showAddTerrainForm() {\n        const form = document.getElementById('terrainForm');\n        form.classList.add('show');\n        document.getElementById('formTitle').textContent = 'Add Terrain Type';\n        document.getElementById('editingType').value = '';\n        document.getElementById('terrainType').value = '';\n        document.getElementById('terrainColor').value = '#cccccc';\n        document.getElementById('terrainColorText').value = '#cccccc';  \n        document.getElementById('terrainImage').value = '[]';        \n        document.getElementById('terrainBuildable').checked = false;         \n    }\n\n    showTerrainEditForm(terrain) {\n        const form = document.getElementById('terrainForm');\n        form.classList.add('show');\n        document.getElementById('formTitle').textContent = 'Edit Terrain Type';\n        document.getElementById('editingType').value = terrain.type;\n        document.getElementById('terrainType').value = terrain.type;\n        document.getElementById('terrainColor').value = terrain.color;\n        document.getElementById('terrainColorText').value = terrain.color;\n        document.getElementById('terrainImage').value = JSON.stringify(terrain.image || []);   \n        document.getElementById('terrainBuildable').checked = terrain.buildable;\n        \n        // Create a custom event with data\n        const myCustomEvent = new CustomEvent('editTerrainImage', {\n            bubbles: true,\n            cancelable: true\n        });\n\n        // Dispatch the event\n        document.body.dispatchEvent(myCustomEvent);\n    }\n\n    hideTerrainForm() {\n        document.getElementById('terrainForm').classList.remove('show');\n    }\n\n    saveTerrainType() {\n        const editingType = document.getElementById('editingType').value;\n        const newType = document.getElementById('terrainType').value.trim();\n        const newColor = document.getElementById('terrainColorText').value;\n        const newImage = JSON.parse(document.getElementById('terrainImage').value);\n        const newBuildable = document.getElementById('terrainBuildable').checked;\n        \n        if (!newType) {\n            alert('Terrain type cannot be empty');\n            return;\n        }\n        \n        if (editingType) {\n            // Editing existing terrain\n            const index = this.tileMap.terrainTypes.findIndex(t => t.type === editingType);\n            if (index !== -1) {\n                // If type name is changing, update all map references\n                if (editingType !== newType) {\n                    // Check if new type name already exists\n                    if (this.tileMap.terrainTypes.some(t => t.type === newType)) {\n                        alert('A terrain type with this name already exists');\n                        return;\n                    }\n                    \n                    // Update terrainMap\n                    for (let y = 0; y < this.tileMap.terrainMap.length; y++) {\n                        for (let x = 0; x < this.tileMap.terrainMap[y].length; x++) {\n                            if (this.tileMap.terrainMap[y][x] === editingType) {\n                                this.tileMap.terrainMap[y][x] = newType;\n                            }\n                        }\n                    }\n                    \n                    // Update current terrain type if selected\n                    if (this.currentTerrainType === editingType) {\n                        this.currentTerrainType = newType;\n                    }\n                }\n                \n                // Update the terrain type\n                this.tileMap.terrainTypes[index] = { type: newType, color: newColor, image: newImage, buildable: newBuildable };\n            }\n        } else {\n            // Adding new terrain\n            // Check if type already exists\n            if (this.tileMap.terrainTypes.some(t => t.type === newType)) {\n                alert('A terrain type with this name already exists');\n                return;\n            }\n            \n            // Add new terrain type\n            this.tileMap.terrainTypes.push({ type: newType, color: newColor, image: newImage, buildable: newBuildable });\n        }\n        \n        // Update UI and CSS\n        this.updateTerrainStyles();\n        this.setupTerrainTypesUI();\n        this.hideTerrainForm();        \n\n        // Update canvas rendering\n        this.updateCanvasWithData();\n        \n        // Export updated map\n        this.exportMap();\n    }\n\n    deleteTerrain(typeToDelete) {\n        // Don't allow deleting if it's the last terrain type\n        if (this.tileMap.terrainTypes.length <= 1) {\n            alert('Cannot delete the last terrain type');\n            return;\n        }\n        \n        // Confirm deletion\n        if (!confirm(`Are you sure you want to delete the \"${typeToDelete}\" terrain type? All instances will be converted to grass.`)) {\n            return;\n        }\n        \n        // Find the default terrain to replace with (grass or first available)\n        const defaultType = this.tileMap.terrainTypes.find(t => t.type === 'grass') || this.tileMap.terrainTypes[0];\n        \n        // Remove from terrainTypes array\n        const index = this.tileMap.terrainTypes.findIndex(t => t.type === typeToDelete);\n        if (index !== -1) {\n            this.tileMap.terrainTypes.splice(index, 1);\n        }\n        \n        // Update terrainMap - replace all instances with defaultType\n        for (let y = 0; y < this.tileMap.terrainMap.length; y++) {\n            for (let x = 0; x < this.tileMap.terrainMap[y].length; x++) {\n                if (this.tileMap.terrainMap[y][x] === typeToDelete) {\n                    this.tileMap.terrainMap[y][x] = defaultType.type;\n                }\n            }\n        }\n        \n        // Update current terrain type if selected\n        if (this.currentTerrainType === typeToDelete) {\n            this.currentTerrainType = defaultType.type;\n        }\n        \n        // Update UI and CSS\n        this.updateTerrainStyles();\n        this.setupTerrainTypesUI();\n        \n        // Update canvas rendering\n        this.updateCanvasWithData();\n        \n        // Export updated map\n        this.exportMap();\n    }\n\n    updateTerrainStyles() {\n        // Create or update the style element for terrain colors\n        let styleElem = document.getElementById('terrainStyles');\n        if (!styleElem) {\n            styleElem = document.createElement('style');\n            styleElem.id = 'terrainStyles';\n            document.head.appendChild(styleElem);\n        }\n        \n        // Generate CSS for each terrain type\n        let css = '';\n        this.tileMap.terrainTypes.forEach(terrain => {\n            css += `#level-editor-container .color-option.${terrain.type} { background-color: ${terrain.color}; }\\n`;\n        });\n        \n        styleElem.textContent = css;\n    }\n\n\n    translateMap(deltaX, deltaY) {\n        const gridSize = this.tileMap.size;\n        \n        // Create a new map to hold the translated terrain\n        const newTerrainMap = [];\n        for (let i = 0; i < gridSize; i++) {\n            newTerrainMap.push(new Array(gridSize));\n        }\n        \n        // Fill the new map\n        for (let i = 0; i < gridSize; i++) {\n            for (let j = 0; j < gridSize; j++) {\n                // Calculate source coordinates in old map\n                const oldI = i - deltaY;\n                const oldJ = j - deltaX;\n                \n                // Check if source coordinates are within map boundaries\n                if (oldI >= 0 && oldI < gridSize && oldJ >= 0 && oldJ < gridSize) {\n                    // Copy existing terrain\n                    newTerrainMap[i][j] = this.tileMap.terrainMap[oldI][oldJ];\n                } else {\n                    // For areas that would be outside the original map,\n                    // use the nearest edge value (wrap around)\n                    const clampedI = Math.max(0, Math.min(gridSize - 1, oldI));\n                    const clampedJ = Math.max(0, Math.min(gridSize - 1, oldJ));\n                    newTerrainMap[i][j] = this.tileMap.terrainMap[clampedI][clampedJ];\n                }\n            }\n        }\n        \n        // Update tileMap with new terrain\n        this.tileMap.terrainMap = newTerrainMap;\n        \n        // Update UI and export\n        this.initGridCanvas();\n        this.exportMap();\n    }\n\n    async initGridCanvas() {\n        // Initialize the canvas with our map renderer\n        if(this.environment){\n            await this.imageManager.loadImages(\"environment\", this.environment);\n        }\n        await this.imageManager.loadImages(\"levels\", { level: { tileMap: this.tileMap }});\n        \n        // Initialize the map renderer\n        if (!this.mapRenderer) {\n            this.terrainCanvasBuffer = document.createElement('canvas');\n            this.terrainCanvasBuffer.width = this.canvasEl.width;\n            this.terrainCanvasBuffer.height = this.canvasEl.height;\n            this.mapRenderer = new (this.gameEditor.scriptContext.getRenderer(\"mapRenderer\"))(this.game, null,\n                { \n                    gameConfig: this.config, \n                    terrainCanvasBuffer: this.terrainCanvasBuffer, \n                    canvasBuffer: this.canvasEl, \n                    environment: [], \n                    imageManager: this.imageManager, \n                    levelName: 'level', \n                    level: { tileMap: this.tileMap }\n                }\n            );\n        }\n      \n        // Render the initial map\n        this.updateCanvasWithData();\n        \n        // Clean up resources\n        this.imageManager.dispose();\n    }\n\n    handleCanvasInteraction(event) {\n        // Get mouse position relative to canvas\n        const rect = this.canvasEl.getBoundingClientRect();\n        let mouseX = event.clientX - rect.left;\n        const mouseY = event.clientY - rect.top;\n        \n        if(!this.gameEditor.getCollections().configs.game.isIsometric ) {\n            mouseX -= ( this.canvasEl.width - this.mapSize *  this.config.gridSize) / 2;\n        }\n        // Convert from isometric to grid coordinates\n        const gridPos = this.translator.isoToGrid(mouseX, mouseY);\n        \n        // Snap to grid\n        const snappedGrid = this.translator.snapToGrid(gridPos.x, gridPos.y);\n        \n        // Check if coordinates are within bounds\n        if (snappedGrid.x >= 0 && snappedGrid.x < this.mapSize && \n            snappedGrid.y >= 0 && snappedGrid.y < this.mapSize) {\n            \n            // Update terrain map with selected terrain type\n            this.tileMap.terrainMap[snappedGrid.y][snappedGrid.x] = this.currentTerrainType;\n            \n            // Update the map rendering\n            this.updateCanvasWithData();\n            \n            // Export the updated map\n            this.exportMap();\n        }\n    }\n\n    updateCanvasWithData() {\n        if(this.tileMap.terrainMap.length > 0){\n            this.mapManager = new (this.gameEditor.scriptContext.getComponent(\"mapManager\"))(this.game, null, { level: { tileMap: this.tileMap } });\n            this.mapRenderer.isMapCached = false;\n            let map = this.mapManager.generateMap(this.tileMap);\n            this.mapRenderer.renderBG({}, this.tileMap, map.tileMap, [], true);\n        }\n    }\n\n    exportMap() {\n        // Create a custom event with data\n        const myCustomEvent = new CustomEvent('saveTileMap', {\n            detail: { data: this.tileMap, propertyName: this.savePropertyName },\n            bubbles: true,\n            cancelable: true\n        });\n\n        // Dispatch the event\n        document.body.dispatchEvent(myCustomEvent);\n    }\n\n}\n"
      },
      "scriptEditor": {
        "script": "class ScriptEditor {\n    constructor(gameEditor, config) {\n      \n        this.gameEditor = gameEditor;\n        this.config = config;\n        let theme = \"\";\n        if( this.gameEditor.getCollections().configs.codeMirror ) {\n            theme = this.gameEditor.getCollections().themes[this.gameEditor.getCollections().configs.codeMirror.theme].css;\n            if( theme ) { \n              let styleTag = document.createElement('style');\n              styleTag.innerHTML = theme;\n              styleTag.setAttribute('id', 'codeMirrorTheme');\n              document.head.append(styleTag);\n            }\n        }\n        this.container = document.getElementById('script-editor-container'); \n        this.MIN_HEIGHT = 200;\n        this.isDragging = false;\n        this.start_y = 0;\n        this.start_h = 0;\n        this.DEFAULT_HEIGHT = () => document.body.clientHeight - 200;\n\t\t\t\tthis.savePropertyName = \"script\";\n        if (!this.container) {\n            console.error(\"ScriptEditor container not found\");\n            return;\n        }\n\n        const textArea = this.container.querySelector('#script-editor');\n        if (!textArea) {\n            console.error(\"Textarea #script-editor not found\");\n            return;\n        }\n\n        this.scriptEditor = CodeMirror.fromTextArea(textArea, {\n            mode: 'javascript',\n            lineNumbers: true,\n            tabSize: 2,\n            indentWithTabs: false,\n            extraKeys: { 'Ctrl-Space': 'autocomplete' },\n            hintOptions: { completeSingle: false }\n        });\n\n        this.scriptEditor.setSize(null, this.DEFAULT_HEIGHT());\n\n        this.setupEventListeners();\n        \n        \n    }\n   \n    setupEventListeners() {\n     \n        document.body.addEventListener('editScript', (event) => {\n            this.scriptValue = event.detail.data;\n            this.savePropertyName = event.detail.propertyName;\n            this.scriptEditor.setValue(this.scriptValue);\n            this.scriptEditor.setSize(null, this.DEFAULT_HEIGHT());\n            this.scriptEditor.refresh();\n            setTimeout(() => {\n                this.scriptEditor.refresh();\n            }, 100);\n        });\n        \n        const saveBtn = this.container.querySelector('#save-script-btn');\n        if (saveBtn) {\n            saveBtn.addEventListener('click', () => this.saveScript());\n        } else {\n            console.warn(\"Save button not found\");\n        }\n    }\n\n    saveScript() {\n\n        if (!this.gameEditor.getCurrentObject()) {\n            console.warn(\"No selected object to save script to\");\n            return;\n        }\n        const scriptText = this.scriptEditor.getValue();\n   \n        const myCustomEvent = new CustomEvent('saveScript', {\n            detail: { data: scriptText, propertyName: this.savePropertyName }, \n            bubbles: true, \n            cancelable: true \n        });\n\n      \n        document.body.dispatchEvent(myCustomEvent);\n    }\n\n    destroy() {\n        if (this.container && this.container.parentNode) {\n            this.container.parentNode.removeChild(this.container);\n        }\n    }\n}\n"
      },
      "aiPromptPanel": {
        "script": "class AIPromptPanel {\n    constructor(gameEditor) {\n        this.gameEditor = gameEditor;\n      console.log(this.gameEditor);\n        const aiConfig = this.gameEditor.getCollections().configs.ai;\n        this.elements = {\n            launchBtn: null,\n            aiPromptModal: null,\n            promptTextarea: null,\n            sendBtn: null,\n            closeBtn: null,\n            previewArea: null,\n            applyBtn: null\n        };\n        this.init(aiConfig);\n    }\n\n    init(aiConfig) {\n       this.setupHooks();\n        // Create the AI Prompt Modal\n        const modal = document.getElementById('modal-aiPromptPanel');\n\n        this.config = aiConfig;\n        // Cache elements\n        this.elements = {\n            aiPromptModal: modal,\n            promptTextarea: modal.querySelector('#ai-prompt-textarea'),\n            prePromptTextarea: modal.querySelector('#ai-pre-prompt-textarea'),\n            sendBtn: modal.querySelector('#send-ai-prompt-btn'),\n            closeBtn: modal.querySelector('#close-ai-prompt-modal'),\n            previewArea: modal.querySelector('#ai-response-preview'),\n            applyBtn: modal.querySelector('#apply-ai-response-btn')\n        };\n\n        // Setup event listeners\n        this.setupEventListeners();\n    }\n\n    setupEventListeners() {\n        this.elements.sendBtn.addEventListener('click', () => this.sendPromptToAI());\n        this.elements.closeBtn.addEventListener('click', () => {\n            this.elements.aiPromptModal.classList.remove('show');\n        });\n        this.elements.applyBtn.addEventListener('click', () => {\n            this.applyAIResponse();\n        });\n    }\n\n    setupHooks() {\n        \n        document.body.addEventListener('renderEditor', () => {\n            if(this.elements.launchBtn) this.elements.launchBtn.remove();\n            this.elements.launchBtn = document.createElement('button');\n            this.elements.launchBtn.innerHTML = \"AI Prompt\";\n            this.elements.launchBtn.id = 'ai-prompt-modal';\n            this.gameEditor.elements.editor.querySelector(\".actions>div\")?.appendChild(this.elements.launchBtn);\n            this.elements.launchBtn.addEventListener('click', () => {\n                this.showModal();\n            });\n        });\n    }\n\n    getCurrentObjectContext() {\n        const { selectedType, selectedObject } = this.gameEditor.core.state;\n\n        return this.gameEditor.getCollections()[selectedType][selectedObject] || {};\n    }\n\n    generateContextPrompt(object) {\n        const type = this.gameEditor.core.getSingularType(this.gameEditor.core.state.selectedType);\n\t\tlet defaultPrompt = this.config.defaultPrompt.trim().replace(/\\$\\{type\\}/g, type);\n        return `${defaultPrompt}\\n\\nContext Object: \\n\\n${JSON.stringify(object, null, 2)}`;\n\t\t\n    }\n\n    async sendPromptToAI() {\n        const prompt = `${this.elements.prePromptTextarea.value} \\n\\n ${this.elements.promptTextarea.value}`;\n\n        try {\n            this.elements.previewArea.value = \"Generating ...\"; // Use .value for textarea\n\n            const { aiEndPoint, aiModel, apiKey, headers, requestBody } = this.prepareAIConfig(prompt);\n            console.log('Request config:', { aiEndPoint, aiModel, apiKey, headers, requestBody });\n\n            const response = await fetch(aiEndPoint, {\n                method: 'POST',\n                headers,\n                body: JSON.stringify(requestBody)\n            });\n\n            if (!response.ok) {\n                throw new Error(`AI generation failed: ${response.statusText}`);\n            }\n\n            const responseData = await response.json();\n            console.log('Raw API response:', responseData);\n\n            const aiOutput = this.extractAIOutput(responseData);\n            const cleanedOutput = this.cleanOutput(aiOutput);\n            console.log('Cleaned output:', cleanedOutput);\n\n            const parsedResponse = this.parseJSONResponse(cleanedOutput);\n            this.elements.previewArea.value = JSON.stringify(parsedResponse, null, 2); // Use .value\n            this.elements.applyBtn.style.display = 'block';\n        } catch (error) {\n            console.error('AI Generation Error:', error);\n            this.elements.previewArea.value = `Error: ${error.message}`; // Use .value\n            this.elements.applyBtn.style.display = 'none';\n        }\n    }\n\n    prepareAIConfig(prompt) {\n        let updated = false;\n\n        let aiEndPoint = this.config.aiEndPoint || \"http://127.0.0.1:11434/api/generate\";\n        let aiModel = this.config.aiModel || \"deepseek-r1:32b\";\n        const apiKey = this.config.aiApiKey || \"\";\n\n        if (!this.config.aiEndPoint) {\n            this.config.aiEndPoint = aiEndPoint;\n            updated = true;\n        }\n        if (!this.config.aiModel) {\n            this.config.aiModel = aiModel;\n            updated = true;\n        }\n        if (updated) {\n            this.gameEditor.renderObjectList();\n            this.gameEditor.saveToLocalStorage();\n        }\n\n        const headers = { 'Content-Type': 'application/json' };\n        let requestBody = { \n            prompt, \n            model: aiModel, \n            jsonOnly: true, \n            stream: false \n        };\n\n        if (apiKey) {\n            headers.Authorization = `Bearer ${apiKey}`;\n            requestBody = {\n                model: aiModel,\n                messages: [\n                    { role: 'system', content: 'You are a helpful assistant that generates valid JSON objects based on user prompts.' },\n                    { role: 'user', content: prompt }\n                ],\n                temperature: 0.7,\n                max_tokens: 500\n            };\n        }\n\n        return { aiEndPoint, aiModel, apiKey, headers, requestBody };\n    }\n\n    extractAIOutput(responseData) {\n        return responseData.response || responseData.result || responseData;\n    }\n\n cleanOutput(aiOutput) {\n        const outputString = typeof aiOutput === 'string' ? aiOutput : JSON.stringify(aiOutput);\n        return outputString\n            .replace(/```json\\s*/g, '') // Remove ```json and optional whitespace/newlines\n            .replace(/```\\s*/g, '')     // Remove ``` and optional whitespace/newlines\n            .replace(/<think\\s*>[\\s\\S]*?<\\/think\\s*>/gi, '') // Remove <think> tags\n            .replace(/<think[\\s\\S]*?\\/>/gi, '') // Remove self-closing <think> tags\n            .trim(); // Remove leading/trailing whitespace\n    }\n\n    parseJSONResponse(cleanedOutput) {\n        try {\n            return JSON.parse(cleanedOutput);\n        } catch (parseError) {\n            throw new Error('Invalid JSON response from AI:\\n' + cleanedOutput);\n        }\n    }\n\n    applyAIResponse() {\n        try {\n            const responseText = this.elements.previewArea.value; // Use .value for textarea\n            const parsedResponse = JSON.parse(responseText);\n\n            if (!parsedResponse.id) {\n                alert(\"Must include id in new object.\");\n                return;\n            }\n\n            const { selectedType } = this.gameEditor.core.state;\n            this.gameEditor.state.project.objectTypes[selectedType][parsedResponse.id] = parsedResponse;\n\n            this.gameEditor.renderObjectList();\n            this.gameEditor.selectObject(parsedResponse.id); // Use new id instead of old selectedObject\n            this.gameEditor.saveToLocalStorage();\n\n            this.elements.aiPromptModal.classList.remove('show');\n        } catch (error) {\n            console.error('Error applying AI response:', error);\n            alert('Failed to apply AI response. Please check the JSON format.');\n        }\n    }\n\n    showModal() {\n        const currentObject = this.getCurrentObjectContext();\n        this.elements.prePromptTextarea.value = this.generateContextPrompt(currentObject); // Use .value\n        this.elements.previewArea.value = ''; // Use .value\n        this.elements.applyBtn.style.display = 'none';\n        this.elements.aiPromptModal.classList.add('show');\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
      },
      "audioEditor": {
        "script": "class AudioEditor {\n    constructor(gameEditor) {\n        this.gameEditor = gameEditor;\n        this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        this.sampleRate = 44100; // Standard CD-quality sample rate\n        this.setupEventListeners();\n    }\n\n    setupEventListeners() {\n\n        document.body.addEventListener('editAudio', async (event) => {\n            this.audioDataBase64 = event.detail.data;\n          \tthis.savePropertyName = event.detail.propertyName;\n            this.audioBuffer = await this.importFromBase64(this.audioDataBase64);\n  \n            const source = this.audioContext.createBufferSource();\n            source.buffer = this.audioBuffer;\n            source.connect(this.audioContext.destination);\n            source.start();\n        });\n        // Play button event\n        document.getElementById('playBtn').addEventListener('click', () => {\n            const waveform = document.getElementById('waveform').value;\n            const frequency = parseFloat(document.getElementById('frequency').value);\n            const duration = parseFloat(document.getElementById('duration').value);\n            this.playAudio(waveform, frequency, duration);\n        });\n\n        // Export button event\n        document.getElementById('exportBtn').addEventListener('click', () => {\n            const waveform = document.getElementById('waveform').value;\n            const frequency = parseFloat(document.getElementById('frequency').value);\n            const duration = parseFloat(document.getElementById('duration').value);\n            const jsonData = this.exportToBase64(waveform, frequency, duration);\n            this.saveAudio(jsonData);\n        });\n    }   \n\n    // Play a audio with given waveform, frequency, and duration\n    playAudio(waveform, frequency, duration) {\n        const oscillator = this.audioContext.createOscillator();\n        oscillator.type = waveform;\n        oscillator.frequency.setValueAtTime(frequency, this.audioContext.currentTime);\n        oscillator.connect(this.audioContext.destination);\n        oscillator.start();\n        oscillator.stop(this.audioContext.currentTime + duration);\n    }\n\n    // Export audio as Base64-encoded JSON\n    exportToBase64(waveform, frequency, duration) {\n        // Generate raw audio data\n        const buffer = new Float32Array(Math.floor(this.sampleRate * duration));\n        for (let i = 0; i < buffer.length; i++) {\n            const t = i / this.sampleRate;\n            buffer[i] = this.generateWaveform(waveform, frequency, t);\n        }\n\n        // Convert to WAV\n        const wavData = this.createWavFile(buffer, this.sampleRate);\n        const base64String = btoa(wavData);\n\n        // Return JSON object\n        return base64String;\n    }\n    async importFromBase64(base64String, mimeType = \"audio/wav\") {\n        // Decode Base64 to binary string\n        const binaryString = atob(base64String);\n        \n        // Convert binary string to Uint8Array\n        const bytes = new Uint8Array(binaryString.length);\n        for (let i = 0; i < binaryString.length; i++) {\n            bytes[i] = binaryString.charCodeAt(i);\n        }\n\n        // Create a Blob from the binary data\n        const blob = new Blob([bytes], { type: mimeType });\n        const url = URL.createObjectURL(blob);\n\n        // Play using Web Audio API\n        return fetch(url)\n            .then(response => response.arrayBuffer())\n            .then(arrayBuffer => this.audioContext.decodeAudioData(arrayBuffer))           \n            .catch(err => console.error('Error importing Base64 audio:', err));\n    }\n    // Generate waveform sample\n    generateWaveform(type, frequency, t) {\n        const angularFrequency = 2 * Math.PI * frequency;\n        switch (type) {\n            case 'sine':\n                return Math.sin(angularFrequency * t);\n            case 'square':\n                return Math.sin(angularFrequency * t) > 0 ? 1 : -1;\n            case 'sawtooth':\n                return 2 * (t * frequency - Math.floor(t * frequency + 0.5));\n            case 'triangle':\n                return 2 * Math.abs(2 * (t * frequency - Math.floor(t * frequency + 0.5))) - 1;\n            default:\n                return 0;\n        }\n    }\n\n    // Create WAV file (mono, 16-bit PCM)\n    createWavFile(buffer, sampleRate) {\n        const numSamples = buffer.length;\n        const byteRate = sampleRate * 2; // 16-bit mono\n        const blockAlign = 2; // 16-bit mono\n        const dataSize = numSamples * 2;\n\n        const arrayBuffer = new ArrayBuffer(44 + dataSize);\n        const view = new DataView(arrayBuffer);\n\n        // RIFF header\n        this.writeString(view, 0, 'RIFF');\n        view.setUint32(4, 36 + dataSize, true);\n        this.writeString(view, 8, 'WAVE');\n\n        // fmt chunk\n        this.writeString(view, 12, 'fmt ');\n        view.setUint32(16, 16, true); // Subchunk size\n        view.setUint16(20, 1, true); // PCM format\n        view.setUint16(22, 1, true); // Mono\n        view.setUint32(24, sampleRate, true);\n        view.setUint32(28, byteRate, true);\n        view.setUint16(32, blockAlign, true);\n        view.setUint16(34, 16, true); // Bits per sample\n\n        // data chunk\n        this.writeString(view, 36, 'data');\n        view.setUint32(40, dataSize, true);\n\n        // Write PCM samples\n        for (let i = 0; i < numSamples; i++) {\n            const sample = Math.max(-1, Math.min(1, buffer[i]));\n            view.setInt16(44 + i * 2, sample * 0x7FFF, true);\n        }\n\n        return String.fromCharCode.apply(null, new Uint8Array(arrayBuffer));\n    }\n\n    writeString(view, offset, string) {\n        for (let i = 0; i < string.length; i++) {\n            view.setUint8(offset + i, string.charCodeAt(i));\n        }\n    }\n\n    saveAudio(audio) {\n        if (!this.gameEditor.state.selectedObject) {\n            console.warn(\"No selected object to save script to\");\n            return;\n        }\n        // Create a custom event with data\n        const myCustomEvent = new CustomEvent('saveAudio', {\n            detail: { data: audio, propertyName: this.savePropertyName }, \n            bubbles: true, \n            cancelable: true \n        });\n\n        // Dispatch the event\n        document.body.dispatchEvent(myCustomEvent);\n    }\n}"
      },
      "threejs": {
        "title": "THREE",
        "href": "https://cdn.jsdelivr.net/npm/three@0.128.0/build/three.min.js",
        "className": "THREE",
        "requireName": "three"
      },
      "jszip.min.js": {
        "title": "jszip.min.js",
        "href": "https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"
      },
      "ShapeFactory": {
        "script": " class ShapeFactory {\n    constructor() {\n        this.gltfCache = new Map();\n        this.gltfLoader = new THREE.GLTFLoader();\n    }\n\n    createFromJSON(shapeData) {\n        const group = new THREE.Group();\n        \n        group.userData.isShape = true; // Mark the group itself\n        shapeData.shapes.forEach((shape, index) => {\n            if (shape.type === 'gltf') {\n                this.handleGLTFShape(shape, index, group);\n            } else {\n                this.handlePrimitiveShape(shape, group);\n            }\n        });\n\n        return group;\n    }\n\n    handleGLTFShape(shape, index, group) {\n        const applyTransformations = (model) => {\n            model.position.set(shape.x || 0, shape.y || 0, shape.z || 0);\n            model.scale.set(\n                shape.scaleX || 1,\n                shape.scaleY || 1,\n                shape.scaleZ || 1\n            );\n            model.rotation.set(\n                (shape.rotationX || 0) * Math.PI / 180,\n                (shape.rotationY || 0) * Math.PI / 180,\n                (shape.rotationZ || 0) * Math.PI / 180\n            );\n            \n            model.traverse(child => {\n                if (child.isMesh) {\n                    child.userData = {\n                        isShape: true,\n                        index: index,\n                        isGLTFChild: true\n                    };\n                }\n            });\n            \n            model.userData = {\n                isShape: true,\n                index: index,\n                isGLTFRoot: true,\n                castShadow: true\n            };\n            \n            group.add(model);\n        };\n\n        const cached = this.gltfCache.get(shape.url);\n        if (cached) {\n            applyTransformations(cached.scene.clone());\n        } else if( shape.url) {\n          \t\n            this.gltfLoader.load(shape.url, (gltf) => {\n                this.gltfCache.set(shape.url, gltf);\n                applyTransformations(gltf.scene.clone());\n            });\n        }\n    }\n\n    handlePrimitiveShape(shape, group) {\n        let geometry, material;\n\n        // Create material with specified color\n        material = new THREE.MeshStandardMaterial({ color: shape.color });\n\n        switch (shape.type) {\n            case 'sphere':\n                geometry = new THREE.SphereGeometry(shape.size / 2, 32, 32);\n                break;\n            case 'cube':\n                geometry = new THREE.BoxGeometry(shape.size, shape.size, shape.size);\n                break;\n            case 'box':\n                geometry = new THREE.BoxGeometry(shape.width, shape.height, shape.depth || shape.width);\n                break;\n            case 'cylinder':\n                geometry = new THREE.CylinderGeometry(shape.size / 2, shape.size / 2, shape.height, 32);\n                break;\n            case 'cone':\n                geometry = new THREE.ConeGeometry(shape.size / 2, shape.height, 32);\n                break;\n            case 'torus':\n                geometry = new THREE.TorusGeometry(shape.size / 2, shape.tubeSize || shape.size / 6, 16, 100);\n                break;\n            case 'tetrahedron':\n                geometry = new THREE.TetrahedronGeometry(shape.size / 2);\n                break;\n            default:\n                return;\n        }\n\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.userData = { isShape: true, castShadow: true };\n        \n        // Position and rotation\n        mesh.position.set(shape.x || 0, shape.y || 0, shape.z || 0);\n        mesh.rotation.set(\n            (shape.rotationX || 0) * Math.PI / 180,\n            (shape.rotationY || 0) * Math.PI / 180,\n            (shape.rotationZ || 0) * Math.PI / 180\n        );\n\n        group.add(mesh);\n    }\n\n    disposeObject(object) {\n        object.traverse(child => {\n            if (child.geometry) child.geometry.dispose();\n            if (child.material) {\n                if (Array.isArray(child.material)) {\n                    child.material.forEach(m => m.dispose());\n                } else {\n                    child.material.dispose();\n                }\n            }\n        });\n    }\n}"
      },
      "ImageManager": {
        "script": "\nclass ImageManager {\n    constructor(app, {imageSize}, {ShapeFactory}) {\n        \n        this.app = app;\n        this.images = {};\n        this.imageSize = imageSize || 128;\n        // Create a single reusable renderer\n        this.renderer = new THREE.WebGLRenderer({ antialias: false, alpha: true });\n        this.renderer.setSize(this.imageSize, this.imageSize);\n        this.renderer.shadowMap.enabled = true;\n        this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        \n        this.renderTarget = new THREE.WebGLRenderTarget(this.imageSize, this.imageSize);\n        this.renderTarget.texture.flipY = true;\n        \n        // Create reusable scene\n        this.scene = new THREE.Scene();\n        \n        // Create reusable cameras for different views\n        const cameraDistance = 64;\n        const frustumSize = cameraDistance + 16;\n        const aspect = 1;\n\n        this.shapeFactory = new ShapeFactory();\n        // Create 8 cameras for isometric views at 45-degree intervals\n        this.cameras = [];\n        for (let i = 0; i < 8; i++) {\n            this.cameras.push(new THREE.OrthographicCamera(-frustumSize * aspect, frustumSize * aspect, frustumSize, -frustumSize, 0.1, 1000));\n        }\n        \n        // Position cameras in a circle around the y-axis at isometric angle\n        // Standard isometric angle is about 35.264 degrees (arctan(1/sqrt(2)))\n        const isoAngle = Math.atan(1 / Math.sqrt(2));\n        const horizDistance = cameraDistance * Math.cos(isoAngle);\n        const vertDistance = cameraDistance * Math.sin(isoAngle);\n        \n        for (let i = 0; i < 8; i++) {\n            const angle = (i * Math.PI / 4); // 45-degree increments\n            const x = horizDistance * Math.sin(angle);\n            const z = horizDistance * Math.cos(angle);\n            \n            this.cameras[i].position.set(x, vertDistance, z);\n            this.cameras[i].lookAt(0, 0, 0);\n        }\n        \n        // Create reusable lights\n        this.ambientLight = new THREE.AmbientLight(0xffaaff, .25);\n        \n        // Create a light group that will rotate with each camera view\n        this.lightGroup = new THREE.Group();\n        \n        // Main directional light\n        this.directionalLight = new THREE.DirectionalLight(0xffffaa, .7);\n        this.directionalLight.position.set(75, 96, 75);\n        this.directionalLight.castShadow = true;\n        this.directionalLight.shadow.mapSize.width = 1024;\n        this.directionalLight.shadow.mapSize.height = 1024;\n        this.directionalLight.shadow.camera.near = 0.5;\n        this.directionalLight.shadow.camera.far = 500;\n        this.directionalLight.shadow.bias = -0.0005;\n        this.directionalLight.shadow.normalBias = 0.02;\n        this.directionalLight.shadow.radius = 1;\n        this.lightGroup.add(this.directionalLight);\n        \n        // Fill light\n        this.fillLight = new THREE.DirectionalLight(0xffaaff, .5);\n        this.fillLight.position.set(-20, 30, -20);\n        this.lightGroup.add(this.fillLight);\n        \n        // Create ground plane\n        const groundGeometry = new THREE.PlaneGeometry(200, 200);\n        const groundMaterial = new THREE.ShadowMaterial({ opacity: 0.3 });\n        this.ground = new THREE.Mesh(groundGeometry, groundMaterial);\n        this.ground.rotation.x = -Math.PI / 2;\n        this.ground.position.y = 0;\n        this.ground.receiveShadow = true;\n    }\n\n    dispose() {\n        // Proper cleanup when the manager is no longer needed\n        if (this.renderer) {\n            this.renderer.dispose();\n            this.renderer = null;\n        }\n        if (this.renderTarget) {\n            this.renderTarget.dispose();\n            this.renderTarget = null;\n        }\n        if (this.ground && this.ground.geometry) {\n            this.ground.geometry.dispose();\n            this.ground.material.dispose();\n        }\n        // Dispose of other reusable resources\n        this.cameras = [];\n        this.scene = null;\n        this.lightGroup = null;\n        this.ambientLight = null;\n    }\n\n    async loadImages(prefix, config) {\n        for (const [type, cfg] of Object.entries(config)) {\n            if (cfg.render && cfg.render.animations) {\n                this.images[`${prefix}_${type}`] = await this.createAnimatedPlaceholder(cfg);\n            } else if (cfg.tileMap && cfg.tileMap.terrainTypes) {\n                console.log(`${prefix}_${type}`);\n                this.images[`${prefix}_${type}`] = this.createTerrainImages(cfg);\n            }\n        }\n    }\n\n    createTerrainImages(config) {\n        let terrainTiles = [];\n        config.tileMap.terrainTypes.forEach((terrainType) => {   \n            let tileWidth = 24;\n            let sprites = [];\n            sprites.length = 8;\n            const pixelData = terrainType.image; // Single 2D array with all sprites\n            if(pixelData){\n                // Create 8 sprite canvases from different regions\n                for (let spriteIdx = 0; spriteIdx < pixelData.length; spriteIdx++) {\n                 \n                    let imagePixelData = pixelData[spriteIdx];\n                                        // Create an Image object\n                    const img = new Image();\n                    img.setAttribute(\"data-index\", spriteIdx);\n                    // When the image loads, draw it on the canvas\n                    img.onload = function() {\n                        const canvas = document.createElement('canvas');\n                        canvas.width = canvas.height = tileWidth;\n                        let ctx = canvas.getContext('2d');\n                        // Set canvas dimensions to match the image\n                        canvas.width = img.width;\n                        canvas.height = img.height;\n                \n                        // Draw the image on the canvas\n                        ctx.drawImage(img, 0, 0);\n                        sprites[parseInt(img.getAttribute(\"data-index\"))] = canvas;\n                    };\n                \n                    // Handle errors in case the Base64 string is invalid\n                    img.onerror = function() {\n                        console.error(\"Failed to load image from Base64 string.\");\n                    };\n                \n                    // Set the Base64 string as the image source\n                    // Add the data URL prefix if it's not already present\n                    if (!imagePixelData.startsWith('data:image/')) {\n                        imagePixelData = 'data:image/png;base64,' + imagePixelData;\n                    }\n\n                    img.src = imagePixelData;\n                }\n                \n                terrainTiles.push({ \n                    type: terrainType.type, \n                    sprites: sprites \n                });\n            }\n        });\n        return terrainTiles;\n    }\n    async createAnimatedPlaceholder(config) {\n        const animations = {};\n        for (const [animType, frames] of Object.entries(config.render.animations)) {\n            animations[animType] = [];\n            let i = 0;\n            for (const frame of frames) {\n                const frameImages = await this.captureObjectImagesFromJSON(frame);\n                const canvases = frameImages.map(img => {\n                    const canvas = document.createElement('canvas');\n                    canvas.width = canvas.height = this.imageSize;\n                    const ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, 0, 0);\n                    return canvas;\n                });                \n                animations[animType].push(canvases); // Array of 8 canvases per frame\n            }\n        }\n        return animations; // { \"idle\": [[canvas0, canvas1, canvas2, canvas3, ...], ...], \"walk\": [...] }\n    }\n\n    getImages(prefix, type) {\n        return this.images[`${prefix}_${type}`]; // Returns animation object\n    }\n    async captureObjectImagesFromJSON(shapeData) {\n        const size = this.imageSize;\n        // Clear the scene\n        while (this.scene.children.length > 0) {\n            const object = this.scene.children[0];\n            this.scene.remove(object);\n        }\n        \n        // Add reusable elements to scene\n        this.scene.add(this.ground);\n        this.scene.add(this.ambientLight);\n        this.scene.add(this.lightGroup);\n        \n        // Create objects from the JSON data\n        const objectGroup = this.createObjectsFromJSON(shapeData, this.scene);\n        \n        \n        const images = [];\n        \n        // For each camera view, rotate the light group to match camera orientation\n        for (let i = 0; i < this.cameras.length; i++) {\n            const camera = this.cameras[i];\n            \n            // Reset light group rotation\n            this.lightGroup.rotation.set(0, 0, 0);\n            \n            // Rotate light group to match camera position\n            // Calculate angle based on camera index (8 positions at 45-degree intervals)\n            // Rotate 45 degrees CLOCKWISE (subtract π/4 instead of adding)\n            const angle = (i * Math.PI / 4); \n            this.lightGroup.rotation.y = angle;\n            \n            // Before rendering with each camera, update shadow camera frustum\n            const d = 100;\n            this.directionalLight.shadow.camera.left = -d;\n            this.directionalLight.shadow.camera.right = d;\n            this.directionalLight.shadow.camera.top = d;\n            this.directionalLight.shadow.camera.bottom = -d;\n            // After rotating lightGroup in the camera loop\n            this.directionalLight.shadow.camera.updateProjectionMatrix();\n            this.directionalLight.shadow.camera.updateMatrixWorld();\n            this.directionalLight.target.position.set(0, 0, 0);\n            this.directionalLight.target.updateMatrixWorld();\n            // Render and capture the image\n            this.renderer.setRenderTarget(this.renderTarget);\n            this.renderer.render(this.scene, camera);\n            const buffer = new Uint8Array(size * size * 4);\n            this.renderer.readRenderTargetPixels(this.renderTarget, 0, 0, size, size, buffer);\n            \n            // Flip the buffer (y-axis)\n            const flippedBuffer = new Uint8Array(size * size * 4);\n            for (let y = 0; y < size; y++) {\n                const srcRowStart = y * size * 4;\n                const destRowStart = (size - 1 - y) * size * 4;\n                flippedBuffer.set(buffer.subarray(srcRowStart, srcRowStart + size * 4), destRowStart);\n            }\n            \n            const imageData = new ImageData(new Uint8ClampedArray(flippedBuffer), size, size);\n            const imageBitmap = await createImageBitmap(imageData);\n            images.push(imageBitmap);\n        }\n        if( this.renderer) this.renderer.setRenderTarget(null);\n        \n        // Cleanup object geometries and materials\n        this.shapeFactory.disposeObject(objectGroup);\n        \n        // Remove object group from scene\n        if( this.scene ) this.scene.remove(objectGroup);\n        \n        return images;\n    }\n\n    /**\n     * Creates 3D objects from shape data.\n     * @param {Object} shapeData - The JSON object containing shape definitions.\n     * @returns {THREE.Group} - A group containing all 3D objects.\n     */\n  \n    createObjectsFromJSON(shapeData, scene) {\n        const group = this.shapeFactory.createFromJSON(shapeData);\n        group.traverse((child) => {\n            if (child.isMesh) {\n                child.castShadow = true; // or set this selectively for objects that should cast shadows\n                child.receiveShadow = true; // for objects that should receive shadows\n            }\n        });\n        scene.add(group);\n        return group;\n    }\n   \n}\n"
      },
      "SpatialGrid": {
        "script": " \n    class SpatialGrid {\n        constructor(worldSize, cellSize) {\n            this.cellSize = cellSize;\n            this.cols = worldSize;\n            this.rows = worldSize;\n            this.grid = new Array(this.cols * this.rows).fill().map(() => []);\n            \n            // Track which cell each entity is in\n            this.entityCells = new Map(); // Map of entity -> cell index\n        }\n        \n        getIndex(x, y) {\n            return y * this.cols + x;\n        }\n\n        insert(entity) {\n            const newIndex = this.getIndex(entity.gridPosition.x, entity.gridPosition.y);\n            const oldIndex = this.entityCells.get(entity);\n            \n            // If entity moved to a new cell\n            if (oldIndex !== newIndex) {\n                // Remove from old cell if it exists\n                if (oldIndex !== undefined) {\n                    const oldCell = this.grid[oldIndex];\n                    const entityIndex = oldCell.indexOf(entity);\n                    if (entityIndex !== -1) {\n                        oldCell.splice(entityIndex, 1);\n                    }\n                }\n                \n                // Add to new cell\n                if (newIndex >= 0 && newIndex < this.grid.length) {\n                    this.grid[newIndex].push(entity);\n                    this.entityCells.set(entity, newIndex);\n                }\n            }\n        }\n        \n        remove(entity) {\n            const index = this.entityCells.get(entity);\n            if (index !== undefined) {\n                const cell = this.grid[index];\n                const entityIndex = cell.indexOf(entity);\n                if (entityIndex !== -1) {\n                    cell.splice(entityIndex, 1);\n                }\n                this.entityCells.delete(entity);\n            }\n        }\n        getNearbyEntities(x, y, radius, type=\"\") {\n            const nearby = [];\n            // Get cells that could contain entities within radius\n            const startX = Math.max(0, Math.floor((x - radius)));\n            const endX = Math.min(this.cols - 1, Math.floor((x + radius)));\n            const startY = Math.max(0, Math.floor((y - radius)));\n            const endY = Math.min(this.rows - 1, Math.floor((y + radius)));\n       \n            // Collect potential candidates from relevant cells\n            for (let row = startY; row <= endY; row++) {\n                for (let col = startX; col <= endX; col++) {\n                    const index = row * this.cols + col;\n                    if (index >= 0 && index < this.grid.length) {\n                        for (let entity of this.grid[index]) {\n                            const dx = entity.gridPosition.x - x;\n                            const dy = entity.gridPosition.y - y;\n                            const distSquared = dx * dx + dy * dy;\n                            \n                            if (distSquared <= radius * radius) {\n                                if(type) {\n                                    if( entity.type == type ) {\n                                        nearby.push(entity);\n                                    }\n                                } else {\n                                    nearby.push(entity);\n                                }\n                            }                            \n                        }\n                    }\n                }\n            }\n            \n            return nearby;\n        }\n        clear() {\n            this.grid = this.grid.map(() => []);\n            this.entityCells.clear();\n        }\n        \n        // Optional: Only clear but maintain all entity positions\n        // Useful for when reusing the same grid across updates\n        resetKeepingEntities() {\n            const allEntities = [];\n            this.entityCells.forEach((_, entity) => {\n                allEntities.push(entity);\n            });\n            \n            this.clear();\n            \n            allEntities.forEach(entity => {\n                this.insert(entity);\n            });\n        }\n    }\n"
      },
      "GLTFLoader": {
        "title": "GLTF Loader",
        "href": "https://cdn.jsdelivr.net/npm/three@0.128.0/examples/js/loaders/GLTFLoader.js",
        "className": "GLTFLoader"
      },
      "three.OrbitControls": {
        "title": "THREE.OrbitControls",
        "href": "https://cdn.jsdelivr.net/npm/three-orbitcontrols@2.110.3/OrbitControls.min.js",
        "isModule": true
      },
      "CoordinateTranslator": {
        "script": "class CoordinateTranslator {\n    constructor(config, mapSize, isometric = false) {\n        this.isometric = isometric;\n        this.tileWidth = config.gridSize;\n        this.tileHeight = config.gridSize * 0.5;\n        this.canvasWidth = config.canvasWidth;\n        this.canvasHeight = config.canvasHeight;\n        this.mapSize = mapSize;\n    }\n\n    // Pixel (top-down) to Grid\n    pixelToGrid(pixelX, pixelY) {\n        return {\n            x: pixelX / this.tileWidth,\n            y: pixelY / this.tileWidth\n        };\n    }\n\n    // Grid to Isometric (with vertical centering)\n    gridToIso(gridX, gridY) {\n        // If not isometric, return grid coordinates as-is\n        if (!this.isometric) {\n            return { x: gridX * this.tileWidth, y: gridY * this.tileWidth };\n        }\n\n        const isoX = (gridX - gridY) * (this.tileWidth / 2) + this.canvasWidth / 2;\n       \n        // Calculate the height the grid would occupy\n        const totalGridHeight = this.mapSize * this.tileHeight;\n       \n        // Center vertically by adding an offset\n        const verticalOffset = (this.canvasHeight - totalGridHeight) / 2;\n       \n        const isoY = (gridX + gridY) * (this.tileHeight / 2) + verticalOffset;\n       \n        return { x: isoX, y: isoY };\n    }\n\n    // Pixel (top-down) to Isometric\n    pixelToIso(pixelX, pixelY) {\n        if(!this.isometric){\n            return {\n                x: pixelX + ( this.canvasWidth - this.mapSize * this.tileWidth) / 2,\n                y: pixelY\n            }\n        }\n        const grid = this.pixelToGrid(pixelX, pixelY);\n        return this.gridToIso(grid.x, grid.y);\n    }\n\n    isoToGrid(isoX, isoY) {\n        // If not isometric, convert directly to grid\n        if (!this.isometric) {\n            return {\n                x: isoX / this.tileWidth,\n                y: isoY / this.tileWidth\n            };\n        }\n\n        const adjustedX = isoX - this.canvasWidth / 2;\n       \n        // Calculate the same vertical offset as in gridToIso\n        const totalGridHeight = this.mapSize * this.tileHeight;\n        const verticalOffset = (this.canvasHeight - totalGridHeight) / 2;\n       \n        // Subtract the offset before conversion\n        const adjustedY = isoY - verticalOffset;\n       \n        const gridX = (adjustedX / (this.tileWidth / 2) + adjustedY / (this.tileHeight / 2)) / 2;\n        const gridY = (adjustedY / (this.tileHeight / 2) - adjustedX / (this.tileWidth / 2)) / 2;\n       \n        return { x: gridX, y: gridY };\n    }\n\n    isoToPixel(isoX, isoY) {\n        const grid = this.isoToGrid(isoX, isoY);\n        return {\n            x: grid.x * this.tileWidth,\n            y: grid.y * this.tileWidth\n        };\n    }\n\n    // Snap grid coordinates to nearest integer\n    snapToGrid(gridX, gridY) {\n        return { x: Math.floor(gridX), y: Math.floor(gridY) };\n    }\n}"
      },
      "CanvasUtility": {
        "script": "class CanvasUtility {\n    constructor() {\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d', { willReadFrequently: true });\n\t\tthis.ctx.globalCompositeOperation = 'destination-over';// Set the composite operation to preserve transparency\n        \n\t\tthis.tempCanvas = document.createElement('canvas');\n        this.tempCtx = this.tempCanvas.getContext('2d', { willReadFrequently: true });\n\t\tthis.tempCtx.globalCompositeOperation = 'destination-over';// Set the composite operation to preserve transparency\n    }\n\n    setSize(width, height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n    paintTexture(imageData) {\n        this.setSize(imageData.width, imageData.height);\n        this.ctx.putImageData(imageData, 0, 0);\n        return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n\trotateTexture(imageData, angle) {\n        // Set the canvas size to accommodate the rotated image\n        // Note: If the rotation results in a change in width/height, adjust these values accordingly\n        this.setSize(imageData.width, imageData.height);\n\n        // Draw the original imageData to the canvas\n        this.ctx.putImageData(imageData, 0, 0);\n\n        // Apply the rotation\n        this.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\n        this.ctx.rotate(angle);\n        this.ctx.translate(-this.canvas.width / 2, -this.canvas.height / 2);\n\n        // Create a temporary canvas to hold the current state\n        this.tempCanvas.width = this.canvas.width;\n        this.tempCanvas.height = this.canvas.height;\n        this.tempCtx.drawImage(this.canvas, 0, 0);\n\n        // Clear the main canvas and draw the rotated image\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.drawImage(this.tempCanvas, 0, 0);\n\n        // Capture the rotated image data\n        let rotatedData = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n \n\n        return rotatedData;\n    }\n\tflipTextureVertical(imageData) {\n        this.setSize(imageData.width, imageData.height);\n\n        // Draw the original image data to the canvas\n        this.ctx.putImageData(imageData, 0, 0);\n\n        // Use an off-screen canvas to perform the flip\n        this.tempCanvas.width = imageData.width;\n        this.tempCanvas.height = imageData.height;\n  \n        // Apply the flip on the off-screen canvas\n        this.tempCtx.translate(0, this.tempCanvas.height);\n\t\tthis.tempCtx.scale(1, -1);\n\t\tthis.tempCtx.drawImage(this.canvas, 0, 0);\n\n        // Extract the flipped image data\n        return this.tempCtx.getImageData(0, 0, this.tempCanvas.width, this.tempCanvas.height);\n    }\n\n    flipTextureHorizontal(imageData) {\n        this.setSize(imageData.width, imageData.height);\n\n        // Draw the original image data to the canvas\n        this.ctx.putImageData(imageData, 0, 0);\n\n        // Use an off-screen canvas to perform the flip\n        this.tempCanvas.width = imageData.width;\n        this.tempCanvas.height = imageData.height;\n        // Apply the flip on the off-screen canvas\n\t\tthis.tempCtx.translate(this.tempCanvas.width, 0);\n\t\tthis.tempCtx.scale(-1, 1);\n\t\tthis.tempCtx.drawImage(this.canvas, 0, 0);\n\n        // Extract the flipped image data\n        return this.tempCtx.getImageData(0, 0, this.tempCanvas.width, this.tempCanvas.height);\n    }\n\tdrawImage(image) {\n        this.setSize(image.width, image.height);\n        this.ctx.drawImage(image, 0, 0);\n        return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n\trotateImage(image, angle) {\n\t\tthis.setSize(image.width, image.height);\n\t\t// Set up the rotation\n\t\tthis.ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\n\t\tthis.ctx.rotate(angle);\n\t\tthis.ctx.translate(-this.canvas.width / 2, -this.canvas.height / 2);\n\t\tthis.ctx.fillStyle = 'rgba(0, 0, 0, 0)'; // Fully transparent\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\t\n\t\t// Draw the image\n\t\tthis.ctx.drawImage(image, 0, 0);\n\t\treturn this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n    flipImageVertical(image) {\n        this.setSize(image.width, image.height);\n        this.ctx.translate(0, this.canvas.height);\n        this.ctx.scale(1, -1);\n        this.ctx.drawImage(image, 0, 0);\n        return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    flipCanvasVertical() {\n        this.ctx.translate(0, this.canvas.height);\n        this.ctx.scale(1, -1);\n        return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    flipImageHorizontal(image) {\n        this.setSize(image.width, image.height);\n        this.ctx.translate(this.canvas.width, 0);\n        this.ctx.scale(-1, 1);\n        this.ctx.drawImage(image, 0, 0);\n        return this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n    }\n}"
      },
      "TileMap": {
        "script": "\n  \n  \nclass TileMap {\n\n  constructor(app, config, { CanvasUtility }) {\n   \tthis.app = app;\n    this.config = config;\n    this.engineClasses = {\n \t\t\t\"CanvasUtility\": CanvasUtility\n    } \n  }\n\tinit(canvas, tileSize, layerSpriteSheets, isometric) {\n\t\tthis.isometric = isometric;\n\t\tthis.canvas = canvas;\n\t\tthis.tileSize = tileSize;\n\t\tthis.numColumns = 0;\n\t\tthis.layerSpriteSheets = layerSpriteSheets;\n\t\tthis.tileMap = [];\n\t\tthis.canvasUtility = new (this.engineClasses.CanvasUtility)();\n\t\tthis.TileAnalysis = class {\n\t\t\tconstructor() {\n\t\t\t  this.heightIndex = 0;\n\t\t\t  this.neighborLowerCount = 0;\n\t\t\t  this.cornerLowerCount = 0;\n\t\t\t  this.topLess = false;\n\t\t\t  this.leftLess = false;\n\t\t\t  this.rightLess = false;\n\t\t\t  this.botLess = false;\n\t\t\t  this.cornerTopLeftLess = false;\n\t\t\t  this.cornerTopRightLess = false;\n\t\t\t  this.cornerBottomLeftLess = false;\n\t\t\t  this.cornerBottomRightLess = false;\n\t\t\t}\n\t\t};\n\n\t\tthis.TileTransforms = {\n\t\t\tNone: 0,\n\t\t\tClockWise90: 1,\n\t\t\tCounterClockWise90: 2,\n\t\t\tRotate180: 3,\n\t\t\tFlipHorizontal: 4,\n\t\t\tFlipVertical: 5,\n\t\t};\n\t\t\n\t\tthis.TileAtom = {\n\t\t\tFull: 0,\n\t\t\tOneCorner: 1,\n\t\t\tTwoCorner: 2,\n\t\t\tThreeCorner: 3,\n\t\t\tFullVariation: 4,\n\t\t\tOneCornerBot: 5,\n\t\t\tTwoCornerBot: 6,\n\t\t\tThreeCornerBot: 7\n\t\t};\n\t\t\n\t\tthis.TileMolecule = {\n\t\t\tFull: 0,\n\t\t\tCorner: 1,\n\t\t\tEdge: 2,\n\t\t\tTunnel: 3,\n\t\t\tTwoSides: 4,\n\t\t\tPenninsula: 5,\n\t\t\tIsland: 6,\n\t\t};\n\t\t\n\t\tthis.TileCliffMolecules = {\n\t\t\tFull: 0,\n\t\t\tCornerTL: 1,\n\t\t\tCornerTR: 2,\n\t\t\tCornerBL: 3,\n\t\t\tCornerBR: 4,\n\t\t\tEdgeT: 5,\n\t\t\tEdgeL: 6,\n\t\t\tEdgeR: 7,\n\t\t\tEdgeB: 8,\n\t\t\tTunnelH: 9,\n\t\t\tTunnelV: 10,\n\t\t\tTwoSidesTL: 11,\n\t\t\tTwoSidesTR: 12,\n\t\t\tTwoSidesBL: 13,\n\t\t\tTwoSidesBR: 14,    \n\t\t\tPenninsulaT: 15,\n\t\t\tPenninsulaL: 16,\n\t\t\tPenninsulaR: 17,\n\t\t\tPenninsulaB: 18,\n\t\t\tIsland: 19,\n\t\t};\n\t}\n\n    draw(map){\n\t\tthis.tileMap = map;\n\t\tthis.numColumns = this.tileMap.length;\n\t\t// Load all textures\n\n\t\tif(!this.layerTextures || this.layerTextures.length == 0) {\n\t\t\tthis.layerTextures = []; \n\t\n\t\t\tthis.layerSpriteSheets.forEach((layerSprites, index) => {      \n\t\t\t\tconst moleculeData = this.buildBaseMolecules(layerSprites.sprites);\n\t\t\t\tthis.layerTextures[index] = moleculeData;\n\t\t\t});\n\t\t}\n\n\t\tlet analyzedMap = this.analyzeMap(this.tileMap);\n\t\tthis.drawMap(analyzedMap);\n        if(this.isometric){\n            this.drawIsometric();\n        }\n\n    }\n\n    drawIsometric() {\n        let ctx = this.canvas.getContext('2d');\n        // Save the original state\n        ctx.save();\n        \n        // Create an off-screen canvas to hold original drawing\n        const offscreen = document.createElement('canvas');\n        offscreen.width = this.canvas.width;\n        offscreen.height = this.canvas.height;\n        const offCtx = offscreen.getContext('2d');\n        offCtx.drawImage(this.canvas, 0, 0);\n        \n        // Clear the main canvas\n        ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        \n        // Move to center for rotation\n        ctx.translate(this.canvas.width / 2, this.canvas.height / 2);\n        \n        // Apply isometric transformation\n        const scale = .56;    // Adjust overall size\n        const isoAngle = Math.atan(1 / 2); // ≈ 26.565° (classic isometric angle)\n        const cosA = Math.cos(isoAngle);   // ≈ 0.8944\n        const sinA = Math.sin(isoAngle);   // ≈ 0.4472\n        \n        ctx.transform(\n            cosA * scale,    // scaleX\n            sinA * scale,    // skewY\n            -cosA * scale,   // skewX\n            sinA * scale,    // scaleY\n            0,               // translateX\n            0                // translateY\n        );\n        \n        // Draw the transformed image centered\n        ctx.drawImage(offscreen, -this.canvas.width / 2, -this.canvas.height / 2);\n        \n        // Restore original state\n        ctx.restore();\n    }\n\n    drawTexture(texture, x, y) {\n\t\tctx.drawImage(texture, x, y, this.tileSize / 2, this.tileSize / 2); // Assuming each atom is 256x256\n    }\n\n    // Function to generate a molecule texture for various molecule ty\n\tbuildBaseMolecules(sprites) {\n\t\t// Define texture objects\n\t\tconst fullTexture = document.createElement(\"canvas\");\n\n\t\tconst oneCornerTexture = document.createElement(\"canvas\");\n\t\tconst twoCornerTexture = document.createElement(\"canvas\");\n\t\tconst threeCornerTexture = document.createElement(\"canvas\");\n\n\t\tconst oneCornerBotTexture = document.createElement(\"canvas\");\n\t\tconst twoCornerBotTexture = document.createElement(\"canvas\");\n\t\tconst threeCornerBotTexture = document.createElement(\"canvas\");\n\n\t\tfullTexture.setAttribute('willReadFrequently', true); \n\n\t\toneCornerTexture.setAttribute('willReadFrequently', true); \n\t\ttwoCornerTexture.setAttribute('willReadFrequently', true); \n\t\tthreeCornerTexture.setAttribute('willReadFrequently', true); \n\n\t\toneCornerBotTexture.setAttribute('willReadFrequently', true); \n\t\ttwoCornerBotTexture.setAttribute('willReadFrequently', true); \n\t\tthreeCornerBotTexture.setAttribute('willReadFrequently', true); \n\n\t\t// Set the texture sizes\n\t\tconst spriteResolution = this.tileSize / 2;\n\t\tconst finalTileBaseResolution = spriteResolution * 2;\n\n\t\tfullTexture.width = spriteResolution;\n\t\tfullTexture.height = spriteResolution;\n\n\t\toneCornerTexture.width = spriteResolution;\n\t\toneCornerTexture.height = spriteResolution;\n\n\t\ttwoCornerTexture.width = spriteResolution;\n\t\ttwoCornerTexture.height = spriteResolution;\n\n\t\tthreeCornerTexture.width = spriteResolution;\n\t\tthreeCornerTexture.height = spriteResolution;\t\n\n\t\toneCornerBotTexture.width = spriteResolution;\n\t\toneCornerBotTexture.height = spriteResolution;\t\n\n\t\ttwoCornerBotTexture.width = spriteResolution;\n\t\ttwoCornerBotTexture.height = spriteResolution;\t\n\n\t\tthreeCornerBotTexture.width = spriteResolution;\n\t\tthreeCornerBotTexture.height = spriteResolution;\t\n\t\t\n\t\t// Get sprite textures\n\t\tconst fullSprite = sprites[this.TileAtom.Full];\n\n\t\tconst oneCornerSprite = sprites[this.TileAtom.OneCorner];\n\t\tconst twoCornerSprite = sprites[this.TileAtom.TwoCorner];\n\t\tconst threeCornerSprite = sprites[this.TileAtom.ThreeCorner];\n\n\t\tconst oneCornerBotSprite = sprites[this.TileAtom.OneCornerBot];\n\t\tconst twoCornerBotSprite = sprites[this.TileAtom.TwoCornerBot];\n\t\tconst threeCornerBotSprite = sprites[this.TileAtom.ThreeCornerBot];\n\n\t\t// Create CanvasRenderingContext2D objects for each texture\n\t\tconst fullCtx = fullTexture.getContext(\"2d\");\n\n\t\tconst oneCornerCtx = oneCornerTexture.getContext(\"2d\", { willReadFrequently: true });\n\t\tconst twoCornerCtx = twoCornerTexture.getContext(\"2d\", { willReadFrequently: true });\n\t\tconst threeCornerCtx = threeCornerTexture.getContext(\"2d\", { willReadFrequently: true });\n\n\t\tconst oneCornerBotCtx = oneCornerBotTexture.getContext(\"2d\", { willReadFrequently: true });\n\t\tconst twoCornerBotCtx = twoCornerBotTexture.getContext(\"2d\", { willReadFrequently: true });\n\t\tconst threeCornerBotCtx = threeCornerBotTexture.getContext(\"2d\", { willReadFrequently: true });\n\t\t\n\t\t// Copy pixels from sprites to texture canvases\n\t\tfullCtx.drawImage(fullSprite,0,0);\n\n\t\toneCornerCtx.drawImage(oneCornerSprite,0,0);\n\t\ttwoCornerCtx.drawImage(twoCornerSprite,0,0);\n\t\tthreeCornerCtx.drawImage(threeCornerSprite,0,0);\n\n\t\toneCornerBotCtx.drawImage(oneCornerBotSprite,0,0);\n\t\ttwoCornerBotCtx.drawImage(twoCornerBotSprite,0,0);\n\t\tthreeCornerBotCtx.drawImage(threeCornerBotSprite,0,0);\n\n\t\t// Get pixel data from the canvases\n\t\tconst fullImageData = fullCtx.getImageData(0, 0, spriteResolution, spriteResolution);\n\t\tconst oneCornerTopRightImageData = oneCornerCtx.getImageData(0, 0, spriteResolution, spriteResolution);\n\t\tconst oneCornerTopLeftImageData = this.flipTextureHorizontal(oneCornerCtx.getImageData(0, 0, spriteResolution, spriteResolution));\t\n\n\t\tconst oneCornerBotRightImageData = oneCornerBotCtx.getImageData(0, 0, spriteResolution, spriteResolution);\n\t\tconst oneCornerBotLeftImageData = this.flipTextureHorizontal(oneCornerBotCtx.getImageData(0, 0, spriteResolution, spriteResolution));\t\n\t\t\n\t\tconst twoCornerTopImageData = twoCornerCtx.getImageData(0, 0, spriteResolution, spriteResolution);\n\t\tconst twoCornerLeftImageData = this.rotateTexture(twoCornerCtx.getImageData(0, 0, spriteResolution, spriteResolution), -Math.PI / 2);\n\t\tconst twoCornerRightImageData = this.rotateTexture(twoCornerCtx.getImageData(0, 0, spriteResolution, spriteResolution), Math.PI / 2);\n\t\tconst twoCornerBottomImageData = twoCornerBotCtx.getImageData(0, 0, spriteResolution, spriteResolution);\n\t\t\n\t\tconst threeCornerTopRightImageData = threeCornerCtx.getImageData(0, 0, spriteResolution, spriteResolution);\n\t\tconst threeCornerTopLeftImageData = this.flipTextureHorizontal(threeCornerCtx.getImageData(0, 0, spriteResolution, spriteResolution));\t\t\n\t\tconst threeCornerBottomRightImageData = threeCornerBotCtx.getImageData(0, 0, spriteResolution, spriteResolution);\n\t\tconst threeCornerBottomLeftImageData = this.flipTextureHorizontal(threeCornerBotCtx.getImageData(0, 0, spriteResolution, spriteResolution));\n\t\t\t\t\n\t\t\t\n\t\t// Define molecule objects\n\t\tconst moleculeCanvas = document.createElement(\"canvas\");\n\n\t\tmoleculeCanvas.width = finalTileBaseResolution;\n\t\tmoleculeCanvas.height = finalTileBaseResolution;\n\t\t\n\t\tconst moleculeCtx = moleculeCanvas.getContext('2d', { willReadFrequently: true });\n\n\t\tconst cornerCanvas = document.createElement(\"canvas\");\n\n\t\tcornerCanvas.width = finalTileBaseResolution / 2;\n\t\tcornerCanvas.height = finalTileBaseResolution / 2;\n\t\t\n\t\tconst cornerCtx = cornerCanvas.getContext('2d', { willReadFrequently: true });\n\n\t\tvar imageDataList = [\n\t\t\t//FULL\n\t\t\tthis.createMolecule(moleculeCtx, fullImageData, fullImageData, fullImageData, fullImageData),\n\n\t\t\t//CORNERS\n\t\t\toneCornerTopLeftImageData, \n\t\t\toneCornerTopRightImageData,\n\t\t\toneCornerBotLeftImageData,\n\t\t\toneCornerBotRightImageData,\n\t\t\t//EDGES\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerTopImageData, twoCornerTopImageData, fullImageData, fullImageData),\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerLeftImageData, fullImageData, twoCornerLeftImageData, fullImageData),\n\t\t\tthis.createMolecule(moleculeCtx, fullImageData, twoCornerRightImageData, fullImageData, twoCornerRightImageData),\n\t\t\tthis.createMolecule(moleculeCtx, fullImageData, fullImageData, twoCornerBottomImageData, twoCornerBottomImageData),\n\n\t\t\t//TUNNELS\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerTopImageData, twoCornerTopImageData, twoCornerBottomImageData, twoCornerBottomImageData),\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerLeftImageData, twoCornerRightImageData, twoCornerLeftImageData, twoCornerRightImageData),\n\n\t\t\t//TWO SIDES\n\t\t\tthis.createMolecule(moleculeCtx, threeCornerTopLeftImageData, twoCornerTopImageData, twoCornerLeftImageData, fullImageData),\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerTopImageData, threeCornerTopRightImageData, fullImageData, twoCornerRightImageData),\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerLeftImageData, fullImageData, threeCornerBottomLeftImageData, twoCornerBottomImageData),\n\t\t\tthis.createMolecule(moleculeCtx, fullImageData, twoCornerRightImageData, twoCornerBottomImageData, threeCornerBottomRightImageData),\n\n\t\t\t//PENNINSULAS\t\t\n\t\t\tthis.createMolecule(moleculeCtx, threeCornerTopLeftImageData, threeCornerTopRightImageData, twoCornerLeftImageData, twoCornerRightImageData),\n\t\t\tthis.createMolecule(moleculeCtx, threeCornerTopLeftImageData, twoCornerTopImageData, threeCornerBottomLeftImageData, twoCornerBottomImageData),\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerTopImageData, threeCornerTopRightImageData, twoCornerBottomImageData, threeCornerBottomRightImageData),\n\t\t\tthis.createMolecule(moleculeCtx, twoCornerLeftImageData, twoCornerRightImageData, threeCornerBottomLeftImageData, threeCornerBottomRightImageData),\n\n\t\t\t//ISLAND\n\t\t\tthis.createMolecule(moleculeCtx, threeCornerTopLeftImageData, threeCornerTopRightImageData, threeCornerBottomLeftImageData, threeCornerBottomRightImageData),\n\t\t];\n\n\t\treturn imageDataList;\n\t}\n\n\tcreateMolecule(context, TLImageData, TRImageData, BLImageData, BRImageData) {\n\t\tlet size = context.canvas.width;\n\t\tlet spriteResolution = size / 2;\n\t\tcontext.fillStyle = 'black';\n\t\tcontext.fillRect(0, 0, size, size);\n\t\tcontext.putImageData(TLImageData, 0, 0);\n\t\tcontext.putImageData(TRImageData, spriteResolution, 0);\n\t\tcontext.putImageData(BLImageData, 0, spriteResolution);\n\t\tcontext.putImageData(BRImageData, spriteResolution, spriteResolution);\n\t\treturn context.getImageData(0, 0, size, size);\n\t}\n\n\textractSpritesFromSheet(spriteSheet, columns, rows) {\n\t\tlet sprites = [];\n\t\tlet spriteWidth = spriteSheet.width / columns;\n\t\tlet spriteHeight = spriteSheet.height / rows;\n\t\n\t\tfor (let y = 0; y < rows; y++) {\n\t\t\tfor (let x = 0; x < columns; x++) {\n\t\t\t\tlet canvas = document.createElement('canvas');\n\t\t\t\tcanvas.width = spriteWidth;\n\t\t\t\tcanvas.height = spriteHeight;\n\t\t\t\tlet context = canvas.getContext('2d');\n\t\t\t\tcontext.drawImage(spriteSheet, x * spriteWidth, y * spriteHeight, spriteWidth, spriteHeight, 0, 0, spriteWidth, spriteHeight);\n\t\t\t\tsprites.push(canvas);\n\t\t\t}\n\t\t}\n\t\n\t\treturn sprites;\n\t}\n\t\n\tgetSpriteRotations(imageDataList) {\n\t\tlet rotationDict = {};\n\n\t\tlet requiredTransforms = {};\n\n\t\trequiredTransforms[this.TileMolecule.Full] = [];\n\t\trequiredTransforms[this.TileMolecule.Corner] = [this.TileTransforms.FlipHorizontal, this.TileTransforms.FlipVertical, this.TileTransforms.Rotate180];\n\t\trequiredTransforms[this.TileMolecule.Edge] = [this.TileTransforms.ClockWise90, this.TileTransforms.CounterClockWise90, this.TileTransforms.Rotate180];\n\t\trequiredTransforms[this.TileMolecule.Tunnel] = [this.TileTransforms.CounterClockWise90];\n\t\trequiredTransforms[this.TileMolecule.TwoSides] = [this.TileTransforms.FlipHorizontal, this.TileTransforms.FlipVertical, this.TileTransforms.Rotate180];\n\t\trequiredTransforms[this.TileMolecule.Penninsula] = [this.TileTransforms.FlipVertical, this.TileTransforms.ClockWise90, this.TileTransforms.CounterClockWise90];\n\t\trequiredTransforms[this.TileMolecule.Island] = [];\n\n\t\tObject.keys(imageDataList).forEach(moleculeType => {\n\t\t\tlet rotations = {};\n\t\t\tlet colors = imageDataList[moleculeType];\n\t\t\trotations[this.TileTransforms.None] = colors;\n\n\t\t\tif (requiredTransforms[moleculeType].includes(this.TileTransforms.ClockWise90)) {\n\t\t\t\trotations[this.TileTransforms.ClockWise90] = this.rotateTexture(colors, Math.PI / 2);\n\t\t\t}\n\t\t\tif (requiredTransforms[moleculeType].includes(this.TileTransforms.CounterClockWise90)) {\n\t\t\t\trotations[this.TileTransforms.CounterClockWise90] = this.rotateTexture(colors, -Math.PI / 2);\n\t\t\t}\n\t\t\tif (requiredTransforms[moleculeType].includes(this.TileTransforms.Rotate180)) {\n\t\t\t\trotations[this.TileTransforms.Rotate180] = this.rotateTexture(colors, Math.PI);\n\t\t\t}\n\t\t\tif (requiredTransforms[moleculeType].includes(this.TileTransforms.FlipHorizontal)) {\n\t\t\t\trotations[this.TileTransforms.FlipHorizontal] = this.flipTextureHorizontal(colors);\n\t\t\t}\n\t\t\tif (requiredTransforms[moleculeType].includes(this.TileTransforms.FlipVertical)) {\n\t\t\t\trotations[this.TileTransforms.FlipVertical] = this.flipTextureVertical(colors);\n\t\t\t}\n\n\t\t\trotationDict[moleculeType] = rotations;\n\t\t});\n\n\t\treturn rotationDict;\n\t}\n\n\trotateTexture(imageData, angle) {\n\t\treturn this.canvasUtility.rotateTexture(imageData, angle);\n\t}\n\n\tflipTextureVertical(imageData) {\n\t\treturn this.canvasUtility.flipTextureVertical(imageData);\n\t}\n\n\tflipTextureHorizontal(imageData) {\n\t\treturn this.canvasUtility.flipTextureHorizontal(imageData);\n\t}\n\n\tanalyzeTile(x, y) {\n\t\tlet tileAnalysis = new this.TileAnalysis();\n\t\tlet row = y;\n\t\tlet col = x;\n\n\t\tif (row < 0 || row >= this.numColumns || col < 0 || col >= this.numColumns) {\n\t\t\treturn tileAnalysis; // Out of bounds\n\t\t}\n\n\t\ttileAnalysis.heightIndex = this.tileMap[row][col];\n\n\t\t// Helper function to check if a location is within bounds\n\t\tfunction isWithinBounds(r, c, n) {\n\t\t\treturn r >= 0 && r < n && c >= 0 && c < n;\n\t\t}\n\n\t\t// Helper function to check and update tile analysis\n\t\tvar checkAndUpdate = ((r, c, n, direction, propertyLess) => {\n\t\t\tif (isWithinBounds(r, c, n) ) {\n\t\t\t\ttileAnalysis[direction] = this.tileMap[r][c];\n\t\t\t\tif( this.tileMap[r][c] < tileAnalysis.heightIndex) {\n\t\t\t\t\ttileAnalysis[propertyLess] = true;\n\t\t\t\t\tif(['topLess', 'leftLess', 'rightLess', 'botLess'].indexOf(propertyLess) >= 0 ) {\n\t\t\t\t\t\ttileAnalysis.neighborLowerCount++;\n\t\t\t\t\t} else if(['cornerTopLeftLess', 'cornerTopRightLess', 'cornerBottomLeftLess', 'cornerBottomRightLess'].indexOf(propertyLess) >= 0) {\n\t\t\t\t\t\ttileAnalysis.cornerLowerCount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tcheckAndUpdate(row - 1, col, this.numColumns, 'topHeight', 'topLess');\n\t\tcheckAndUpdate(row, col - 1, this.numColumns, 'leftHeight', 'leftLess');\n\t\tcheckAndUpdate(row, col + 1, this.numColumns, 'rightHeight', 'rightLess');\n\t\tcheckAndUpdate(row + 1, col, this.numColumns, 'botHeight', 'botLess');\n\t\tcheckAndUpdate(row - 1, col - 1, this.numColumns, 'topLeftHeight', 'cornerTopLeftLess');\n\t\tcheckAndUpdate(row - 1, col + 1, this.numColumns, 'topRightHeight', 'cornerTopRightLess');\n\t\tcheckAndUpdate(row + 1, col - 1, this.numColumns, 'botLeftHeight', 'cornerBottomLeftLess');\n\t\tcheckAndUpdate(row + 1, col + 1, this.numColumns, 'botRightHeight', 'cornerBottomRightLess');\n\n\t\treturn tileAnalysis;\n\t}\n\n\t// Function to generate a random integer between min and max (inclusive)\n\tgetRandomInt(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\n\t}\n\n\t// Function to generate a random 10x10 map\n\tgenerateRandomMap(rows, columns) {\n\t\tlet map = [];\n\t\tfor (let i = 0; i < rows; i++) {\n\t\t\tlet row = [];\n\t\t\tfor (let j = 0; j < columns; j++) {\n\t\t\t\trow.push(getRandomInt(0, layers.length - 1)); // Random height between 0 and 10\n\t\t\t}\n\t\t\tmap.push(row);\n\t\t}\n\t\treturn map;\n\t}\n\n\tanalyzeMap() {\n\t\tlet analyzedTiles = [];\n\n\t\tfor (let i = 0; i < this.numColumns; i++) {\n\t\t\tfor (let j = 0; j < this.numColumns; j++) {\n\t\t\t\tanalyzedTiles.push(this.analyzeTile(j, i));\n\t\t\t}\n\t\t}\n\n\t\treturn analyzedTiles;\n\t}\n\n\tgetTransformedTexture(transformationDict, tileAnalysis, molecule){\n\t\tswitch(tileAnalysis.neighborLowerCount){\t\t\t\t\n\t\t\tcase 1:\n\t\t\t\tif(tileAnalysis.leftLess){                    \n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.CounterClockWise90];\n\t\t\t\t} else if(tileAnalysis.rightLess){\n                    return transformationDict[molecule][this.TileTransforms.ClockWise90];\n\t\t\t\t} else if(tileAnalysis.botLess){\t\t\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.Rotate180];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif(tileAnalysis.topLess && tileAnalysis.leftLess){\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.FlipHorizontal];\n\t\t\t\t} else if(tileAnalysis.botLess && tileAnalysis.leftLess){\t\t\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.Rotate180];\n\t\t\t\t} else if(tileAnalysis.botLess && tileAnalysis.rightLess){\t\t\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.FlipVertical];\n\t\t\t\t} else if(tileAnalysis.leftLess && tileAnalysis.rightLess){\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.CounterClockWise90];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif(!tileAnalysis.topLess){\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.FlipVertical];\n\t\t\t\t} else if(!tileAnalysis.leftLess){\t\t\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.ClockWise90];\n\t\t\t\t} else if(!tileAnalysis.rightLess){\t\t\n\t\t\t\t\treturn transformationDict[molecule][this.TileTransforms.CounterClockWise90];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\t\t\n        return transformationDict[molecule][this.TileTransforms.None];\n\t}\n\n\tgetMoleculeByTileAnalysis(tileAnalysis){\n\t\tvar molecule = this.TileCliffMolecules.Full;\t\t\t\t\t\t\t\t\n\t\tswitch(tileAnalysis.neighborLowerCount){\n\t\t\tcase 0: \n\t\t\t\tmolecule = this.TileCliffMolecules.Full;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tif(tileAnalysis.topLess) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.EdgeT;\n\t\t\t\t} else if(tileAnalysis.leftLess) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.EdgeL;\n\t\t\t\t} else if(tileAnalysis.rightLess) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.EdgeR;\n\t\t\t\t} else if(tileAnalysis.botLess) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.EdgeB;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif(tileAnalysis.topLess && tileAnalysis.botLess){\n\t\t\t\t\tmolecule = this.TileCliffMolecules.TunnelH;\n\t\t\t\t} else if(tileAnalysis.leftLess && tileAnalysis.rightLess){\n\t\t\t\t\tmolecule = this.TileCliffMolecules.TunnelV;\n\t\t\t\t} else if(tileAnalysis.topLess && tileAnalysis.leftLess){\n\t\t\t\t\tmolecule = this.TileCliffMolecules.TwoSidesTL;\n\t\t\t\t} else if(tileAnalysis.topLess && tileAnalysis.rightLess){\n\t\t\t\t\tmolecule = this.TileCliffMolecules.TwoSidesTR;\n\t\t\t\t} else if(tileAnalysis.botLess && tileAnalysis.leftLess){\n\t\t\t\t\tmolecule = this.TileCliffMolecules.TwoSidesBL;\n\t\t\t\t} else if(tileAnalysis.botLess && tileAnalysis.rightLess){\n\t\t\t\t\tmolecule = this.TileCliffMolecules.TwoSidesBR;\n\t\t\t\t} \n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif( !tileAnalysis.topLess ) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.PenninsulaB;\n\t\t\t\t} else if( !tileAnalysis.leftLess ) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.PenninsulaR;\n\t\t\t\t} else if( !tileAnalysis.rightLess ) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.PenninsulaL;\n\t\t\t\t} else if( !tileAnalysis.botLess ) {\n\t\t\t\t\tmolecule = this.TileCliffMolecules.PenninsulaT;\n\t\t\t\t}\n\t\t\t\tbreak;\t\t\t\t\t\t\t\t\n\t\t\tcase 4:\n\t\t\t\tmolecule = this.TileCliffMolecules.Island;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn molecule;\n\t}\n\n\tcolorImageData(imageData, tileAnalysis) {\n\t\t\n\t\tconst data = new Uint8ClampedArray(imageData.data);\n\t\tvar directions = ['topHeight', 'leftHeight', 'rightHeight', 'botHeight', 'topLeftHeight', 'topRightHeight', 'botLeftHeight', 'botRightHeight'];\n\t\tlet heightCounts = {};\n\t\tdirections.forEach((direction) => {\n\t\t\tlet height = tileAnalysis[direction];\n\t\t\tif (height !== tileAnalysis.heightIndex) {\n\t\t\t\tif (!heightCounts[height]) {\n\t\t\t\t\theightCounts[height] = 0;\n\t\t\t\t}\n\t\t\t\theightCounts[height]++;\n\t\t\t}\n\t\t});\n\t\t\n\t\tlet lowerNeighborHeight = Math.max(0, tileAnalysis.heightIndex - 1);\n\t\tlet maxCount = 0;\n\t\tObject.keys(heightCounts).forEach((height) => {\n\t\t\tif (heightCounts[height] > maxCount && height < tileAnalysis.heightIndex) {\n\t\t\t\tlowerNeighborHeight = parseInt(height);\n\t\t\t\tmaxCount = heightCounts[height];\n\t\t\t}\n\t\t});\n\t\tconst numPixels = this.tileSize * this.tileSize;\n\t\tif(lowerNeighborHeight < 0){\n\t\t\tconst blackData = new Uint8ClampedArray(numPixels * 4); // 4 values per pixel (RGBA)\n\t\t\tblackData.fill(0); // Fill with black (0, 0, 0, 255)\n\t\t\treturn new ImageData(blackData, this.tileSize, this.tileSize);\n\t\t}\n\t\tlet baseColors = this.layerTextures[tileAnalysis.heightIndex][this.TileMolecule.Full].data;\n\t\tlet neighborColors = this.layerTextures[lowerNeighborHeight][this.TileMolecule.Full].data;\n\n\t\t// Iterate over each pixel\n\t\tfor (let i = 0; i < numPixels; i++) {\n\t\t\tconst dataIndex = i * 4;\n\t\t\tlet pColor = { r: data[dataIndex], g: data[dataIndex + 1], b: data[dataIndex + 2], a: data[dataIndex + 3] };\n\t\t\tlet bColor = { r: baseColors[dataIndex], g: baseColors[dataIndex + 1], b: baseColors[dataIndex + 2], a: baseColors[dataIndex + 3] };\n\t\t\tlet tColor = { r: neighborColors[dataIndex], g: neighborColors[dataIndex + 1], b: neighborColors[dataIndex + 2], a: neighborColors[dataIndex + 3] };\n\t\n\t\t\tif (this.layerTextures.length > tileAnalysis.heightIndex) {\n\t\t\t\tif (baseColors.length > i) {\n\t\t\t\t\tbColor = { r: baseColors[dataIndex], g: baseColors[dataIndex + 1], b: baseColors[dataIndex + 2], a: baseColors[dataIndex + 3] };\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lowerNeighborHeight >= 0) {\n\t\t\t\tif (neighborColors.length > i) {\n\t\t\t\t\ttColor = { r: neighborColors[dataIndex], g: neighborColors[dataIndex + 1], b: neighborColors[dataIndex + 2], a: neighborColors[dataIndex + 3] };\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet fColor = pColor;\n\t\t\tif (this.isEqualColor(fColor, { r: 0, g: 0, b: 0, a: 0 })) fColor = pColor;\n\t\t\tif (this.isEqualColor(fColor, { r: 0, g: 0, b: 0, a: 255 })) fColor = bColor;\n\n\t\t\tdata.set([fColor.r, fColor.g, fColor.b, fColor.a], dataIndex);\n\t\t}\n\t\treturn new ImageData(data, this.tileSize, this.tileSize);\n\t}\n\n\tisEqualColor(color1, color2) {\n\t\treturn color1.r === color2.r && color1.g === color2.g && color1.b === color2.b && color1.a === color2.a;\n\t}\n\n\taddCornerGraphics(imageData, tileAnalysis) {\n\t\tlet cornerSize = this.tileSize / 2;\n\t\tlet cornerTexture;\n\t\tlet heightIndex = tileAnalysis.heightIndex;\n\t\n\t\tif (tileAnalysis.cornerLowerCount > 0) {\n\t\t\tif (tileAnalysis.cornerTopLeftLess && (!tileAnalysis.topLess && !tileAnalysis.leftLess)) {\t\t\t\t\n\t\t\t\tcornerTexture = this.layerTextures[heightIndex][this.TileCliffMolecules.CornerTL];\n\t\t\t\timageData = this.colorCornerTextureRoutine(imageData, 0, 0, cornerTexture, tileAnalysis);\t\t\t\n\t\t\t}\n\t\t\t// Assuming tileAnalysis, textureDict, and other variables are already defined\n\t\t\tif (tileAnalysis.cornerTopRightLess && (!tileAnalysis.topLess && !tileAnalysis.rightLess)) {\t\t\t\t\n\t\t\t\tcornerTexture = this.layerTextures[heightIndex][this.TileCliffMolecules.CornerTR];\n\t\t\t\timageData = this.colorCornerTextureRoutine(imageData, cornerSize, 0, cornerTexture, tileAnalysis);\t\t\t\n\t\t\t}\n\n\t\t\tif (tileAnalysis.cornerBottomLeftLess && (!tileAnalysis.botLess && !tileAnalysis.leftLess)) {\t\t\t\t\n\t\t\t\tcornerTexture = this.layerTextures[heightIndex][this.TileCliffMolecules.CornerBL];\n\t\t\t\timageData = this.colorCornerTextureRoutine(imageData, 0, cornerSize, cornerTexture, tileAnalysis);\t\t\t\n\t\t\t}\n\n\t\t\tif (tileAnalysis.cornerBottomRightLess && (!tileAnalysis.botLess && !tileAnalysis.rightLess)) {\t\t\t\n\t\t\t\tcornerTexture = this.layerTextures[heightIndex][this.TileCliffMolecules.CornerBR];\n\t\t\t\timageData = this.colorCornerTextureRoutine(imageData, cornerSize, cornerSize, cornerTexture, tileAnalysis);\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn imageData;\n\t}\n\t\n\tcolorCornerTextureRoutine(outputImageData, x, y, cornerImageData, tileAnalysis) {\n\t\tlet cornerSize = this.tileSize / 2;\t\n\t\tlet baseHeightIndex = tileAnalysis.heightIndex;\n\t\tlet baseColors = this.layerTextures[baseHeightIndex][this.TileMolecule.Full];\n\t\tconst data = new Uint8ClampedArray(outputImageData.data);\n\t\tfor (let j = 0; j < cornerSize; j++) {\n\t\t\tfor (let i = 0; i < cornerSize; i++) {\n\t\t\t\t// Calculate the correct position in the output image data\n\t\t\t\tlet outputIndex = ((y + j) * this.tileSize + (x + i)) * 4;\n\t\n\t\t\t\tlet baseColor = this.getColorFromImageData(baseColors, outputIndex);\n\t\t\n\t\t\t\tlet sourceOriginX = i;\n\t\t\t\tlet sourceOriginY = j * cornerSize;\n\t\t\t\tlet sourcePixel = (sourceOriginY + sourceOriginX) * 4;\n\t\t\t\tlet pColor = this.getColorFromImageData(cornerImageData, sourcePixel);\n\t\t\t\tlet fColor = pColor;\n\t\t\t\tif (this.isEqualColor(fColor, { r: 0, g: 0, b: 0, a: 255 })) {\n\t\t\t\t\tfColor = baseColor;\t\t\t\t\n\t\t\t\t}\n\t\n\t\t\t\tdata[outputIndex] = fColor.r;\n\t\t\t\tdata[outputIndex + 1] = fColor.g;\n\t\t\t\tdata[outputIndex + 2] = fColor.b;\n\t\t\t\tdata[outputIndex + 3] = fColor.a;\n\t\t\t}\n\t\t}\n\n\t\treturn new ImageData(data, this.tileSize, this.tileSize);\n\t}\n\t\n\tgetColorFromImageData(imageData, index) {\n\t\treturn {\n\t\t\tr: imageData.data[index],\n\t\t\tg: imageData.data[index + 1],\n\t\t\tb: imageData.data[index + 2],\n\t\t\ta: imageData.data[index + 3]\n\t\t};\n\t}\t\n\t\n\taddVariationImage(imageData, tileAnalysis) {\n\t\tconst img = this.layerSpriteSheets[tileAnalysis.heightIndex];\n\t\n\t\tif (img && Math.random() < .25) {\n\t\t\tthis.canvasUtility.setSize(imageData.width, imageData.height);\n\t\t\t\n\t\t\t\n\t\t\t// Paint the existing imageData onto the canvas\n\t\t\tthis.canvasUtility.paintTexture(imageData);\n\t\n\t\t\t// Assuming img is a loaded Image object and you want to draw it at (0,0)\n\t\t\t// Draw the img over the imageData\n\t\t\tthis.canvasUtility.ctx.drawImage(img, (imageData.width / 2) - img.width / 2,  (imageData.width / 2) - img.width / 2);\n\t\n\t\t\t// Get the updated imageData from the canvas\n\t\t\treturn this.canvasUtility.ctx.getImageData(0, 0, imageData.width, imageData.height);\n\t\t} else {\n\t\t\t// If img is not available, return the original imageData\n\t\t\treturn imageData;\n\t\t}\n\t}\n\t\n\tdrawMap(analyzedMap) {\n\t\tconst ctx = this.canvas.getContext('2d');\n\t\tconst layerCanvases = {};\n\t\n\t\tfor (let layerIndex = 0; layerIndex < this.layerTextures.length; layerIndex++) {\n\t\t\tconst offscreenCanvas = document.createElement('canvas');\n\t\t\toffscreenCanvas.width = this.canvas.width;\n\t\t\toffscreenCanvas.height = this.canvas.height;\n\t\t\tlayerCanvases[layerIndex] = offscreenCanvas;\n\t\t\tconst offscreenCtx = offscreenCanvas.getContext('2d');\n\t\n\t\t\tanalyzedMap.forEach((tileAnalysis, index) => {\n\t\t\t\tconst x = (index % this.numColumns) * this.tileSize;\n\t\t\t\tconst y = Math.floor(index / this.numColumns) * this.tileSize;\n\t\n\t\t\t\tlet imageData;\n\t\t\t\tlet _tileAnalysis = {...tileAnalysis };\n\t\t\t\tif (_tileAnalysis.heightIndex > layerIndex) {\n\t\t\t\t\t// Use base image data for higher layers\n\t\t\t\t\t_tileAnalysis.heightIndex = layerIndex;\n\t\t\t\t\tif(_tileAnalysis.topLess && _tileAnalysis.topHeight >= _tileAnalysis.heightIndex) {\n\t\t\t\t\t\t_tileAnalysis.topLess = false;\n\t\t\t\t\t\t_tileAnalysis.neighborLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_tileAnalysis.leftLess && _tileAnalysis.leftHeight >= _tileAnalysis.heightIndex) {\n\t\t\t\t\t\t_tileAnalysis.leftLess = false;\n\t\t\t\t\t\t_tileAnalysis.neighborLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_tileAnalysis.rightLess && _tileAnalysis.rightHeight >= _tileAnalysis.heightIndex){\n\t\t\t\t\t\t_tileAnalysis.rightLess = false;\n\t\t\t\t\t\t_tileAnalysis.neighborLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_tileAnalysis.botLess && _tileAnalysis.botHeight >= _tileAnalysis.heightIndex) {\n\t\t\t\t\t\t_tileAnalysis.botLess = false;\n\t\t\t\t\t\t_tileAnalysis.neighborLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_tileAnalysis.cornerTopLeftLess && _tileAnalysis.topLeftHeight >= _tileAnalysis.heightIndex) {\n\t\t\t\t\t\t_tileAnalysis.cornerTopLeftLess = false;\n\t\t\t\t\t\t_tileAnalysis.cornerLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_tileAnalysis.cornerTopRightLess && _tileAnalysis.topRightHeight >= _tileAnalysis.heightIndex) {\n\t\t\t\t\t\t_tileAnalysis.cornerTopRightLess = false;\n\t\t\t\t\t\t_tileAnalysis.cornerLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_tileAnalysis.cornerBottomLeftLess && _tileAnalysis.botLeftHeight >= _tileAnalysis.heightIndex) {\n\t\t\t\t\t\t_tileAnalysis.cornerBottomLeftLess = false;\n\t\t\t\t\t\t_tileAnalysis.cornerLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif(_tileAnalysis.cornerBottomRightLess && _tileAnalysis.botRightHeight >= _tileAnalysis.heightIndex) {\n\t\t\t\t\t\t_tileAnalysis.cornerBottomRightLess = false;\n\t\t\t\t\t\t_tileAnalysis.cornerLowerCount--;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} \n\t\t\t\tif (_tileAnalysis.heightIndex < layerIndex) {\n\t\t\t\t\t// Use base image data for higher layers\n\t\t\t\t\tlet numPixels = this.tileSize * this.tileSize;\n\t\t\t\t\tconst transparentData = new Uint8ClampedArray(numPixels * 4); // 4 values per pixel (RGBA)\n\t\t\t\t\t\n\t\t\t\t\tfor (let i = 0; i < numPixels * 4; i += 4) {\n\t\t\t\t\t\ttransparentData[i] = 0;     // Red (not important for transparency)\n\t\t\t\t\t\ttransparentData[i + 1] = 0; // Green (not important for transparency)\n\t\t\t\t\t\ttransparentData[i + 2] = 0; // Blue (not important for transparency)\n\t\t\t\t\t\ttransparentData[i + 3] = 0; // Alpha (0 for full transparency)\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\timageData = new ImageData(transparentData, this.tileSize, this.tileSize);\n\t\t\t\t\t\n\t\t\t\t } else {\n\t\t\t\t\timageData = new ImageData(new Uint8ClampedArray(4), 1, 1);\n\t\t\t\t\tif( _tileAnalysis.heightIndex >= 0 ) {\n\t\t\t\t\t\tlet molecule = this.getMoleculeByTileAnalysis(_tileAnalysis);\t\t\t\t\t\t\n\t\t\t\t\t\timageData = this.layerTextures[_tileAnalysis.heightIndex][molecule];//this.getTransformedTexture(this.layerTextures[_tileAnalysis.heightIndex], _tileAnalysis, molecule);\t\t\t\n\t\t\t\t\t\timageData = this.colorImageData(imageData, _tileAnalysis);\n\t\t\t\t\t\t//imageData = this.addVariationImage(imageData, _tileAnalysis);\n\t\t\t\t\t\timageData = this.addCornerGraphics(imageData, _tileAnalysis);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet numPixels = this.tileSize * this.tileSize;\n\t\t\t\t\t\tconst blackData = new Uint8ClampedArray(numPixels * 4); // 4 values per pixel (RGBA)\n\t\t\t\t\t\tblackData.fill(0); // Fill with black (0, 0, 0, 255)\n\t\t\t\t\t\timageData = new ImageData(blackData, this.tileSize, this.tileSize);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\toffscreenCtx.putImageData(imageData, x, y);\n\t\t\t});\n\t\t}\n\t\n\t\t// Drawing each layer canvas onto the main canvas\n\t\tObject.keys(layerCanvases).forEach(layerIndex => {\n\t\t\t//if( layerIndex == 0 || layerIndex == 1 || layerIndex == 2) {\n\t\t\tctx.drawImage(layerCanvases[layerIndex], 0, 0);\n\t\t//}\n\t\t});\n\t}\n  }"
      },
      "TerrainImageProcessor": {
        "script": "class TerrainImageProcessor {\n  //Utility function to convert terrain tile spritesheets to and from base64 encoding\n    constructor(app, options = {}) {\n        this.app = app;\n        // Configurable tile dimensions with defaults\n        this.tileWidth = options.tileWidth || 24;\n        this.tileHeight = options.tileHeight || 24;\n        this.tilesX = options.tilesX || 4;\n        this.tilesY = options.tilesY || 1;\n\n        // Bind methods to ensure correct context\n        this.handleImageUpload = this.handleImageUpload.bind(this);\n        this.convertCanvasToBase64Tiles = this.convertCanvasToBase64Tiles.bind(this);\n        this.displayStoredBase64Tiles = this.displayStoredBase64Tiles.bind(this);\n\n        // Element references\n        this.output = null;\n        this.fileInput = null;\n        this.displayImage = null;\n    }\n\n    // Initialize the processor with DOM elements\n    initialize(outputElement, fileInputElement, displayImageElement) {\n        this.output = outputElement;\n        this.fileInput = fileInputElement;\n        this.displayImage = displayImageElement;\n\n        // Add event listeners\n        this.fileInput.addEventListener('change', this.handleImageUpload);\n\n        // Optional: Add custom event listener\n        document.body.addEventListener('editTerrainImage', this.displayStoredBase64Tiles);\n    }\n\n    // Handle image upload and conversion\n    handleImageUpload(event) {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const img = new Image();\n            img.onload = () => {\n                // Create a temporary canvas to process the image\n                const canvas = document.createElement('canvas');\n                canvas.width = this.tileWidth * this.tilesX;\n                canvas.height = this.tileHeight * this.tilesY;\n\n                const ctx = canvas.getContext('2d');\n                \n                // Set transparent background\n                ctx.globalCompositeOperation = 'source-over';\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n                \n                // Draw the uploaded image, scaling to fit the canvas\n                ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n                // Convert to base64 tiles with vertical flips\n                const base64Tiles = this.convertCanvasToBase64Tiles(canvas);\n                \n                // Save base64 tiles to output\n                this.output.value = JSON.stringify(base64Tiles);\n\n                // Display the original uploaded image\n                this.displayImage.src = e.target.result;\n            };\n            img.src = e.target.result;\n        };\n        reader.readAsDataURL(file);\n    }\n\n    // Convert canvas to array of base64 tiles with vertical flips\n    convertCanvasToBase64Tiles(canvas, format = 'png', quality = 1.0) {\n        const base64Tiles = [];\n\n        // First, process the first row of tiles normally\n        for (let x = 0; x < this.tilesX; x++) {\n            const tileCanvas = document.createElement('canvas');\n            tileCanvas.width = this.tileWidth;\n            tileCanvas.height = this.tileHeight;\n            const tileCtx = tileCanvas.getContext('2d');\n\n            // Calculate the source position on the main canvas\n            const srcX = x * this.tileWidth;\n            const srcY = 0;\n\n            // Get the image data for this tile\n            const imageData = canvas.getContext('2d').getImageData(\n                srcX, srcY, this.tileWidth, this.tileHeight\n            );\n\n            // Put the image data on the tile canvas\n            tileCtx.putImageData(imageData, 0, 0);\n\n            // Convert the tile canvas to a data URL\n            const dataUrl = tileCanvas.toDataURL(`image/${format}`, quality);\n\n            // Extract the Base64 string (remove the prefix)\n            const base64String = dataUrl.split(',')[1];\n\n            // Add to the array\n            base64Tiles.push(base64String);\n        }\n\n        // Now create vertically flipped versions of the first row\n        for (let x = 0; x < this.tilesX; x++) {\n            const tileCanvas = document.createElement('canvas');\n            tileCanvas.width = this.tileWidth;\n            tileCanvas.height = this.tileHeight;\n            const tileCtx = tileCanvas.getContext('2d');\n\n            // Calculate the source position on the main canvas\n            const srcX = x * this.tileWidth;\n            const srcY = 0;\n\n            // Get the image data for this tile\n            const imageData = canvas.getContext('2d').getImageData(\n                srcX, srcY, this.tileWidth, this.tileHeight\n            );\n\n            // Create a new ImageData for the flipped tile\n            const flippedImageData = new ImageData(this.tileWidth, this.tileHeight);\n            for (let y = 0; y < this.tileHeight; y++) {\n                for (let x = 0; x < this.tileWidth; x++) {\n                    const srcIndex = (y * this.tileWidth + x) * 4;\n                    const destIndex = ((this.tileHeight - 1 - y) * this.tileWidth + x) * 4;\n                    \n                    flippedImageData.data[destIndex] = imageData.data[srcIndex];     // R\n                    flippedImageData.data[destIndex + 1] = imageData.data[srcIndex + 1]; // G\n                    flippedImageData.data[destIndex + 2] = imageData.data[srcIndex + 2]; // B\n                    flippedImageData.data[destIndex + 3] = imageData.data[srcIndex + 3]; // A\n                }\n            }\n\n            // Put the flipped image data on the tile canvas\n            tileCtx.putImageData(flippedImageData, 0, 0);\n\n            // Convert the tile canvas to a data URL\n            const dataUrl = tileCanvas.toDataURL(`image/${format}`, quality);\n\n            // Extract the Base64 string (remove the prefix)\n            const base64String = dataUrl.split(',')[1];\n\n            // Add to the array\n            base64Tiles.push(base64String);\n        }\n\n        return base64Tiles;\n    }\n\n    // Display stored base64 tiles\n    displayStoredBase64Tiles() {\n        // Check if there are stored base64 tiles\n        if (!this.output.value) return;\n\n        try {\n            // Parse the stored base64 tiles\n            const base64Tiles = JSON.parse(this.output.value);\n\n            // Validate the number of tiles\n            if (!Array.isArray(base64Tiles) || base64Tiles.length !== 8) {\n                console.error('Invalid base64 tiles array');\n                return;\n            }\n\n            const img = new Image();\n            const canvas = document.createElement('canvas');\n            canvas.width = this.tileWidth * this.tilesX;\n            canvas.height = this.tileHeight * this.tilesY;\n            const ctx = canvas.getContext('2d');\n\n            let loadedImages = 0;\n            const tileImages = new Array(8).fill(null);\n\n            base64Tiles.forEach((base64String, index) => {\n                const tileImg = new Image();\n                tileImg.onload = () => {\n                    tileImages[index] = tileImg;\n                    loadedImages++;\n\n                    // Once all images are loaded, draw them\n                    if (loadedImages === base64Tiles.length) {\n                        // Draw first row of tiles\n                        for (let x = 0; x < this.tilesX; x++) {\n                            ctx.drawImage(tileImages[x], x * this.tileWidth, 0);\n                        }\n\n                        // Set the final image\n                        this.displayImage.src = canvas.toDataURL('image/png');\n                    }\n                };\n\n                // Ensure the base64 string has the correct data URL prefix\n                if (!base64String.startsWith('data:image/')) {\n                    base64String = 'data:image/png;base64,' + base64String;\n                }\n                tileImg.src = base64String;\n            });\n        } catch (error) {\n            console.error('Error parsing stored base64 tiles:', error);\n        }\n    }\n\n    // Method to clean up event listeners if needed\n    destroy() {\n        if (this.fileInput) {\n            this.fileInput.removeEventListener('change', this.handleImageUpload);\n        }\n        document.body.removeEventListener('editTerrainImage', this.displayStoredBase64Tiles);\n    }\n}"
      },
      "Component": {
        "script": "class Component {\n    constructor(game, parent, params) { \n        this.game = game;\n        this.parent = parent;\n        this.init(params);\n    }\n    init(params) {}\n    getComponent(type) {\n        return this.parent.getComponent(type);\n    }\n    update() {}\n    postUpdate() {}\n    destroy() {}\n}\n"
      },
      "Entity": {
        "script": "class Entity {\n    constructor(game, x, y, type) {\n        this.game = game;\n        this.position = { x: x, y: y };\n        this.components = [];\n        this.renderers = [];\n        this.destroyed = false;        \n        this.id = ++game.entityId;\n        this.type = type;\n        this.lastPosition = {...this.position};\n        this.lastGridPosition = {...this.gridPosition};\n        this.lastDrawPosition = {...this.drawPosition};\n        this.setGridPosition();\n    }\n\n    getComponent(name) {\n        return this.components[name.toLowerCase()] || this.components[`${name.toLowerCase()}`];\n    }\n    addRenderer(ComponentClass, params) {\n        let renderer = this.addComponent(ComponentClass, params);\n        this.renderers.push(renderer);\n        return renderer;\n    }\n    addComponent(ComponentClass, params) {\n        const component = new ComponentClass(this.game, this, params);\n        this.components[ComponentClass.name.toLowerCase()] = component;\n        return component;\n    }\n    removeComponent(component) {\n        let index = this.components.indexOf(component);\n        if( index >= 0 ) {\n            this.components.splice(index, 1);\n        }\n    }\n    setGridPosition() {\n        let gridPosition = this.game.translator.pixelToGrid( this.position.x, this.position.y ); \n        this.gridPosition = this.game.translator.snapToGrid(gridPosition.x, gridPosition.y);   \n    }\n    updateLastPositions() {\n        this.lastPosition = {...this.position};\n        this.lastGridPosition = {...this.gridPosition};\n        this.lastDrawPosition = {...this.drawPosition};         \n    }\n    update() {    \n        this.setGridPosition();\n        for(let c in this.components) {\n            this.components[c].update();   \n            this.setGridPosition();\n            if(this.destroyed) break;\n        }                \n        return !this.destroyed;\n    }\n    postUpdate() {\n        for(let c in this.components) {\n            this.components[c].postUpdate();   \n            if(this.destroyed) break;\n        }     \n        this.updateLastPositions(); \n        return !this.destroyed;\n    }\n    draw() {\n        const isoPos = this.game.translator.pixelToIso(this.position.x, this.position.y);    \n        this.drawPosition = { x: isoPos.x, y: isoPos.y };\n        if( this.renderers.length ) {\n            this.renderers.forEach( (r) => r.draw() );\n        }   \n    }\n    destroy() {\n        this.destroyed = true;\n        for(let c in this.components) {\n            this.components[c].destroy();   \n        }   \n    }\n}"
      },
      "GameState": {
        "script": "class GameState {\n    constructor(gameConfig = {}) {\n        let state = gameConfig.configs.state;\n     \n        // Clear all existing properties\n        for (let prop in this) {\n            if (Object.prototype.hasOwnProperty.call(this, prop)) {\n                delete this[prop];\n            }\n        }\n\n        // Set only the properties from params\n        for (let key in state) {\n            if (Object.prototype.hasOwnProperty.call(state, key)) {\n                this[key] = state[key];\n            }\n        }\n        this.entities = [];\n        // If stats is present, create defaultStats as a copy\n        if (this.modifierSet && gameConfig.modifierSets) {\n            this.stats = gameConfig.modifierSets[this.modifierSet];\n            this.defaultStats = { ...this.stats };\n        }     \n    }\n\n    addEntity(entity) {\n        this.entities.push(entity);\n    }\n    removeEntity(entity) {\n    \n        let index = this.entities.indexOf(entity);\n        if( index >= 0 ) {\n            this.entities.splice(index, 1);\n        }\n    }\n}"
      },
      "codemirror.min.js": {
        "title": "CodeMirror.min.js",
        "href-disabled": "https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/codemirror.min.js",
        "className": "CodeMirror"
      },
      "CodeMirror.js.min.js": {
        "title": "CodeMirror.js.min.js",
        "href-disabled": "https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/mode/javascript/javascript.min.js",
        "className": "CodeMirror.js"
      },
      "ExportScripts": {
        "title": "Export Scripts",
        "script": "class ExportScripts {\n  constructor(app) {\n     this.app = app;\n  }\n  export(project) {\n      // Initialize JSZip\n      const zip = new (this.app.libraryClasses.JSZip)();\n\n      // Iterate over each script type (e.g., \"renderers\", \"components\")\n      Object.keys(project).forEach(scriptType => {\n          const scripts = project[scriptType];\n\n          // Create a folder for the script type\n          const folder = zip.folder(`scripts/${scriptType}`);\n\n          // Iterate over each script key (e.g., \"renderer\", \"component\")\n          Object.keys(scripts).forEach(scriptKey => {\n              const scriptData = scripts[scriptKey];\n              const scriptContent = scriptData.script || ''; // Fallback to empty string if no script\n\n              // Add the script file to the folder\n              folder.file(`${scriptKey}.js`, scriptContent);\n          });\n      });\n\n      // Generate the zip file and trigger download\n      zip.generateAsync({ type: 'blob' }).then(blob => {\n          // Create a temporary URL for the blob\n          const url = window.URL.createObjectURL(blob);\n\n          // Create a temporary link element to trigger download\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = 'scripts.zip'; // Name of the downloaded file\n          document.body.appendChild(link);\n          link.click();\n\n          // Clean up\n          document.body.removeChild(link);\n          window.URL.revokeObjectURL(url);\n      }).catch(error => {\n          console.error('Error generating zip file:', error);\n      });\n  }\n}",
        "className": "ExportScripts"
      },
      "ZipExporter": {
        "script": "class ZipExporter {\n    constructor(gameEditor) {\n        this.gameEditor = gameEditor;\n        this.elements = {};\n        this.init();\n    }\n\n    init(aiConfig) {\n        this.setupHooks();\n        const modal = document.getElementById('modal-ZipExporterPanel');\n        this.config = aiConfig;\n        this.elements = { modal: modal };\n        this.setupEventListeners();\n    }\n\n    setCurrentObjectValues(data) {\n        const { selectedType, selectedObject } = this.gameEditor.getCurrentObjectContext();\n        this.gameEditor.getCollections()[selectedType][selectedObject] = data;\n    }\n\n    setupEventListeners() {\n        // Placeholder for future listeners\n    }\n\n    setupHooks() {\n        document.body.addEventListener('renderEditor', () => {\n      \n            // Export Current Object Button\n            if (this.elements.exportCurrentObjectBtn) this.elements.exportCurrentObjectBtn.remove();\n            this.elements.exportCurrentObjectBtn = document.createElement('button');\n            this.elements.exportCurrentObjectBtn.innerHTML = \"Export Object\";\n            this.elements.exportCurrentObjectBtn.id = 'save-object-btn';\n            this.gameEditor.elements.editor.querySelector(\".actions>div\")?.appendChild(this.elements.exportCurrentObjectBtn);\n            this.elements.exportCurrentObjectBtn.addEventListener('click', () => {\n                this.exportCurrentObject();\n            });\n\n            // Import Current Object Button\n            if (this.elements.importCurrentObjectBtn) this.elements.importCurrentObjectBtn.remove();\n            this.elements.importCurrentObjectBtn = document.createElement('button');\n            this.elements.importCurrentObjectBtn.innerHTML = \"Import Object\";\n            this.elements.importCurrentObjectBtn.id = 'import-object-btn';\n            this.gameEditor.elements.editor.querySelector(\".actions>div\")?.appendChild(this.elements.importCurrentObjectBtn);\n            this.elements.importCurrentObjectBtn.addEventListener('click', () => {\n                this.triggerImportJson();\n            });\n        });\n\n        document.body.addEventListener('selectObject', () => {\n            const { selectedType } = this.gameEditor.getCurrentObjectContext();\n            const category = this.gameEditor.model.getCategoryByType(selectedType);\n\n            requestAnimationFrame(() => {\n                // Export Project Button\n                if (this.elements.exportProjectBtn) this.elements.exportProjectBtn.remove();\n                this.elements.exportProjectBtn = document.createElement('button');\n                this.elements.exportProjectBtn.innerHTML = \"Export Project\";\n                this.elements.exportProjectBtn.id = 'export-project-btn';\n                this.gameEditor.elements.sidebar.querySelector(\".sidebar-actions>.primary\")?.after(this.elements.exportProjectBtn);\n                this.elements.exportProjectBtn.addEventListener('click', () => {\n                    this.exportFullProject();\n                });\n                // Import Project Button\n                if (this.elements.importProjectBtn) this.elements.importProjectBtn.remove();\n                this.elements.importProjectBtn = document.createElement('button');\n                this.elements.importProjectBtn.innerHTML = \"Import Project\";\n                this.elements.importProjectBtn.id = 'import-project-btn';\n                this.gameEditor.elements.sidebar.querySelector(\".sidebar-actions>.primary\")?.after(this.elements.importProjectBtn);\n                this.elements.importProjectBtn.addEventListener('click', () => {\n                    this.triggerImportProject();\n                });\n                // Export All in Category Button\n                if (this.elements.exportAllBtn) this.elements.exportAllBtn.remove();\n                this.elements.exportAllBtn = document.createElement('button');\n                this.elements.exportAllBtn.innerHTML = `Export All ${category}`;\n                this.elements.exportAllBtn.id = 'export-all-btn';\n                this.gameEditor.elements.sidebar.querySelector(\".sidebar-actions>.primary\")?.after(this.elements.exportAllBtn);\n                this.elements.exportAllBtn.addEventListener('click', () => {\n                    this.exportCategory(category);\n                });\n            });\n        });\n    }\n\n    // Export a JSON file\n    exportJSON(fileName, jsonObj) {\n        const blob = new Blob([JSON.stringify(jsonObj, null, 2)], { type: 'application/json' });\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `${fileName}.json`;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        window.URL.revokeObjectURL(url);\n    }\n\n    // Export current object as JSON\n    exportCurrentObject() {\n        const { selectedObject } = this.gameEditor.getCurrentObjectContext();   \n        this.exportJSON(selectedObject, this.gameEditor.getCurrentObject());\n    }\n\n    // Export a category as a zip\n    exportCategory(category) {\n        const scripts = this.gameEditor.model.getCollectionsByCategory(category);\n        this.exportZip(category, scripts);\n    }\n\n    // Export the entire project as a zip\n    exportFullProject() {\n        const allCollections = {};\n        const defs = this.gameEditor.model.getCollectionDefs();\n\n        defs.forEach(def => {\n            const category = def.category;\n            const collectionKey = def.id;\n            const collectionData = this.gameEditor.model.getCollections()[collectionKey];\n            if (collectionData) {\n                if (!allCollections[category]) {\n                    allCollections[category] = {};\n                }\n                allCollections[category][collectionKey] = collectionData;\n            }\n        });\n\n        this.exportZip(this.gameEditor.model.getCurrentProject(), allCollections);\n    }\n\n    // Generic zip export method\n    exportZip(fileName, projectData) {\n        const zip = new JSZip();\n\n        Object.keys(projectData).forEach(category => {\n            const collections = projectData[category];\n            Object.keys(collections).forEach(collection => {\n                const objects = collections[collection];\n                const folder = zip.folder(`${category}/${collection}`);\n\n                Object.keys(objects).forEach(objKey => {\n                    const objData = objects[objKey];\n                    const scriptContent = objData.script || '';\n                    if (scriptContent) {\n                        folder.file(`${objKey}.js`, scriptContent);\n                    } else {\n                        folder.file(`${objKey}.json`, JSON.stringify(objData, null, 2));\n                    }\n                });\n            });\n        });\n\n        zip.generateAsync({ type: 'blob' }).then(blob => {\n            const url = window.URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = `${fileName}.zip`;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            window.URL.revokeObjectURL(url);\n        }).catch(error => {\n            console.error('Error generating zip file:', error);\n        });\n    }\n\n    // Trigger JSON import\n    triggerImportJson() {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = '.json';\n        input.style.display = 'none';\n        input.addEventListener('change', (e) => this.importJson(e));\n        document.body.appendChild(input);\n        input.click();\n        document.body.removeChild(input);\n    }\n    triggerImportProject() {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = '.zip';\n        input.style.display = 'none';\n        input.addEventListener('change', (e) => this.importProject(e));\n        document.body.appendChild(input);\n        input.click();\n        document.body.removeChild(input);\n    }\n    // Import a single JSON file\n    async importJson(event) {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        try {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                const jsonContent = JSON.parse(e.target.result);\n                this.setCurrentObjectValues(jsonContent);\n                const myCustomEvent = new CustomEvent('updateCurrentObject', { cancelable: true });\n                document.body.dispatchEvent(myCustomEvent);\n            };\n            reader.onerror = (error) => {\n                console.error('Error reading JSON file:', error);\n            };\n            reader.readAsText(file);\n        } catch (error) {\n            console.error('Error importing JSON:', error);\n        }\n    }\n  \n  \t// Import a project zip file\n    async importProject(event) {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        try {\n            const jsZip = new JSZip();\n            const zipContent = await jsZip.loadAsync(file);\n\n            const projectData = {};\n\n            // Process all files in the zip\n            const fileProcessingPromises = [];\n\n            zipContent.forEach((relativePath, zipEntry) => {\n                if (!zipEntry.dir) {\n                    const promise = zipEntry.async('string').then(content => {\n                        // Parse path: category/collection/objectKey.ext\n                        const pathParts = relativePath.split('/');\n                        if (pathParts.length >= 3) {\n                            const category = pathParts[0];\n                            const collection = pathParts[1];\n                            const fileName = pathParts[2];\n                            const objectKey = fileName.substring(0, fileName.lastIndexOf('.'));\n                            const fileExt = fileName.substring(fileName.lastIndexOf('.') + 1);\n\n                            // Initialize the data structure if needed\n                            if (!projectData[category]) projectData[category] = {};\n                            if (!projectData[category][collection]) projectData[category][collection] = {};\n\n                            // Parse content based on file extension\n                            if (fileExt === 'js') {\n                                projectData[category][collection][objectKey] = { script: content };\n                            } else if (fileExt === 'json') {\n                                projectData[category][collection][objectKey] = JSON.parse(content);\n                            }\n                        }\n                    });\n                    fileProcessingPromises.push(promise);\n                }\n            });\n\n            // Wait for all files to be processed\n            await Promise.all(fileProcessingPromises);\n\n            // Update game editor state with imported data\n            const defs = this.gameEditor.model.getCollectionDefs();\n            defs.forEach(def => {\n                const category = def.category;\n                const collectionKey = def.id;\n\n                if (projectData[category] && projectData[category][collectionKey]) {\n                    if (!this.gameEditor.model.state.project.objectTypes[collectionKey]) {\n                        this.gameEditor.model.state.project.objectTypes[collectionKey] = {};\n                    }\n\n                    // Merge imported objects with existing\n                    Object.keys(projectData[category][collectionKey]).forEach(objKey => {\n                        this.gameEditor.model.state.project.objectTypes[collectionKey][objKey] = \n                            projectData[category][collectionKey][objKey];\n                    });\n                }\n            });\n\n            // Trigger UI update\n            const updateEvent = new CustomEvent('projectUpdated', { cancelable: true });\n            document.body.dispatchEvent(updateEvent);\n\n            alert('Project imported successfully');\n        } catch (error) {\n            console.error('Error importing project:', error);\n            alert('Error importing project. See console for details.');\n        }\n    }\n}"
      }
    },
    "interfaces": {
      "terrainEditor": {
        "title": "Terrain Editor",
        "html": "<div id=\"level-editor-container\" class=\"main-content-container\">\n   <div class=\"content-sidebar\">\n      <div class=\"toolbar\">                                                \n        <button id=\"terrainsBtn\" class=\"btn active\">Terrains</button>                    \n\t\t\t</div>\n      <div class=\"tools\">\n         <div>\n            <h3 style=\"margin-bottom: 20px; color: #e0e0e0; font-size: 18px;\">Settings</h3>\n            <div class=\"form-row\">                                \n              <label for=\"terrainMapSize\">Map Size:</label>                                \n\t\t\t\t\t\t\t<input type=\"number\" id=\"terrainMapSize\" value=\"48\" step=\"1\" min=\"1\">                            \n            </div>\n            <div class=\"form-row\">                                \n              <label for=\"terrainBGColor\">Map Background Color:</label>                                \n\t\t\t\t\t\t\t<input type=\"color\" id=\"terrainBGColor\" />                            \n  \t\t\t\t\t\t</div>\n         </div>\n         <div id=\"terrainsPanel\">\n            <h4>Terrain Types</h4>\n         </div>\n      </div>\n   </div>\n   <div class=\"grid-container grid-background\">\n      <div class=\"translation-controls\">                        \n        <button id=\"translate-up\"><span>↑</span></button>                        \n        <button id=\"translate-right\"><span>→</span></button>                        \n        <button id=\"translate-left\"><span>←</span></button>                        \n        <button id=\"translate-down\"><span>↓</span></button>                    \n      </div>\n      <canvas id=\"grid\"></canvas>\n   </div>\n</div>\n",
        "css": "#level-editor-container {\n\tgap: 20px;\n\theight: 50vh;\n\toverflow: hidden;\n\tbackground-color: #080815;\n\tcolor: #00f0ff;\n\tposition: relative;\n\tpadding: .5em .5em 0 .5em;\n}\n\n#level-editor-container.show {\n\tdisplay: flex;\n}\n\n.grid-container {\n\tposition: relative;\n}\n\n/* Add these to your existing levelEditor.css file */\n/* Terrain type management */\n#level-editor-container .terrain-types-container {\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 8px;\n\tmargin-top: 10px;\n}\n\n#level-editor-container .terrain-item {\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 10px;\n\tpadding: 5px;\n\tborder-radius: 4px;\n}\n\n#level-editor-container .color-option {\n\twidth: 30px;\n\theight: 30px;\n\tborder-radius: 4px;\n\tcursor: pointer;\n\tborder: 2px solid transparent;\n\tflex-shrink: 0;\n}\n\n#level-editor-container .color-option:hover {\n\topacity: 0.8;\n}\n\n#level-editor-container .terrain-label {\n\tflex-grow: 1;\n}\n\n#level-editor-container .terrain-buttons {\n\tdisplay: flex;\n\tgap: 5px;\n}\n\n.translation-controls {\n\tposition: absolute;\n\tleft: 10px;\n\ttop: 10px;\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 32px);\n\tgrid-template-rows: repeat(2, 32px);\n\tgap: 5px;\n}\n\n.translation-controls button {\n\twidth: 32px;\n\theight: 32px;\n\tfont-size: 18px;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcursor: pointer;\n\tborder-radius: 4px;\n}\n\n.translation-controls button span {\n\tdisplay: inline-block;\n\ttransform: rotate(45deg);\n\t/* Rotate arrows 45 degrees */\n}\n\n#translate-up {\n\tgrid-column: 2;\n\tgrid-row: 1;\n}\n\n#translate-left {\n\tgrid-column: 1;\n\tgrid-row: 1;\n}\n\n#translate-right {\n\tgrid-column: 2;\n\tgrid-row: 2;\n}\n\n#translate-down {\n\tgrid-column: 1;\n\tgrid-row: 2;\n}\n\n#terrain-image-editor {\n\tborder: 1px solid black;\n\timage-rendering: pixelated;\n\twidth: 960px;\n\theight: 480px;\n}\n\n#terrainForm .modal-content {\n\tmax-width: 960px;\n}\n\n.terrain-item {\n\t/* Your existing styles */\n\tcursor: move;\n\t/* Shows it's draggable */\n\tuser-select: none;\n\t/* Prevents text selection while dragging */\n}\n\n.terrain-item:hover {\n\t/* Optional: Add a hover effect to indicate draggability */\n\topacity: 0.8;\n}\n\n.canvas-container {\n\tposition: relative;\n}\n\n#terrain-image-editor {\n\tposition: relative;\n\tz-index: 1;\n}\n\n#terrain-grid-canvas {\n\timage-rendering: pixelated;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tpointer-events: none;\n\t/* Allow clicks to pass through */\n\tz-index: 10;\n\t/* Ensure it's above the pixel canvas */\n\twidth: 960px;\n\theight: 480px;\n}\n\n#terrain-image-display {\n\twidth: 960px;\n\timage-rendering: pixelated;\n}",
        "modals": [
          "addTerrainType",
          "generateIsoSprites"
        ]
      },
      "graphicsEditor": {
        "title": "Graphics Editor",
        "html": "<div id=\"graphics-editor-container\" class=\"main-content-container\">\n   <div id=\"graphics-sidebar\" class=\"content-sidebar\">\n      <div id=\"toolbar\" class=\"toolbar\">                        \n        <button id=\"preview-animation\" class=\"btn btn-primary\" title=\"Preview Animation\">Play</button>                        \n        <button id=\"add-animation\" class=\"btn btn-primary\" title=\"Add Animation\">+A</button>                        \n        <button id=\"delete-animation\" class=\"btn btn-danger\" title=\"Delete Animation\">-A</button>                        \n        <button id=\"duplicate-frame\" class=\"btn btn-primary\" title=\"Add Frame\">+F</button>                        \n        <button id=\"delete-frame\" class=\"btn btn-danger\" title=\"Delete Frame\">-F</button>                        \n        <button id=\"add-shape\" class=\"btn btn-primary\" title=\"Add Shape\">+S</button>                        \n        <button id=\"duplicate-shape\" class=\"btn btn-primary\" title=\"Duplicate Shape\">SS</button>                        \n        <button id=\"delete-shape\" class=\"btn btn-danger\" title=\"Delete Shape\">-S</button>                        \n        <button id=\"scale-all\" class=\"btn btn-secondary\" title=\"Scale All\">Sc</button>                        \n        <button id=\"move-all\" class=\"btn btn-secondary\" title=\"Move All\">Mv</button>                        \n        <button id=\"rotate-all\" class=\"btn btn-secondary\" title=\"Rotate All\">Rt</button>                        \n        <button id=\"generate-isometric\" class=\"btn btn-special\" title=\"Generate Isometric Sprites\">Iso</button>                    \n      </div>\n      <div id=\"shape-list\"></div>\n   </div>\n   <div id=\"canvas-container\" class=\"grid-background\">\n      <canvas id=\"canvas\"></canvas>\n      <div class=\"scene-info\">\n         <div>Shapes: <span id=\"shape-count\">0</span></div>\n         <div>Selected: <span id=\"selected-shape\">None</span></div>\n         <div><small>Controls: Left-click to select, Drag to rotate, Right-drag to pan, Scroll to zoom</small></div>\n      </div>\n   </div>\n   <div id=\"graphics-rightbar\">\n      <div id=\"inspector\"></div>\n      <div id=\"json-editor\" style=\"display: none\">                        \n        <textarea id=\"json-content\" placeholder=\"Edit JSON here...\"></textarea>                    \n\t\t\t</div>\n   </div>\n</div>\n",
        "css": "",
        "modals": [
          "rotateShapes",
          "moveAllShapes",
          "generateIsometric"
        ]
      },
      "scriptEditor": {
        "title": "Script Editor",
        "html": "            <div id=\"script-editor-container\" class=\"main-content-container\">\n                <div id=\"script-editor-sidebar\" class=\"content-sidebar\">                    \n                    <h3>Script Editor</h3>\n                    <button id=\"save-script-btn\">Save Script</button>\n                </div>\n                <div class=\"grid-background\">\n                    <div>\n                        <textarea id=\"script-editor\" class=\"script-editor\" placeholder=\"Enter your script here...\"></textarea>                    \n                        <div class=\"handle\"></div>\n                    </div>\n                </div>\n            </div>\n",
        "css": ""
      },
      "audioEditor": {
        "title": "Audio Editor",
        "html": "            <div id=\"audio-editor-container\" class=\"main-content-container\">\n                <h2>Sound Synthesis Tool (Module)</h2>\n                <label>\n                    Waveform:\n                    <select id=\"waveform\">\n                        <option value=\"sine\">Sine</option>\n                        <option value=\"square\">Square</option>\n                        <option value=\"sawtooth\">Sawtooth</option>\n                        <option value=\"triangle\">Triangle</option>\n                    </select>\n                </label>\n                <label>\n                    Frequency (Hz, 20-2000):\n                    <input type=\"number\" id=\"frequency\" value=\"440\" min=\"20\" max=\"2000\">\n                </label>\n                <label>\n                    Duration (seconds, 0.1-5):\n                    <input type=\"number\" id=\"duration\" value=\"1\" min=\"0.1\" max=\"5\" step=\"0.1\">\n                </label>\n                <button id=\"playBtn\">Play Sound</button>\n                <button id=\"exportBtn\">Export to JSON (Base64)</button>\n                <label>Base64 JSON Output:</label>\n                <textarea id=\"jsonOutput\" readonly></textarea>\n            </div>"
      },
      "aiPromptPanel": {
        "title": "AI Prompt Panel",
        "modals": [
          "aiPromptPanel"
        ]
      }
    },
    "modals": {
      "moveAllShapes": {
        "title": "Move All Shapes",
        "html": "\n                <h3>Move All Shapes</h3>\n                <div class=\"form-row\">\n                    <label for=\"move-x\">X Offset:</label>\n                    <input type=\"number\" id=\"move-x\" value=\"0\" step=\"0.5\">\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"move-y\">Y Offset:</label>\n                    <input type=\"number\" id=\"move-y\" value=\"0\" step=\"0.5\">\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"move-z\">Z Offset:</label>\n                    <input type=\"number\" id=\"move-z\" value=\"0\" step=\"0.5\">\n                </div>\n                <div style=\"display: flex; gap: 10px; margin-top: 20px;\">\n                    <button id=\"move-cancel\">Cancel</button>\n                    <button id=\"move-apply\">Apply</button>\n                </div>\n"
      },
      "rotateShapes": {
        "title": "Rotate Shapes",
        "html": "\n                <h3>Rotate All Shapes</h3>\n                <div class=\"form-row\">\n                    <label for=\"rotate-angle\">Angle (degrees):</label>\n                    <input type=\"number\" id=\"rotate-angle\" value=\"0\" step=\"1\">\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"rotate-axis\">Axis:</label>\n                    <select id=\"rotate-axis\">\n                        <option value=\"x\">X</option>\n                        <option value=\"y\" selected>Y</option>\n                        <option value=\"z\">Z</option>\n                    </select>\n                </div>\n                <div style=\"display: flex; gap: 10px; margin-top: 20px;\">\n                    <button id=\"rotate-cancel\">Cancel</button>\n                    <button id=\"rotate-apply\">Apply</button>\n                </div>\n"
      },
      "addTerrainType": {
        "title": "Add Terrain Type",
        "html": "\n                <h4 id=\"formTitle\">Add Terrain Type</h4>\n                <input type=\"hidden\" id=\"editingType\" value=\"\">\n                <div class=\"form-group\">\n                    <label for=\"terrainType\">Type:</label>\n                    <input type=\"text\" id=\"terrainType\" placeholder=\"grass, water, etc.\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"terrainColor\">Color:</label>\n                    <input type=\"text\" id=\"terrainColorText\">\n                    <input type=\"color\" id=\"terrainColor\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"terrainImage\">Sprite Sheet:</label>\n                    <input type=\"textarea\" id=\"terrainImage\">\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"file\" id=\"terrain-image-upload\" accept=\"image/*\">\n                    <div class=\"canvas-container\" style=\"position: relative; display: inline-block;\">\n                        <img id=\"terrain-image-display\" alt=\"Terrain Image\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"terrainBuildable\">Buildable:</label>\n                    <input type=\"checkbox\" id=\"terrainBuildable\">\n                </div>\n                <div class=\"form-actions\">\n                    <button id=\"saveTerrainBtn\" class=\"primary\">Save</button>\n                    <button id=\"cancelTerrainBtn\">Cancel</button>\n                </div>\n"
      },
      "generateIsoSprites": {
        "title": "Generate Spritesheet",
        "html": "\n                <h3 style=\"margin-bottom: 20px; color: #e0e0e0; font-size: 18px;\">Generate Isometric Sprites</h3>\n                <div class=\"form-row\">\n                    <label for=\"iso-frustum\">Frustum Size:</label>\n                    <input type=\"number\" id=\"iso-frustum\" value=\"48\" step=\"1\" min=\"1\">\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"iso-distance\">Distance:</label>\n                    <input type=\"number\" id=\"iso-distance\" value=\"100\" step=\"1\" min=\"1\">\n                </div>\n                <div class=\"form-row\">\n                    <label for=\"iso-size\">Sprite Size:</label>\n                    <input type=\"number\" id=\"iso-size\" value=\"64\" step=\"1\" min=\"1\">\n                </div>\n                <div style=\"display: flex; gap: 10px; margin-top: 20px;\">\n                    <button id=\"iso-cancel\">Cancel</button>\n                    <button id=\"iso-generate\">Generate</button>\n                </div>\n"
      },
      "aiPromptPanel": {
        "title": "AI Prompt Panel",
        "html": "<h2>AI Object Generator</h2>\n                <div class=\"form-group\">\n                    <label for=\"ai-prompt-textarea\">Prompt:</label>\n                    <textarea id=\"ai-prompt-textarea\" rows=\"6\" placeholder=\"Enter your AI generation prompt\"></textarea>\n                    <textarea id=\"ai-pre-prompt-textarea\" rows=\"6\" placeholder=\"context\"></textarea>\n                </div>\n                <div class=\"actions\">\n                    <button id=\"send-ai-prompt-btn\" class=\"primary\">Send to AI</button>\n                    <button id=\"close-ai-prompt-modal\">Cancel</button>\n                </div>\n                <div class=\"preview-section\">\n                    <h3>AI Response Preview</h3>\n                    <textarea id=\"ai-response-preview\" rows=\"6\"></textarea>\n                    <div class=\"preview-actions\">\n                        <button id=\"apply-ai-response-btn\" class=\"primary\" style=\"display:none;\">Apply Response</button>\n                    </div>\n                </div>"
      },
      "generateIsometric": {
        "title": "Generate Isometric Sprites",
        "html": " <h3 style=\"margin-bottom: 20px; color: #e0e0e0; font-size: 18px;\">Generate Isometric Sprites</h3>                 <div class=\"form-row\">                     <label for=\"iso-frustum\">Frustum Size:</label>                     <input type=\"number\" id=\"iso-frustum\" value=\"48\" step=\"1\" min=\"1\">                 </div>                 <div class=\"form-row\">                     <label for=\"iso-distance\">Distance:</label>                     <input type=\"number\" id=\"iso-distance\" value=\"100\" step=\"1\" min=\"1\">                 </div>                 <div class=\"form-row\">                     <label for=\"iso-size\">Sprite Size:</label>                     <input type=\"number\" id=\"iso-size\" value=\"64\" step=\"1\" min=\"1\">                 </div>                 <div style=\"display: flex; gap: 10px; margin-top: 20px;\">                     <button id=\"iso-cancel\">Cancel</button>                     <button id=\"iso-generate\">Generate</button>                 </div>           "
      }
    },
    "inputElementTypes": {
      "text": {
        "title": "text",
        "tag": "input"
      },
      "textarea": {
        "title": "Text Area",
        "tag": "textarea"
      }
    },
    "inputDataTypes": {
      "json": {
        "title": "JSON"
      },
      "string": {
        "title": "String"
      }
    }
  },
  "objectTypeDefinitions": [
    {
      "id": "configs",
      "name": "Configs",
      "singular": "Config",
      "category": "Settings",
      "isCore": true
    },
    {
      "id": "entities",
      "name": "Entities",
      "singular": "Entity",
      "category": "Scripts",
      "isCore": true
    },
    {
      "id": "components",
      "name": "Components",
      "singular": "Component",
      "category": "Scripts",
      "isCore": true
    },
    {
      "id": "renderers",
      "name": "Renderers",
      "singular": "Renderer",
      "category": "Scripts",
      "isCore": true
    },
    {
      "id": "functions",
      "name": "Functions",
      "singular": "Function",
      "category": "Scripts",
      "isCore": true
    },
    {
      "id": "propertyModules",
      "name": "Property Modules",
      "singular": "Property Module",
      "category": "Settings",
      "isCore": true
    },
    {
      "id": "towers",
      "name": "Towers",
      "singular": "Tower",
      "category": "Visuals"
    },
    {
      "id": "enemies",
      "name": "Enemies",
      "singular": "Enemy",
      "category": "Visuals"
    },
    {
      "id": "projectiles",
      "name": "Projectiles",
      "singular": "Projectile",
      "category": "Visuals"
    },
    {
      "id": "environment",
      "name": "Environment",
      "singular": "Environment",
      "category": "Visuals",
      "isCore": true
    },
    {
      "id": "upgrades",
      "name": "Upgrades",
      "singular": "Upgrade",
      "category": "Data"
    },
    {
      "id": "effects",
      "name": "Effects",
      "singular": "Effect",
      "category": "Data"
    },
    {
      "id": "waves",
      "name": "Waves",
      "singular": "Wave",
      "category": "Data"
    },
    {
      "id": "levels",
      "name": "Levels",
      "singular": "Level",
      "category": "Terrain",
      "isCore": true
    },
    {
      "id": "wavesets",
      "name": "Wave Sets",
      "singular": "Wave Set",
      "category": "Data"
    },
    {
      "id": "particles",
      "name": "Particles",
      "singular": "Particle",
      "category": "Visuals"
    },
    {
      "id": "themes",
      "name": "Themes",
      "singular": "Theme",
      "category": "Settings",
      "isCore": true
    },
    {
      "id": "modifierSets",
      "name": "Modifier Sets",
      "singular": "Modifier Set",
      "category": "Data"
    },
    {
      "id": "sounds",
      "name": "Sounds",
      "singular": "Sound",
      "category": "Audio",
      "isCore": true
    },
    {
      "id": "libraries",
      "name": "Libraries",
      "singular": "Library",
      "category": "Scripts",
      "isCore": true
    },
    {
      "id": "interfaces",
      "name": "Interfaces",
      "singular": "Interface",
      "category": "Scripts"
    },
    {
      "id": "modals",
      "name": "Modals",
      "singular": "Modal",
      "category": "Scripts"
    },
    {
      "id": "inputElementTypes",
      "name": "Input Elements",
      "singular": "Input Element",
      "category": "Settings"
    },
    {
      "id": "inputDataTypes",
      "name": "Input Data Types",
      "singular": "Input Data Type",
      "category": "Settings"
    }
  ],
  "configs": {
    "editor": {
      "title": "Editor Config",
      "editorCategories": "",
      "theme": "claude2",
      "propertyModules": [
        "terrainModule"
      ]
    }
  }
}; 

 export { DEFAULT_PROJECT_CONFIG };